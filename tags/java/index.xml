<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Svtter&#39;s Blog</title>
    <link>https://svtter.cn/tags/java/</link>
    <description>Recent content in Java on Svtter&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 17 Nov 2022 21:15:09 +0800</lastBuildDate>
    <atom:link href="https://svtter.cn/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use Mirror</title>
      <link>https://svtter.cn/post/2022-11-17-use-mirror/</link>
      <pubDate>Thu, 17 Nov 2022 21:15:09 +0800</pubDate>
      <guid>https://svtter.cn/post/2022-11-17-use-mirror/</guid>
      <description>&lt;p&gt;使用代理。在国内编程，使用代理非常重要。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Maven小记</title>
      <link>https://svtter.cn/2018/06/14/maven%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Thu, 14 Jun 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2018/06/14/maven%E5%B0%8F%E8%AE%B0/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;发现maven与Java，别有一番乐趣&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;入门建议：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html&#34;&gt;https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;现在很多文章其实写的都不如官方的文章，但是人们总是习惯性的从百度获取自己想要的某些资源。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java-如何使用vim开发Java</title>
      <link>https://svtter.cn/2015/01/01/java-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8vim%E5%BC%80%E5%8F%91java/</link>
      <pubDate>Thu, 01 Jan 2015 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2015/01/01/java-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8vim%E5%BC%80%E5%8F%91java/</guid>
      <description>&lt;p _=&#34;%&#34; endblockquote=&#34;endblockquote&#34;&gt;{% blockquote 本文出自 http://svtter.github.io svtter.github.io %}&#xA;&lt;p&gt;本文可以随意转载，但是转载请保留本信息.&lt;/p&gt;&lt;/p&gt;&#xA;&lt;p&gt;在网上搜索一番，大部分此类文章都是在说配置，而且配置讲的一看就是没有深入的撸vim。这个时候就&lt;/p&gt;&#xA;&lt;p&gt;需要我来深刻的讲讲这个问题了 — 国外也有一些开发者写过类似的文章，不过国外的开发者没有深层&lt;/p&gt;&#xA;&lt;p&gt;的讲讲具体如何配置，仅仅是比较简单的说了一下应该用什么。&lt;/p&gt;&#xA;&lt;p&gt;闲话少说，我们开始吧。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;本文的作者认为，本文的读者已经学会使用vim的初步，至于安装，启动之类的东西作者不再赘述，&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;望读者海涵。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;vimrc的配置&#34;&gt;Vimrc的配置&lt;/h2&gt;&#xA;&lt;p&gt;如果想要用Vim撸Java，首先一个问题就是许多IDE自带的查错功能，这个笔者希望使用Syntastic来实现。&lt;/p&gt;&#xA;&lt;p&gt;具体的方法是，安装Vundle（vim的插件配置工具，用于安装组合各类插件）。其实这个地方也可以不用&lt;/p&gt;&#xA;&lt;p&gt;Vundle，但是笔者认为，vimer配置大量插件的最佳方法就是使用vunlde，或者patheon等等。总之，一&lt;/p&gt;&#xA;&lt;p&gt;定需要一个插件管理。&lt;/p&gt;&#xA;&lt;p&gt;安装Vundle还是比较轻松的，在github上搜索一下，经过一系列步骤即可。然后同样是位于github，搜&lt;/p&gt;&#xA;&lt;p&gt;索Syntastic安装即可。&lt;/p&gt;&#xA;&lt;p&gt;Syntastic是一个检查语法的vim插件，不仅仅支持Java，各种都支持，具体可以看看Syntastic的wiki&lt;/p&gt;&#xA;&lt;h2 id=&#34;学习ant&#34;&gt;学习Ant&lt;/h2&gt;&#xA;&lt;p&gt;Ant是什么东西？简单来说，就是java的makefile。Syntastic的wiki对ant和maven均有支持，但是我个人&lt;/p&gt;&#xA;&lt;p&gt;学习了Ant，另外eclipse里面的ant等等 — 如果想要探究一下，可以查看一下这篇文章&lt;/p&gt;&#xA;&lt;p&gt;这里面说了一点笔者在ant上面的一点东西，还有ant学习的链接。&lt;/p&gt;&#xA;&lt;h2 id=&#34;配置syntastic&#34;&gt;配置Syntastic&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;PS: 期末周这么悠闲的写博客真的好吗！！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;说是配置Syntastic，更不如说是配置Syntastic的Java配置文件。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;首先你需要在你的&lt;code&gt;.vimrc&lt;/code&gt;中，添加 &lt;code&gt;let g:syntastic_java_javac_config_file_enabled = 1&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code&gt;用于使Syntastic读取配置文件生效。&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;选择&lt;code&gt;build.xml&lt;/code&gt;，使用命令&lt;code&gt;:SyntasticJavacEditConfig&lt;/code&gt;，输入:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code&gt;`let g:syntastic_java_javac_custom_classpath_command =&amp;lt;br /&amp;gt;&#xA;\ &amp;quot;ant -q build | grep echo | cut -f2- -d] | tr -d &#39; &#39; | tr &#39;:&#39; &#39;\n&#39;&amp;quot;`&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;重启Vim，语法检查就完成了。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;其他的插件&#34;&gt;其他的插件&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bundle ‘vim-scripts/javacomplete’&lt;/li&gt;&#xA;&lt;li&gt;Bundle ‘vim-scripts/javaDoc.vim’&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;” Bundle ‘vim-scripts/Java-Syntax-und-Folding’&lt;/li&gt;&#xA;&lt;li&gt;” Bundle ‘vim-javacompleteex’ “更好的 Java 补全插件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;以上插件均可以考虑使用，安装方法可能有所不同 — 但是个人认为最大的语法检查问题已经搞定了，&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java-Ant文件和Synastic-Vim支持</title>
      <link>https://svtter.cn/2014/12/29/java-ant%E6%96%87%E4%BB%B6%E5%92%8Csynastic-vim%E6%94%AF%E6%8C%81/</link>
      <pubDate>Mon, 29 Dec 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2014/12/29/java-ant%E6%96%87%E4%BB%B6%E5%92%8Csynastic-vim%E6%94%AF%E6%8C%81/</guid>
      <description>&lt;p _=&#34;%&#34; endblockquote=&#34;endblockquote&#34;&gt;{% blockquote 本文出自 http://svtter.github.io svtter.github.io %}&#xA;&lt;p&gt;本文可以随意转载，但是转载请保留本信息.&lt;/p&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文已经更新，请看 — 如何使用vim开发Java.&lt;/p&gt;&#xA;&lt;p&gt;本来想把本文命名为使用Vim写Java-Project的，但是个人认为这样并没有很高的开发效率，所以只是提&lt;/p&gt;&#xA;&lt;p&gt;供一个部分的解决方案，剩下的就由大家努力探索吧。。&lt;/p&gt;&#xA;&lt;p&gt;Java有个自己构建工程的工具叫做Ant, 全名&lt;code&gt;Apache Ant&lt;/code&gt;，好东西，最通俗的解释就是Java的&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;makefile&lt;/code&gt;，这里提供的方案，就是使用Ant或者maven来构建工程，然后通过Synastic的设置，来完成&lt;/p&gt;&#xA;&lt;p&gt;Java的代码检查。另外，java代码补全设置其实也是有的，但是具体的设置我没有好好研究过，主要是&lt;/p&gt;&#xA;&lt;p&gt;已经陪不起那个时间了。&lt;/p&gt;&#xA;&lt;p&gt;另外，Eclipse导出Java项目的时候，一个不错的方法就是&lt;code&gt;Export Ant Buildfiles&lt;/code&gt;，这就是ant文件。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.blogjava.net/amigoxie/archive/2007/11/09/159413.html&#34;&gt;Ant学习简单教程&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Maven我没有好好学，但是看wiki似乎Synastic对maven的支持比ant的支持更加优秀，也可能是mvn的构&lt;/p&gt;&#xA;&lt;p&gt;建方法上存在优势？这个我不清楚。有时间写一篇文章来好好的研究下。&lt;/p&gt;&#xA;&lt;p&gt;Ant这个东西构建的包有时候检查会出现问题，（如果采用目录编译的方法，那么就无法检查）。&lt;/p&gt;&#xA;&lt;p&gt;另外，需要不停的在目录下建立&lt;code&gt;.synastic_javac_config&lt;/code&gt;，着实烦人。但是如果使用了全局设置，改&lt;/p&gt;&#xA;&lt;p&gt;变了配置文件的根目录，也是极为不妥当的（不可能只有一个项目在编辑吧？另外改来改去，也是太麻&lt;/p&gt;&#xA;&lt;p&gt;烦了。）&lt;/p&gt;&#xA;&lt;p&gt;就是这样。。更多的是吐槽吧。&lt;/p&gt;&#xA;&lt;p&gt;对于上一篇文章提到的问题可以用设置classpath来解决。具体方法是将classpath添加到syntastic。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;use :SyntasticJavacEditClasspath and add workpath.&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java-import和package的用法</title>
      <link>https://svtter.cn/2014/12/28/java-import%E5%92%8Cpackage%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sun, 28 Dec 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2014/12/28/java-import%E5%92%8Cpackage%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文出自&lt;a href=&#34;http://svtter.github.io&#34;&gt;svtter.github.io&lt;/a&gt;&#xA;本文可以随意转载，但是转载请保留本信息.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;之前一直都是用eclipse开发Java，Vim修炼到今日，本来想要拉出来溜溜Java，奈何package和import的机制以及 synastic[自动检查代码的插件] 没有对于eclipse对java包类似的支持，所以只得滚回eclipse，然后使用vrapper了。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
