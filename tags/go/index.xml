<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on Svtter's Blog</title><link>https://svtter.cn/tags/go/</link><description>Recent content in Go on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 17 Nov 2022 21:15:09 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Use Mirror</title><link>https://svtter.cn/p/use-mirror/</link><pubDate>Thu, 17 Nov 2022 21:15:09 +0800</pubDate><guid>https://svtter.cn/p/use-mirror/</guid><description>&lt;p>使用代理。在国内编程，使用代理非常重要。&lt;/p>
&lt;p>如果不使用代理，代码包的下载，环境的构建会浪费你很多时间。有些环境因为高度依赖网络环境，使得我们如果不定制底层网络，无法获取某些资源。&lt;/p>
&lt;p>下面罗列几个推荐的代理。&lt;/p>
&lt;p>go: &lt;code>goproxy.io&lt;/code>
java:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://developer.aliyun.com/article/754038" target="_blank" rel="noopener"
>maven mirror&lt;/a>, edit &lt;code>~/.m2/settings.xml&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;mirror&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>nexus-aliyun&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;mirrorOf&amp;gt;&lt;/span>*&lt;span class="nt">&amp;lt;/mirrorOf&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>Nexus aliyun&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>http://maven.aliyun.com/nexus/content/groups/public&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/mirror&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>ruby: &lt;a class="link" href="https://gems.ruby-china.com/" target="_blank" rel="noopener"
>gem mirror&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ gem sources -l
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">https://gems.ruby-china.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 确保只有 gems.ruby-china.com&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>php:&lt;/p>
&lt;ul>
&lt;li>composer: &lt;code>composer config -g repos.packagist composer https://mirrors.aliyun.com/composer/&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>python:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener"
>tsinghua - pypi&lt;/a>&lt;/li>
&lt;li>&lt;code>pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>nodejs (javascript):&lt;/p>
&lt;ul>
&lt;li>cnpm: &lt;code>npm install -g cnpm --registry=http://registry.npm.taobao.org&lt;/code>&lt;/li>
&lt;li>tyarn: &lt;code>npm install -g tyarn&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Golang学习笔记</title><link>https://svtter.cn/p/golang%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Sun, 22 Jan 2017 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/golang%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>&lt;p>Golang的学习笔记。目前初步计划是学习 &lt;a class="link" href="https://tour.go-zh.org/" target="_blank" rel="noopener"
>Go-tour&lt;/a>&lt;/p>
&lt;h2 id="基础语法部分">基础语法部分
&lt;/h2>&lt;h3 id="数据类型">数据类型
&lt;/h3>&lt;p>string中单独一个字符’char’，是’byte’，也就是’uint8’。&lt;/p>
&lt;h3 id="for">for
&lt;/h3>&lt;p>go中的for与while是相同的。&lt;/p>
&lt;h3 id="defer">defer
&lt;/h3>&lt;p>defer 语句会延迟函数的执行直到上层函数返回。&lt;/p>
&lt;p>延迟调用的参数会立刻生成，但是在上层函数返回前函数都不会被调用。&lt;/p>
&lt;div class="codehilite">
&lt;pre>&lt;span>&lt;/span>&lt;span class="n">package&lt;/span> &lt;span class="n">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="s2">"fmt"&lt;/span>
&lt;span class="n">func&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">defer&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"world"&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">//&lt;/span>&lt;span class="n">defer&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"!"&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">fmt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"hello"&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/pre>
&lt;/div>
&lt;p>很有趣的一个特性，记录一下。&lt;/p>
&lt;p>注释掉的内容会输出&lt;/p>
&lt;div class="codehilite">
&lt;pre>&lt;span>&lt;/span>hello
!
world
&lt;/pre>
&lt;/div>
&lt;p>延迟的函数调用被压入一个栈中。当函数返回时， 会按照后进先出的顺序调用被延迟的函数调用。&lt;/p>
&lt;h3 id="range">range
&lt;/h3>&lt;p>for 循环的 range 格式可以对 slice 或者 map 进行迭代循环。&lt;/p>
&lt;p>当使用 for 循环遍历一个 slice 时，每次迭代 range 将返回两个值。 第一个是当前下标（序号），第二个是该下标所对应元素的一个拷贝。&lt;/p>
&lt;h3 id="slice">slice
&lt;/h3>&lt;p>一个关于slice的练习 &lt;a class="link" href="https://tour.go-zh.org/moretypes/15" target="_blank" rel="noopener"
>https://tour.go-zh.org/moretypes/15&lt;/a>&lt;/p>
&lt;p>灰度值？&lt;/p>
&lt;h3 id="map">map
&lt;/h3>&lt;p>map的练习 &lt;a class="link" href="https://tour.go-zh.org/moretypes/20" target="_blank" rel="noopener"
>https://tour.go-zh.org/moretypes/20&lt;/a>&lt;/p>
&lt;p>解答：&lt;/p>
&lt;p>!!!其中，make的用法需要尤为记忆。&lt;/p>
&lt;h2 id="方法">方法
&lt;/h2>&lt;p>Go 没有类。然而，仍然可以在结构体类型上定义方法。&lt;/p>
&lt;p>方法接收者 出现在 func 关键字和方法名之间的参数中。&lt;/p>
&lt;div class="codehilite">
&lt;pre>&lt;span>&lt;/span>&lt;span class="n">package&lt;/span> &lt;span class="n">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s2">"fmt"&lt;/span>
&lt;span class="s2">"math"&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nb">type&lt;/span> &lt;span class="n">Vertex&lt;/span> &lt;span class="n">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span> &lt;span class="n">float64&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">Vertex&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Abs&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="n">float64&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">math&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Sqrt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">X&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Y&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">func&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">v&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="o">&amp;&lt;/span>&lt;span class="n">Vertex&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">fmt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Abs&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/pre>
&lt;/div>
&lt;p>func 后面紧跟&lt;code>(v *Vertx)&lt;/code>，可以看作类方法。&lt;/p>
&lt;h2 id="错误">错误
&lt;/h2>&lt;p>&lt;a class="link" href="https://tour.go-zh.org/methods/8" target="_blank" rel="noopener"
>https://tour.go-zh.org/methods/8&lt;/a>&lt;/p>
&lt;h2 id="reader">Reader
&lt;/h2>&lt;p>Reader&lt;/p>
&lt;p>rot-Reader&lt;/p>
&lt;h2 id="http处理">Http处理
&lt;/h2>&lt;div class="codehilite">
&lt;pre>&lt;span>&lt;/span>&lt;span class="n">package&lt;/span> &lt;span class="n">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s2">"fmt"&lt;/span>
&lt;span class="s2">"log"&lt;/span>
&lt;span class="s2">"net/http"&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="nb">type&lt;/span> &lt;span class="n">Hello&lt;/span> &lt;span class="n">struct&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="n">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span> &lt;span class="n">Hello&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ServeHTTP&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="n">w&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">fmt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Fprint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">"Hello!"&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="n">func&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">var&lt;/span> &lt;span class="n">h&lt;/span> &lt;span class="n">Hello&lt;/span>
&lt;span class="n">err&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ListenAndServe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">"localhost:4000"&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">h&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/pre>
&lt;/div>
&lt;p>练习：&lt;/p>
&lt;h2 id="image">Image
&lt;/h2>&lt;p>image在golang中的定义是：&lt;/p>
&lt;div class="codehilite">
&lt;pre>&lt;span>&lt;/span>package image
type Image interface {
ColorModel() color.Model
Bounds() Rectangle
At(x, y int) color.Color
}
&lt;/pre>
&lt;/div>
&lt;p>练习：&lt;/p>
&lt;h2 id="goroutine">goroutine
&lt;/h2>&lt;p>练习：&lt;/p>
&lt;hr>
&lt;p>本文保留所有权力，转载请联系作者。&lt;/p></description></item></channel></rss>