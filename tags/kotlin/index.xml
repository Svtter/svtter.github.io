<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kotlin on Svtter's Blog</title><link>https://svtter.cn/tags/kotlin/</link><description>Recent content in Kotlin on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 26 Sep 2019 01:00:00 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>好香的Kotlin</title><link>https://svtter.cn/p/%E5%A5%BD%E9%A6%99%E7%9A%84kotlin/</link><pubDate>Thu, 26 Sep 2019 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E5%A5%BD%E9%A6%99%E7%9A%84kotlin/</guid><description>&lt;p>Kotlin 真是一个很可爱的语言。&lt;/p>
&lt;p>Kotlin 可以无缝和 Java 进行调用，这一个很大的优势。
再者，kotlin 是 intelij 和 Google 背书，都是大厂（噗嗤）。&lt;/p>
&lt;p>我感觉 kotlin 对于 java 就像是 python 对于 c++ 一样。
python 我认为，某种程度上是 C++ 脚本，比 lua 高级（当然也带来了许多性能损耗）。&lt;/p>
&lt;p>Kotlin 相比较于 python，要清晰。
因为 Kotlin 带着相对明显的类型系统，而 Python 则相对模糊。&lt;/p>
&lt;p>Kotlin 相对于 Java 要简洁。
Kotlin 长得很像 Golang，都是把类型放在后面。或者说，定义函数方法很像。只不过，少了一个“c”;)&lt;/p>
&lt;p>比如：&lt;/p>
&lt;ol>
&lt;li>Kotlin 相对于 Golang，有异常处理：&lt;/li>
&lt;li>类似于 Python 的 for..in&lt;/li>
&lt;li>灵活的“map”方法：&lt;/li>
&lt;li>甚至超过 Python 简洁的类定义&lt;/li>
&lt;li>什么？Python 里面的 dataclasses？&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>此外，还有大量的有趣的特性。当我逼不得已非要使用在 JVM 的环境下进行开发的时候，我想我的首选肯定是 kotlin。&lt;/p>
&lt;p>2020-03-23: 新浪图床都挂掉了，本文中的图片也跟着离去了。。&lt;/p></description></item></channel></rss>