<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ant on Svtter&#39;s Blog</title>
    <link>https://svtter.cn/tags/ant/</link>
    <description>Recent content in Ant on Svtter&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 29 Dec 2014 01:00:00 +0800</lastBuildDate>
    <atom:link href="https://svtter.cn/tags/ant/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java-Ant文件和Synastic-Vim支持</title>
      <link>https://svtter.cn/2014/12/29/java-ant%E6%96%87%E4%BB%B6%E5%92%8Csynastic-vim%E6%94%AF%E6%8C%81/</link>
      <pubDate>Mon, 29 Dec 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2014/12/29/java-ant%E6%96%87%E4%BB%B6%E5%92%8Csynastic-vim%E6%94%AF%E6%8C%81/</guid>
      <description>本文可以随意转载，但是转载请保留本信息.&#xA;本文已经更新，请看 — 如何使用vim开发Java.&#xA;本来想把本文命名为使用Vim写Java-Project的，但是个人认为这样并没有很高的开发效率，所以只是提&#xA;供一个部分的解决方案，剩下的就由大家努力探索吧。。&#xA;Java有个自己构建工程的工具叫做Ant, 全名Apache Ant，好东西，最通俗的解释就是Java的&#xA;makefile，这里提供的方案，就是使用Ant或者maven来构建工程，然后通过Synastic的设置，来完成&#xA;Java的代码检查。另外，java代码补全设置其实也是有的，但是具体的设置我没有好好研究过，主要是&#xA;已经陪不起那个时间了。&#xA;另外，Eclipse导出Java项目的时候，一个不错的方法就是Export Ant Buildfiles，这就是ant文件。&#xA;Ant学习简单教程 Maven我没有好好学，但是看wiki似乎Synastic对maven的支持比ant的支持更加优秀，也可能是mvn的构&#xA;建方法上存在优势？这个我不清楚。有时间写一篇文章来好好的研究下。&#xA;Ant这个东西构建的包有时候检查会出现问题，（如果采用目录编译的方法，那么就无法检查）。&#xA;另外，需要不停的在目录下建立.synastic_javac_config，着实烦人。但是如果使用了全局设置，改&#xA;变了配置文件的根目录，也是极为不妥当的（不可能只有一个项目在编辑吧？另外改来改去，也是太麻&#xA;烦了。）&#xA;就是这样。。更多的是吐槽吧。&#xA;对于上一篇文章提到的问题可以用设置classpath来解决。具体方法是将classpath添加到syntastic。&#xA;use :SyntasticJavacEditClasspath and add workpath.</description>
    </item>
  </channel>
</rss>
