<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dataset on Svtter's Blog</title><link>https://svtter.cn/tags/dataset/</link><description>Recent content in Dataset on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 24 Feb 2025 22:01:57 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/dataset/index.xml" rel="self" type="application/rss+xml"/><item><title>Dataset 和 DataLoader 的区别是什么</title><link>https://svtter.cn/p/dataset-%E5%92%8C-dataloader-%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88/</link><pubDate>Mon, 24 Feb 2025 22:01:57 +0800</pubDate><guid>https://svtter.cn/p/dataset-%E5%92%8C-dataloader-%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88/</guid><description>&lt;p>在 &lt;code>torch.utils.data&lt;/code> 中，有两个类，一个是&lt;code>Dataset&lt;/code>，另一个是&lt;code>DataLoader&lt;/code>。&lt;/p>
&lt;p>这两个类的主要区别是什么？&lt;/p>
&lt;p>Dataset 一般用于读取数据集的基础数据。例如，在 torch 给出的&lt;a class="link" href="https://pytorch.org/tutorials/beginner/data_loading_tutorial.html" target="_blank" rel="noopener"
>官网说明&lt;/a>中，用于展示数据集的数量，以及用于神经网络训练的单个样本。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">FaceLandmarkDataset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Dataset&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__len__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;表示数据集的数量&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__getitem__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">idx&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;返回某个下标的数据组合。例如，如果是图像和标签，应该是 {&amp;#39;img&amp;#39;: img, &amp;#39;label&amp;#39;: label} &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>与之相对的，DataLoader 则是一个可以并行读取数据的类。一般情况下，不需要进行继承然后改写。&lt;/p>
&lt;p>所以我们主要说说怎么用。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataloader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DataLoader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">transformed_dataset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">batch_size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shuffle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_workers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们可以看到，因为 DataLoader 的存在，因此实际上我们在实现 Dataset 的时候:&lt;/p>
&lt;ol>
&lt;li>不需要关注 shuffle: 为了神经网络训练的 batch不聚集在一个地方&lt;/li>
&lt;li>不需要考虑并行读取，因为有 &lt;code>num_worker&lt;/code>&lt;/li>
&lt;li>不需要考虑 &lt;code>batch_size&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>因此，DataLoader 可以比较容易的完成一些数据集处理前的必要工作。&lt;/p>
&lt;p>如果使用 lightning，那么还需要进一步了解 DataModule。我会在另外一篇博客中说明。&lt;/p></description></item><item><title>Where to Put Your Data Folder.md</title><link>https://svtter.cn/p/where-to-put-your-data-folder.md/</link><pubDate>Mon, 24 Feb 2025 14:34:56 +0800</pubDate><guid>https://svtter.cn/p/where-to-put-your-data-folder.md/</guid><description>&lt;p>在训练模型时，我们应该尽可能的把数据和代码放在同一个位置。&lt;/p>
&lt;p>放在同一个位置可以避免路径的问题，例如给出数据的绝对路径等。&lt;/p>
&lt;p>比如，如果我将路径设置为，&lt;code>./data/&lt;/code>，那么我只需要把数据放在&lt;code>./data&lt;/code>目录下即可。&lt;/p>
&lt;p>我可以通过&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ln -s &lt;span class="k">$(&lt;/span>source-path-of-dataset&lt;span class="k">)&lt;/span> ./data
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>来将数据从其他位置链接过来。&lt;/p>
&lt;p>如果在相同的主机上，git 是可以自动同步这些 link 的。&lt;/p>
&lt;p>但如果在不同的主机上，就需要自己做好管理了。&lt;/p></description></item><item><title>图片数据集的浏览</title><link>https://svtter.cn/p/%E5%9B%BE%E7%89%87%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E6%B5%8F%E8%A7%88/</link><pubDate>Sun, 12 Jan 2025 18:31:12 +0800</pubDate><guid>https://svtter.cn/p/%E5%9B%BE%E7%89%87%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E6%B5%8F%E8%A7%88/</guid><description>&lt;p>数据集浏览是个比较麻烦的事情。尤其是数据集比较大的时候。&lt;/p>
&lt;p>npy (numpy array) ，h5 文件是两种常见的数据存储方式。
h5 文件的缺点是很容易产生数据损坏。笔者使用的时候多次遇见 h5 文件打不开的问题。
npy 文件在读取速度，文件传输方面具有很明显的优势。缺点是一次性加载到内存中，如果服务器不行，很容易爆掉。&lt;/p>
&lt;p>常见的图像数据集一般是将 label 和 image 分开放。例如 COCO 等。这样一来，也可以用文件浏览器去查看图片，可以快速的观察图片的特点。但一般情况下，我们不会在本地的电脑上查看图片，而是更多的在服务上操作数据集。&lt;/p>
&lt;p>2024，结合 torch，我感觉还是 matplotlib 直接绘图会方便一些。matplotlib 直接绘图一般是展示单张图片。但是如果利用 subplot，可以同时展示更多图片。如果用了 opencv，可以将部分标签值打印上去。不过也有缺点：如果使用的是远程服务器，生成图片的传输过程需要占用较多的带宽。
具体采用什么方式，还得自己做判断呐！&lt;/p></description></item></channel></rss>