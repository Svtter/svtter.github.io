<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Logseq on Svtter's Blog</title><link>https://svtter.cn/tags/logseq/</link><description>Recent content in Logseq on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 08 Feb 2025 18:18:29 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/logseq/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 git 管理 logseq 文件</title><link>https://svtter.cn/p/%E4%BD%BF%E7%94%A8-git-%E7%AE%A1%E7%90%86-logseq-%E6%96%87%E4%BB%B6/</link><pubDate>Sat, 08 Feb 2025 18:18:29 +0800</pubDate><guid>https://svtter.cn/p/%E4%BD%BF%E7%94%A8-git-%E7%AE%A1%E7%90%86-logseq-%E6%96%87%E4%BB%B6/</guid><description>&lt;p>因为经常同时使用多台设备，我经常会遇到在一处写好文章，在另外一台设备继续使用 logseq 的问题。直接复制粘贴显得很笨。&lt;/p>
&lt;p>我大概分了两个阶段处理这个问题。第一个阶段是用移动硬盘，在不同系统之间直接拷贝。这个时候用到 git bare repository.&lt;/p>
&lt;h2 id="stage-1">Stage 1
&lt;/h2>&lt;p>&lt;code>git init --bare logseq-database.git&lt;/code>&lt;/p>
&lt;p>然后再其他的 working git repository 上，添加 remote。例如我的磁盘路径是&lt;code>E:\&lt;/code>。&lt;/p>
&lt;p>&lt;code>git remote add origin E:\logseq-database.git&lt;/code>&lt;/p>
&lt;p>如此一来可以直接在不同设备之间同步 logseq 数据。&lt;/p>
&lt;h2 id="stage-2">Stage 2
&lt;/h2>&lt;p>我发现使用移动硬盘还是不太方便。我将一台10年前的 thinkpad 刷机，安装了 gitea。我一开始使用的是 gogs，但是 gogs 对于 submodule 处理不太友好，有莫名其妙的 bug。因此最终还是
使用了 gitea。使用 gitea 之后，我将原本的 git 库迁移到自己的本地机器上。例如：&lt;code>http://gitea.local/svtter/logseq-database.git&lt;/code>。&lt;/p>
&lt;h2 id="stage-3">Stage 3
&lt;/h2>&lt;p>我发现大型文件存储和共享容易出问题。我增加了 &lt;code>git-lfs&lt;/code> 的支持，通过&lt;/p>
&lt;p>&lt;code>git lfs install&lt;/code>&lt;/p>
&lt;p>以及&lt;/p>
&lt;p>&lt;code>git lfs track *.pdf&lt;/code>&lt;/p>
&lt;p>来避免大文件在&lt;code>.git&lt;/code>目录中留下太多的数据。&lt;/p>
&lt;h2 id="stage-4">Stage 4
&lt;/h2>&lt;p>定期备份一部分数据到&lt;code>GitHub&lt;/code>。但是我现在一般不这么做了。&lt;/p>
&lt;p>使用 git 在合并的时候要注意一个问题。如果文件名称有变化，自动化的合并会直接忽略。
大概是这样：我在两个设备上同时修改了一个文件，其中一个文件不仅仅是修改了内容，还更改了文件名。然后，两个设备分别进行了 git commit。
如此一来，git在进行合并的时候，不会提示冲突。git 自动化合并之后，其中一个设备上所作的修改会消失。&lt;/p>
&lt;p>针对这个问题，处理方法是在合并的时候尽可能采用 rebase 的方法。==&amp;gt; 但是 rebase 合并文件的时候速度很慢，要自己手动处理的内容很多。&lt;/p>
&lt;p>因此，在两个设备上同时修改一个文件的时候，首先要拉一下远端的修改。其次，应尽可能避免修改文件名。否则，可能会导致变更消失。&lt;/p>
&lt;p>好在 git commit 历史记录一直都在。实在不行，就从 commit 记录里找到丢失的部分，然后补充一个新的提交。&lt;/p></description></item><item><title>Use Logseq as Documentation</title><link>https://svtter.cn/p/use-logseq-as-documentation/</link><pubDate>Sun, 12 May 2024 08:55:42 +0800</pubDate><guid>https://svtter.cn/p/use-logseq-as-documentation/</guid><description>&lt;p>logseq 是一个非常好用的笔记工具。我们之前已经介绍过关于 logseq 的内容。如果想要了解 logseq，可以看我之前的&lt;a class="link" href="https://svtter.github.io/post/2023-12-18-how-to-use-logseq/" target="_blank" rel="noopener"
>文章&lt;/a>。&lt;/p>
&lt;p>在本文中，我们介绍如何将 logseq 作为软件的、项目的文档，以及为什么。&lt;/p>
&lt;h2 id="why">WHY
&lt;/h2>&lt;p>对于 python 开发者，传统的文档系统有几个，&lt;a class="link" href="https://mkdocs.org" target="_blank" rel="noopener"
>mkdocs&lt;/a>，&lt;a class="link" href="https://https://docs.readthedocs.io/en/stable/" target="_blank" rel="noopener"
>readthedocs&lt;/a>。这些文档系统很好用，可以采用纯文本，通过 git 来管理，并且支持富文本，包括markdown 以及 rst。&lt;/p>
&lt;p>笔者对于开源项目的文档，有几个假设：&lt;/p>
&lt;ol>
&lt;li>开源项目的文档，要放在代码仓库里。&lt;/li>
&lt;li>文档的变更需要能够追溯。我们可以借助 git 实现。&lt;/li>
&lt;li>较好的浏览体验&lt;/li>
&lt;li>开源，以此来保证工具的未来持续可用&lt;/li>
&lt;/ol>
&lt;p>因此，我们选用 logseq 直接作为开源项目的文档，以及文档系统。logseq 能够很好的支持不同的文件同步，以及借助 git 实现历史追溯。添加图片也不是难事。&lt;/p>
&lt;p>使用 logseq 最大的优势在于其双向连接，以及较好的全文搜索。相比之下，mkdocs 以及 readthedocs，虽然功能强大，但是编辑能力相对弱一些。&lt;/p>
&lt;h2 id="howto">HOWTO
&lt;/h2>&lt;p>想要使用 logseq 作为文档系统，只需要在 logseq 中点击添加图谱，然后在 git repository 中，添加到 &lt;code>docs/&lt;/code>目录下即可。&lt;/p>
&lt;ul>
&lt;li>&lt;img src="https://svtter.cn/images/logseq-doc.png"
loading="lazy"
alt="logseq-doc.png"
>&lt;/li>
&lt;/ul>
&lt;p>添加完成后，可以单独创建一个&lt;code>[[HOME]]&lt;/code>页面，并且收藏，来让用户能够快速找到 HOME 页。对于其他的开发者，也可以通过双向连接来快速找到想要找到的概念。&lt;/p>
&lt;p>之后，如果开发者需要修改文档，只需要在 logseq 中进行修改，然后提交到 git 中即可。&lt;/p>
&lt;h2 id="结">结
&lt;/h2>&lt;p>本文中我们讨论了如何使用 logseq 作为软件项目的文档，简单描述了使用其作为文档的优越性。&lt;/p>
&lt;p>当然，使用 logseq 也会引入新的问题。最大的问题是，用户如果不使用 logseq，就完全看不到文档了。除此之外，logseq 的页面公开也不是特别方便。
这些问题应该有对应的解决方案。在这里就不赘述了。&lt;/p></description></item><item><title>How to Use Logseq</title><link>https://svtter.cn/p/how-to-use-logseq/</link><pubDate>Mon, 18 Dec 2023 11:49:12 +0800</pubDate><guid>https://svtter.cn/p/how-to-use-logseq/</guid><description>&lt;p>logseq 是一种新型的知识工具。开源，免费（暂时），可以自己管理数据。&lt;/p>
&lt;h3 id="概念">概念
&lt;/h3>&lt;p>logseq 底层数据结构使用了 markdown。因此，每次创建新的 tag 或者&lt;code>[[]]&lt;/code>的时候，都可以认为创建了一个新的 page。在这里基础上，来进一步理解 logseq。&lt;/p>
&lt;h3 id="definition">Definition
&lt;/h3>&lt;ul>
&lt;li>&lt;a class="link" href="https://logseq.com/blog/about" target="_blank" rel="noopener"
>关于&lt;/a>&lt;/li>
&lt;li>#tags: 标签，啥时候都能用；使用后要追加解释。&lt;/li>
&lt;/ul>
&lt;h3 id="problems">Problems
&lt;/h3>&lt;p>问题清单。&lt;/p>
&lt;h4 id="目录是什么">目录是什么？
&lt;/h4>&lt;p>&lt;code>#Contents&lt;/code>目录是全局的，用于查看所有文档的工具&lt;/p>
&lt;h4 id="如何使用插件">如何使用插件？
&lt;/h4>&lt;p>设置好 logseq 的代理服务器，即可使用。&lt;/p>
&lt;p>我推荐的插件有:&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/images/logseq-plugins-list.png"
loading="lazy"
alt="logseq"
>&lt;/p>
&lt;ul>
&lt;li>git 用来管理同步的笔记&lt;/li>
&lt;li>goto today 用于快速定位到今天&lt;/li>
&lt;li>todo 用于管理待办事项&lt;/li>
&lt;li>calendar 把 logseq 转换成日历工具&lt;/li>
&lt;li>toc 用于生成目录&lt;/li>
&lt;/ul>
&lt;h3 id="usage">Usage
&lt;/h3>&lt;ul>
&lt;li>使用 logseq 整理论文&lt;/li>
&lt;li>右上角三个点，可以增强 logseq
&lt;ul>
&lt;li>Use plugins：插件可以增强 logseq 的功能&lt;/li>
&lt;li>Use theme：主题可以让 logseq 的可读性变得更好&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="references">References
&lt;/h3>&lt;ul>
&lt;li>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/450069864" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/450069864&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Logseq Plugin</title><link>https://svtter.cn/p/logseq-plugin/</link><pubDate>Tue, 05 Sep 2023 18:31:22 +0800</pubDate><guid>https://svtter.cn/p/logseq-plugin/</guid><description>&lt;p>为了能够更好的使用 &lt;a class="link" href="https://logseq.com/" target="_blank" rel="noopener"
>logseq&lt;/a>，可以安装一些插件。&lt;/p>
&lt;p>我目前使用的几个插件是：&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/images/logseq-plugin.png"
loading="lazy"
alt="Alt text"
>&lt;/p>
&lt;p>建议安装如下几个插件：&lt;/p>
&lt;h2 id="tabs">tabs
&lt;/h2>&lt;p>tabs 可以打开不同的标签页，来增强logseq打开不同页面的功能。&lt;/p>
&lt;h2 id="bonofix-theme">Bonofix #theme
&lt;/h2>&lt;p>推荐 Bonofix 这个主题。能够很清楚的展示 tag。&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/images/logseq-plugin-2.png"
loading="lazy"
alt="Alt text"
>&lt;/p>
&lt;p>例如：&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/images/logseq-plugin-3.png"
loading="lazy"
alt="实际预览图"
>&lt;/p>
&lt;h2 id="calendar">Calendar
&lt;/h2>&lt;p>能够打开右上角的按键，查看自己的日记。&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/images/logseq-plugin-4.png"
loading="lazy"
alt="实际预览图"
>&lt;/p>
&lt;h2 id="bullet-threading">Bullet threading
&lt;/h2>&lt;p>高亮选择的条目。&lt;/p></description></item></channel></rss>