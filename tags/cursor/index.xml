<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cursor on Svtter's Blog</title><link>https://svtter.cn/tags/cursor/</link><description>Recent content in Cursor on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 06 Jul 2025 10:29:43 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/cursor/index.xml" rel="self" type="application/rss+xml"/><item><title>Cline Might Be Better Than Cursor</title><link>https://svtter.cn/p/cline-might-be-better-than-cursor/</link><pubDate>Sun, 06 Jul 2025 10:29:43 +0800</pubDate><guid>https://svtter.cn/p/cline-might-be-better-than-cursor/</guid><description>&lt;img src="https://svtter.cn/p/cline-might-be-better-than-cursor/pics/bg.webp" alt="Featured image of post Cline Might Be Better Than Cursor" />&lt;p>今天尝试了一下 cline 的编辑能力（是 #1 tool on openrouter)，似乎比我想象的要调理和强大的多。&lt;/p>
&lt;h2 id="界面显示">界面显示
&lt;/h2>&lt;p>cline 能够查看发送给大模型的 context。这一点相比于 cursor 要透明很多。&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/cline-might-be-better-than-cursor/pics/cline-clip.png"
width="552"
height="465"
srcset="https://svtter.cn/p/cline-might-be-better-than-cursor/pics/cline-clip_hu_eaaa7125a04d835d.png 480w, https://svtter.cn/p/cline-might-be-better-than-cursor/pics/cline-clip_hu_c54a7197038a58e6.png 1024w"
loading="lazy"
alt="gui"
class="gallery-image"
data-flex-grow="118"
data-flex-basis="284px"
>&lt;/p>
&lt;h2 id="测试的任务">测试的任务
&lt;/h2>&lt;p>原始任务：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">帮我创建windows桌面项目，使用 c# 编写，可以设置 windows 网络为 dhcp，或者固定ip+网关+DNS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="运行过程">运行过程
&lt;/h2>&lt;p>整体运行还是比较流畅的，除了遇到了一个解决不了的问题（无法显示 UI）&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/cline-might-be-better-than-cursor/pics/interactive.png"
width="523"
height="1780"
srcset="https://svtter.cn/p/cline-might-be-better-than-cursor/pics/interactive_hu_448c51fd8829035d.png 480w, https://svtter.cn/p/cline-might-be-better-than-cursor/pics/interactive_hu_26ce6c43bfd5c969.png 1024w"
loading="lazy"
alt="interactive"
class="gallery-image"
data-flex-grow="29"
data-flex-basis="70px"
>&lt;/p>
&lt;p>后来发现是因为 windows 应用初始化的时候可能设置为 null。&lt;/p>
&lt;h2 id="费用问题">费用问题
&lt;/h2>&lt;p>Cline 操作文件的过程还是比较流畅的，但是费用太高了。我操作了一上午，花费了 $3.17 美元，还没能把事情搞定。&lt;/p>
&lt;p>基本上我一个周编程时间是4天，因此两个周就能达到 cursor 一个月的订阅费用了。&lt;/p>
&lt;p>除非 cline 有足够的优势，否则我应该不会选择 cline。&lt;/p></description></item><item><title>Config devcontainer.md</title><link>https://svtter.cn/p/config-devcontainer.md/</link><pubDate>Wed, 26 Mar 2025 20:17:47 +0800</pubDate><guid>https://svtter.cn/p/config-devcontainer.md/</guid><description>&lt;img src="https://svtter.cn/p/config-devcontainer.md/image.png" alt="Featured image of post Config devcontainer.md" />&lt;p>有时候，尽管我们启动一个 docker 环境可以执行代码，但是 vscode 补全未能生效。&lt;/p>
&lt;p>这是由于相关的库都在 container 中，我们 vscode 一般是运行在 host os 上。&lt;/p>
&lt;p>为了解决这个问题，我们可以在项目根目录下，使用 docker-compose.yml 来创建一个开发环境。&lt;/p>
&lt;p>然后，创建一个&lt;code>.devcontainer/devcontainer.json&lt;/code>文件。&lt;/p>
&lt;p>例如，如果你要开发 python 的程序，可以使用下面的 &lt;code>.devcontainer/devcontainer.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;MyPython&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;dockerComposeFile&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;../docker-compose.yml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;service&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;notebook&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">service&lt;/span> &lt;span class="err">in&lt;/span> &lt;span class="err">your&lt;/span> &lt;span class="err">docker-compose.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;workspaceFolder&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/app&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;shutdownAction&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;none&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;customizations&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;vscode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;extensions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ms-python.python&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ms-azuretools.vscode-docker&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;tamasfe.even-better-toml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;charliermarsh.ruff&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ms-python.black-formatter&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ms-toolsai.jupyter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如此一来，就可以启动一个安装好相关环境的『子』系统了。&lt;/p>
&lt;p>深入阅读：&lt;a class="link" href="https://blog.roboflow.com/nvidia-docker-vscode-pytorch/#installing-docker-for-machine-learning" target="_blank" rel="noopener"
>Develop like a Pro with NVIDIA + Docker + VS Code + PyTorch&lt;/a>。&lt;/p></description></item><item><title>如何应对 AI 编程助手带来的技术革新？</title><link>https://svtter.cn/p/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9-ai-%E7%BC%96%E7%A8%8B%E5%8A%A9%E6%89%8B%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E9%9D%A9%E6%96%B0/</link><pubDate>Tue, 10 Sep 2024 20:33:05 +0800</pubDate><guid>https://svtter.cn/p/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9-ai-%E7%BC%96%E7%A8%8B%E5%8A%A9%E6%89%8B%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E9%9D%A9%E6%96%B0/</guid><description>&lt;p>AI 编程助手已经越来越强大了。近期我也使用了 &lt;a class="link" href="https://www.cursor.com/" target="_blank" rel="noopener"
>cursor&lt;/a>，体验非常好。我也为了 cursor 充值了一波。&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9-ai-%E7%BC%96%E7%A8%8B%E5%8A%A9%E6%89%8B%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E9%9D%A9%E6%96%B0/pics/buy-cursor.png"
width="2774"
height="754"
srcset="https://svtter.cn/p/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9-ai-%E7%BC%96%E7%A8%8B%E5%8A%A9%E6%89%8B%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E9%9D%A9%E6%96%B0/pics/buy-cursor_hu_3559878c871635e9.png 480w, https://svtter.cn/p/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9-ai-%E7%BC%96%E7%A8%8B%E5%8A%A9%E6%89%8B%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%8A%80%E6%9C%AF%E9%9D%A9%E6%96%B0/pics/buy-cursor_hu_439b54427a675652.png 1024w"
loading="lazy"
alt="bug-cursor"
class="gallery-image"
data-flex-grow="367"
data-flex-basis="882px"
>&lt;/p>
&lt;p>我想与 AI 协同工作，这是未来的趋势。同时也意味着，ai 会替代很多工程师的工作。这个不可避免的未来，实际上这要求我们工程师要具备更强的表达能力，能够让ai模型理解我们要做什么。&lt;/p>
&lt;h2 id="作为可能被替代的工程师我们应该怎么办">作为可能被替代的工程师，我们应该怎么办？
&lt;/h2>&lt;ol>
&lt;li>使用 AI 技术，而不是抗拒它。你不可能让你的竞争对手不使用 ai 技术。&lt;/li>
&lt;li>将 AI 技术找到最适合自己的 AI 技术。就像是我们在某天下午找到一个自己最适应的 IDE 一样。然后，就像是挑选供应商一样，选择自己的 AI 技术供应商。性能最高的不一定是最好的。OpenAI 不是唯一的选择，claude 也不是。&lt;/li>
&lt;li>AI 是一种基础资源。就像水电，以及现在的互联网。这个观点来自&lt;a class="link" href="https://www.gsb.stanford.edu/insights/andrew-ng-why-ai-new-electricity" target="_blank" rel="noopener"
>Andrew Ng: Why AI Is the New Electricity&lt;/a>。生活支出中，需要为此支付一部分费用。&lt;/li>
&lt;/ol>
&lt;p>当我们能够较好的使用多种 AI 技术的时候，AI 对我们的威胁就不存在了。目前 AI 技术的发展来看，本质上还是人与人之间的竞争。
我们已经掌控了 AI Editor，让他们为我们所用。那么我们就可以更高效的编程，或者节省下来宝贵的时间，可以留给我们的家人。&lt;/p>
&lt;h2 id="未来呢">未来呢？
&lt;/h2>&lt;p>我们应该多关注那些 AI 无法完成的工作，例如数学和更加复杂的逻辑。现在 AI 对于复杂逻辑的思考能力是不及人类的，对于多方面的复杂信息处理能力较弱。&lt;/p>
&lt;p>如果更好的 AI 出现了怎么办？
我想共产主义是一个好的途径（🤣）。实际上，共产主义追求的不是平均财富，而是人们能够在生产力极其庞大的情况下，做自己想做的事情，也能满足自己的物质和精神需要。&lt;/p></description></item></channel></rss>