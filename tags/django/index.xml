<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Django on Svtter&#39;s Blog</title>
    <link>https://svtter.github.io/tags/django/</link>
    <description>Recent content in Django on Svtter&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 12 Jul 2024 16:20:32 +0800</lastBuildDate>
    <atom:link href="https://svtter.github.io/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>New Usage of typing module in python</title>
      <link>https://svtter.github.io/post/2024-07-25-new-usage-of-typing/</link>
      <pubDate>Fri, 12 Jul 2024 16:20:32 +0800</pubDate>
      <guid>https://svtter.github.io/post/2024-07-25-new-usage-of-typing/</guid>
      <description>&lt;p&gt;我原本想要分析一下 django webpack；但是写了一半，为了资料论述严谨，又不得不学习了 django component；在 django component 中，又发现了自己之前不知道的一些机制。无奈，先聊聊遇到的 typing 问题吧！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django and Webpack</title>
      <link>https://svtter.github.io/post/2024-07-06-django-and-webpack/</link>
      <pubDate>Sat, 06 Jul 2024 15:21:55 +0800</pubDate>
      <guid>https://svtter.github.io/post/2024-07-06-django-and-webpack/</guid>
      <description>&lt;p&gt;Webpack is a modern development method for frontend projects. Django is a common backend development framework for Python developers.&lt;/p&gt;&#xA;&lt;p&gt;I believe that developing with Webpack can make Django development faster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024-Q1 Summary</title>
      <link>https://svtter.github.io/post/2024-04-12-2024-q1-summary/</link>
      <pubDate>Fri, 12 Apr 2024 11:00:07 +0800</pubDate>
      <guid>https://svtter.github.io/post/2024-04-12-2024-q1-summary/</guid>
      <description>&lt;p&gt;第一季度过的如此之快！效率感觉不高，但实际上做的东西还可以。开心！&lt;/p&gt;</description>
    </item>
    <item>
      <title>给老 Django 工程师的初学者 react 教程</title>
      <link>https://svtter.github.io/post/2024-03-12-react-for-old-django/</link>
      <pubDate>Tue, 12 Mar 2024 09:38:36 +0800</pubDate>
      <guid>https://svtter.github.io/post/2024-03-12-react-for-old-django/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;这篇文章的文字水平一般。之所以要写这篇文章，一方面是为了记录自己的开发历程，另一方面是为了少部分同频的伙伴给予引导。也是为了完成每个月博客文章的 KPI。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Use Vue with Django, Meet CSRF</title>
      <link>https://svtter.github.io/post/2023-09-03-vue-django-csrf/</link>
      <pubDate>Sun, 03 Sep 2023 14:12:47 +0800</pubDate>
      <guid>https://svtter.github.io/post/2023-09-03-vue-django-csrf/</guid>
      <description>&lt;p&gt;在使用 Vue 的时候，如何向 Django 提交 form？&lt;/p&gt;</description>
    </item>
    <item>
      <title>Crazy Import</title>
      <link>https://svtter.github.io/post/2022-05-09-crazy-import/</link>
      <pubDate>Mon, 09 May 2022 14:02:27 +0800</pubDate>
      <guid>https://svtter.github.io/post/2022-05-09-crazy-import/</guid>
      <description>&lt;p&gt;最近发现 Django settings 在使用的时候，容易出现不经过检查的问题。&#xA;因此，想要在 settings 的基础上严格约束一下，减少问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ORM 中的 Pattern</title>
      <link>https://svtter.github.io/post/2021-11-20-orm-pattern/</link>
      <pubDate>Sat, 20 Nov 2021 10:00:32 +0800</pubDate>
      <guid>https://svtter.github.io/post/2021-11-20-orm-pattern/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;最近在做技术选型，想要引入一些新的开发语言，开发技术到技术团队。大众编程语言在 WEB 方面的稳定性，已经被人所熟知了。但是数据库版本控制方面，每个程序设计语言做的深度和稳定性都有所区别。数据库版本控制和 ORM 密切相关。而&amp;hellip;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Django tricks</title>
      <link>https://svtter.github.io/2019/01/08/django-tricks/</link>
      <pubDate>Tue, 08 Jan 2019 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2019/01/08/django-tricks/</guid>
      <description>关于 session django.contrib.sessions.middleware | Django documentation | Django&#xA;session 是使用 cookie 来进行判断的，通过 session_cookie_name 来提取，然后通过 SessionStore() 来保存。&#xA;因此，Django 也是通过 sessionid 来区分用户；（或者其他什么名称）。&#xA;使用 cache 作为全局变量 cache.set(‘foo’, ‘bar’) # another function cache.get(‘foo’) # get ‘bar’&#xA;使用 cache , django-redis 是一个好方法。可以在使用 cache.lock变量，在应用层面加锁，来完成异步操作，还可以支持分布式应用，十分方便。</description>
    </item>
    <item>
      <title>迁移 Django Model id 为 uuid</title>
      <link>https://svtter.github.io/2018/12/06/%E8%BF%81%E7%A7%BB-django-model-id-%E4%B8%BA-uuid/</link>
      <pubDate>Thu, 06 Dec 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2018/12/06/%E8%BF%81%E7%A7%BB-django-model-id-%E4%B8%BA-uuid/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.klette.us/migrate-django-models-to-uuid-primary-key/&#34;&gt;https://www.klette.us/migrate-django-models-to-uuid-primary-key/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;又是一篇渣翻&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;老设计决策有时候会让你很难受，下面就是一个例子。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django 写个过滤器 filter</title>
      <link>https://svtter.github.io/2018/11/05/django-%E5%86%99%E4%B8%AA%E8%BF%87%E6%BB%A4%E5%99%A8/</link>
      <pubDate>Mon, 05 Nov 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2018/11/05/django-%E5%86%99%E4%B8%AA%E8%BF%87%E6%BB%A4%E5%99%A8/</guid>
      <description>用 Django 快速开发一个项目，发现 Django 的模板本身不带有整除功能，因此自己手写一个。&#xA;这是目录结构。在 urls.py 添加 app 的名称，例如 app_name = ‘app’ ，然后在与models.py 同级的目录下，新建一个 python 包， templatetags 的，新建自己需要的包名即可。&#xA;app_extra.py：&#xA;这里因为需求比较简单，因此直接就赋值了 11.&#xA;应用到模板中：&#xA;随后即可看到结果。&#xA;此外，寻得两个比较好用 template 插件&#xA;实现的东西虽然不多，但是起码把我不想关心的逻辑封装起来了。。</description>
    </item>
    <item>
      <title>使用Docker时遇到的sitemap问题</title>
      <link>https://svtter.github.io/2017/12/27/%E4%BD%BF%E7%94%A8docker%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84sitemap%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 27 Dec 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2017/12/27/%E4%BD%BF%E7%94%A8docker%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84sitemap%E9%97%AE%E9%A2%98/</guid>
      <description>这两天感觉博客访问量已经不能靠用嘴宣传了，于是决定做一下sitemap，但是发现django自带的sitemap生成器存在这样的问题：生成的sitemap是依照container的hostname来显示的。&#xA;为此我查询了一下其他人是怎么搞的，发现他们都把nginx和django放在一个容器下——但是如此构建不仅麻烦，似乎违背了docker的构建思路，在一个container里面放了多个进程。因此，我认为下面的方案是合理的。&#xA;解决方案 Enabling the sites framework To enable the sites framework, follow these steps:&#xA;Add ‘django.contrib.sites’ to your INSTALLED_APPS setting.&#xA;Define a SITE_ID setting: SITE_ID = 1&#xA;Run migrate. django.contrib.sites registers a post_migrate signal handler which creates a default site named example.com with the domain example.com. This site will also be created after Django creates the test database. To set the correct name and domain for your project, you can use a data migration.</description>
    </item>
  </channel>
</rss>
