<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Svtter&#39;s Blog</title>
    <link>https://svtter.cn/tags/c%23/</link>
    <description>Recent content in C# on Svtter&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 22 Jan 2017 01:00:00 +0800</lastBuildDate>
    <atom:link href="https://svtter.cn/tags/c%23/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>最近在写Csharp</title>
      <link>https://svtter.cn/2017/01/22/%E6%9C%80%E8%BF%91%E5%9C%A8%E5%86%99csharp/</link>
      <pubDate>Sun, 22 Jan 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/01/22/%E6%9C%80%E8%BF%91%E5%9C%A8%E5%86%99csharp/</guid>
      <description>&lt;p&gt;没错就是在写c#桌面程序。。&lt;/p&gt;&#xA;&lt;p&gt;简单记录一下C#的相关东西。c#感觉写起来比Java等顺手，可能是因为遇到问题可以很快的搜索到——一方面也是技 术比较老旧，虽然用不了一些比较新的技术，但是一旦出了问题，很多都能很快的搜索到，不用耗费很长时间。&lt;/p&gt;&#xA;&lt;p&gt;使用c#开发桌面，没毛病，以前比较复杂的功能在C#上实现起来感觉非常简单，例如浮动窗口，任务栏，快捷键等。 Windows程序设计这本书简单的读了一点，感觉有时间还可以再读读，对于windows的核心机制可以有所了解。此外， Linux类似的书籍也可以看看。win32编程的确是有点痛苦，主要是上手速度比较慢，然后界面设计等，感觉不如c# 来的顺手，可能也是由于我没有用新vistual studio去尝试。当然本质问题肯定还是因为win32-api之前没怎么学， 此外，windows核心编程没怎么看。轮子哥的GacUI简单的看了一下，但是担心win98用不了【还有win2k】，GacUI 应付这种需求，恐怕没什么意思了。&lt;/p&gt;&#xA;&lt;p&gt;有时间写一个简单的winapp开发教程，起码证明自己慢慢做过一个东西。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2017-01-26&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;不打算更新winapp开发教程了。现在比较主流的开发框架：Electron, PyQt5, QWebView。都可以使用cpp扩展——虽然对于win2k之类的支持不太行，但是如果找了一份面向2k，xp等编程的工作我个人认为还是尽早辞了吧，我也不为旧事物续一秒了。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2018&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;winapp教程的事情弃坑了。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
