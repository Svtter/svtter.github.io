<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coding on Svtter's Blog</title><link>https://svtter.cn/tags/coding/</link><description>Recent content in Coding on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 03 Jun 2025 21:18:22 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Aider for Cli Code Edit</title><link>https://svtter.cn/p/using-aider-for-cli-code-edit/</link><pubDate>Tue, 03 Jun 2025 21:18:22 +0800</pubDate><guid>https://svtter.cn/p/using-aider-for-cli-code-edit/</guid><description>&lt;img src="https://svtter.cn/p/using-aider-for-cli-code-edit/aider-bg.png" alt="Featured image of post Using Aider for Cli Code Edit" />&lt;p>这篇文章是使用 aider 进行命令行文章编辑。&lt;/p>
&lt;p>某种程度上，aider 是 openhands 的替代品，成熟度比 openhands 要高很多（开源版本的 openhands 经常不可用）。&lt;/p>
&lt;p>相似的产品还有&lt;/p>
&lt;ul>
&lt;li>openai codex&lt;/li>
&lt;li>claude code&lt;/li>
&lt;/ul>
&lt;h2 id="安装">安装
&lt;/h2>&lt;p>安装 aider 非常简单，就像是官方文档描述的一样：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python -m pip install aider-install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aider-install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="配置">配置
&lt;/h2>&lt;p>然后最好在自己的终端里面配置好 api key。如果使用硅基流动的 deepseek，你可以这样配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># using siliconflow&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">OPENAI_API_KEY&lt;/span>&lt;span class="o">=&lt;/span>&amp;lt;your key&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">OPENAI_BASE_URL&lt;/span>&lt;span class="o">=&lt;/span>https://api.siliconflow.cn/v1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>可以使用硅基流动的免费增额。使用我的注册码来&lt;a class="link" href="https://cloud.siliconflow.cn/i/CoM3DLIA" target="_blank" rel="noopener"
>注册&lt;/a>。&lt;/li>
&lt;li>如果需要更高的访问频次，可以直接使用 deepseek 官方的 API。这里可以&lt;a class="link" href="https://platform.deepseek.com/api_keys" target="_blank" rel="noopener"
>获取 API KEY&lt;/a>。&lt;/li>
&lt;/ul>
&lt;p>这样一来，就可以直接使用 aider 了。&lt;/p>
&lt;p>下面，我们以硅基流动的 API KEY 为例子，让我们试试采用&lt;code>deepseek-ai/DeepSeek-R1-0528-Qwen3-8B&lt;/code>模型。&lt;/p>
&lt;p>&lt;code>aider --model openai/deepseek-ai/DeepSeek-R1-0528-Qwen3-8B README.md&lt;/code>&lt;/p>
&lt;p>得到输出：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">~/work/blog/hugo-blog master ⇡3 ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── svtter@debian-vm 09:28:01 PM
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">❯ aider --model fast README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Warning &lt;span class="k">for&lt;/span> openai/deepseek-ai/DeepSeek-R1-0528-Qwen3-8B: Unknown context window size and costs, using sane defaults.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">You can skip this check with --no-show-model-warnings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">https://aider.chat/docs/llms/warnings.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Open documentation url &lt;span class="k">for&lt;/span> more info? &lt;span class="o">(&lt;/span>Y&lt;span class="o">)&lt;/span>es/&lt;span class="o">(&lt;/span>N&lt;span class="o">)&lt;/span>o/&lt;span class="o">(&lt;/span>D&lt;span class="o">)&lt;/span>on&lt;span class="err">&amp;#39;&lt;/span>t ask again &lt;span class="o">[&lt;/span>Yes&lt;span class="o">]&lt;/span>: n
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Aider v0.84.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Model: openai/deepseek-ai/DeepSeek-R1-0528-Qwen3-8B with diff edit format
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Git repo: .git with 5,038 files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Warning: For large repos, consider using --subtree-only and .aiderignore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">See: https://aider.chat/docs/faq.html#can-i-use-aider-in-a-large-mono-repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Repo-map: using &lt;span class="m">1024&lt;/span> tokens, auto refresh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Added README.md to the chat.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这说明成功了；如果失败了，会提示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">~/work/blog/hugo-blog master !1 ?1 ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── svtter@debian-vm 09:23:49 PM
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">❯ aider --model fast /home/svtter/work/blog/hugo-blog/content/post/2025-06-03-using-aider-for-cli-code-edit/index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Warning &lt;span class="k">for&lt;/span> fast: Unknown context window size and costs, using sane defaults.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Did you mean one of these?
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- openrouter/x-ai/grok-3-fast-beta
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- openrouter/x-ai/grok-3-mini-fast-beta
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- xai/grok-3-fast-beta
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- xai/grok-3-fast-latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- xai/grok-3-mini-fast-beta
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- xai/grok-3-mini-fast-latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">You can skip this check with --no-show-model-warnings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">https://aider.chat/docs/llms/warnings.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Open documentation url &lt;span class="k">for&lt;/span> more info? &lt;span class="o">(&lt;/span>Y&lt;span class="o">)&lt;/span>es/&lt;span class="o">(&lt;/span>N&lt;span class="o">)&lt;/span>o/&lt;span class="o">(&lt;/span>D&lt;span class="o">)&lt;/span>on&lt;span class="err">&amp;#39;&lt;/span>t ask again &lt;span class="o">[&lt;/span>Yes&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>简单的编辑，可以直接用小模型来处理。&lt;/p>
&lt;blockquote>
&lt;p>至于怎么算简单&amp;hellip;&lt;/p>&lt;/blockquote>
&lt;p>本文的 tag 就是通过 aider 生成的。在示例中，我编辑了&lt;code>README.md&lt;/code>文件。但是你完全可以打开一个 git repository，来编辑其他的代码。&lt;/p>
&lt;h2 id="补充">补充
&lt;/h2>&lt;p>后来我又使用&lt;code>claude&lt;/code>相关的模型来测试了一下 aider 的效果。&lt;/p>
&lt;p>&lt;code>aider --model openrouter/anthropic/claude-sonnet-4 --yes&lt;/code>&lt;/p>
&lt;p>我在 &lt;a class="link" href="https://github.com/svtter/libpaper" target="_blank" rel="noopener"
>libpaper&lt;/a> 项目中开了一个新的分支 &lt;a class="link" href="https://github.com/Svtter/libpaper/pull/1" target="_blank" rel="noopener"
>feat/web-api&lt;/a>，完全由 claude+aider 进行开发。&lt;/p>
&lt;script src="https://tarptaeya.github.io/repo-card/repo-card.js">&lt;/script>
&lt;!-- inside body, where you want to create the card -->
&lt;div class="repo-card" data-repo="svtter/libpaper">&lt;/div>
&lt;p>效果非常好。&lt;/p>
&lt;p>Have fun。&lt;/p></description></item><item><title>Visual Studio Code Tips - 2</title><link>https://svtter.cn/p/visual-studio-code-tips-2/</link><pubDate>Wed, 30 Apr 2025 10:54:07 +0800</pubDate><guid>https://svtter.cn/p/visual-studio-code-tips-2/</guid><description>&lt;img src="https://svtter.cn/p/visual-studio-code-tips-2/bg.png" alt="Featured image of post Visual Studio Code Tips - 2" />&lt;p>当我们使用 vscode （cursor）进行 python 编码的时候，难免会引入大文件到工作目录里。此时，如果不对分析器加以限制，容易导致整个系统非常卡顿。&lt;/p>
&lt;h2 id="避免大文件引入">避免大文件引入
&lt;/h2>&lt;p>我们可以编辑设置来避免这个问题。&lt;/p>
&lt;p>例如，我们希望忽略的路径是&lt;code>/app/data&lt;/code>，相对目录是&lt;code>./data&lt;/code>。通过打开&lt;code>&amp;lt;project_root&amp;gt;/.vscode/settings.json&lt;/code>，加入如下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;python.analysis.exclude&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;/app/data&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;/app/data/**&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;./data/**&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;./data&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样一来，就可以避免分析器，例如 pylancer，分析你的数据目录了。&lt;/p>
&lt;h2 id="增加默认-pythonpath">增加默认 PYTHONPATH
&lt;/h2>&lt;p>有时候我们希望在某个文件夹下的 python 包可以被直接引入。我们可以设置 &lt;code>PYHONPATH&lt;/code> 到 &lt;code>.vscode/settings.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;python.envFile&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${workspaceFolder}/.env&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后配置 env 文件（例如将 /app 加入到 PYTHONPATH）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-env" data-lang="env">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PYTHONPATH&lt;/span>&lt;span class="o">=&lt;/span>/app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Git MCP Tools.md</title><link>https://svtter.cn/p/git-mcp-tools.md/</link><pubDate>Thu, 24 Apr 2025 18:32:38 +0800</pubDate><guid>https://svtter.cn/p/git-mcp-tools.md/</guid><description>&lt;img src="https://svtter.cn/p/git-mcp-tools.md/bg.png" alt="Featured image of post Git MCP Tools.md" />&lt;p>&lt;a class="link" href="https://www.anthropic.com/news/model-context-protocol" target="_blank" rel="noopener"
>MCP 协议&lt;/a> 很有意思，能让大模型使用工具，来扩展大模型的能力。为了体验一下自动化的快乐，我结合 &lt;a class="link" href="https://gofastmcp.com/getting-started/welcome" target="_blank" rel="noopener"
>FastMCP&lt;/a> 开发一个 MCP 服务：&lt;/p>
&lt;script src="https://tarptaeya.github.io/repo-card/repo-card.js">&lt;/script>
&lt;!-- inside body, where you want to create the card -->
&lt;div class="repo-card" data-repo="svtter/git-mcp">&lt;/div>
&lt;p>这个服务可以通过我预先定义的几个命令，例如 &lt;a class="link" href="https://github.com/Svtter/git-mcp/blob/main/server.py#L31" target="_blank" rel="noopener"
>status&lt;/a> ，来操作指定的 git 仓库。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">import&lt;/span> &lt;span class="nn">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;git&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cwd&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">repo_path&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">capture_output&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">output&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stdout&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="实际使用">实际使用
&lt;/h2>&lt;p>通过 &lt;a class="link" href="https://github.com/ThinkInAIXYZ/deepchat" target="_blank" rel="noopener"
>DeepChat&lt;/a> 进行沟通。&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/git-mcp-tools.md/chat.png"
width="2424"
height="1490"
srcset="https://svtter.cn/p/git-mcp-tools.md/chat_hu_c17bff78f6fe9a3f.png 480w, https://svtter.cn/p/git-mcp-tools.md/chat_hu_7113379ef67f753.png 1024w"
loading="lazy"
alt="chat.png"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="390px"
>&lt;/p>
&lt;p>可以看到，&lt;a class="link" href="https://github.com/ThinkInAIXYZ/deepchat" target="_blank" rel="noopener"
>deepchat&lt;/a> 借助大模型，帮我查看了项目 &lt;a class="link" href="https://github.com/Svtter/git-mcp" target="_blank" rel="noopener"
>git-mcp&lt;/a> 在我本地的情况。&lt;/p>
&lt;h2 id="遇到的问题">遇到的问题
&lt;/h2>&lt;ol>
&lt;li>使用&lt;code>mcp.resources&lt;/code>和使用&lt;code>mcp.tool&lt;/code>是不一样的。如果不定义 tool，有时候大模型会找不到对应的资源。&lt;/li>
&lt;/ol></description></item><item><title>FP Problem.md</title><link>https://svtter.cn/p/fp-problem.md/</link><pubDate>Wed, 26 Feb 2025 11:02:33 +0800</pubDate><guid>https://svtter.cn/p/fp-problem.md/</guid><description>&lt;p>Functional programming (FP) 使用了接近一年的时间，又有了很多新的想法。这里主要说说问题。&lt;/p>
&lt;p>最大的问题就是效率问题。&lt;/p>
&lt;p>如果使用基于类的方法，通过继承，我们可以很快的修改一些功能，产品可以快速上线。&lt;/p>
&lt;p>但是使用函数式编程则很难解决这个问题。&lt;/p>
&lt;p>例如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Cat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">object&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">close_eye&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">close_eye&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;slow eye closed&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果想要调整 &lt;code>close_eye&lt;/code> 的逻辑，那么直接修改 &lt;code>close_eye&lt;/code> 即可。&lt;/p>
&lt;p>例如&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">SmartCat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">object&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">close_eye&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">close_eye&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;fast close&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>相比之下，函数式编程可能是这样&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sleep&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">close_eye&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">close_eye&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;eye closed&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果要修改&lt;code>close_eye&lt;/code>，则需要首先修改&lt;code>sleep&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">close_eye&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">close_eye&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">close_eye&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样 sleep 接受 &lt;code>close_eye&lt;/code> 作为参数，原本的函数作为默认值。&lt;/p>
&lt;p>调用改为&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">fast_close_eye&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fast close&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">close_eye&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">fast_close_eye&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里比较麻烦的是，违反了开闭原则。我们不得不修改之前的代码，还要考虑之前代码的可维护性。&lt;/p>
&lt;p>因此，我认为在这个场景，FP 不太合适。&lt;/p></description></item></channel></rss>