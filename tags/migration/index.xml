<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Migration on Svtter's Blog</title><link>https://svtter.cn/tags/migration/</link><description>Recent content in Migration on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 20 Nov 2021 10:00:32 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/migration/index.xml" rel="self" type="application/rss+xml"/><item><title>ORM 中的 Pattern</title><link>https://svtter.cn/p/orm-%E4%B8%AD%E7%9A%84-pattern/</link><pubDate>Sat, 20 Nov 2021 10:00:32 +0800</pubDate><guid>https://svtter.cn/p/orm-%E4%B8%AD%E7%9A%84-pattern/</guid><description>&lt;blockquote>
&lt;p>最近在做技术选型，想要引入一些新的开发语言，开发技术到技术团队。大众编程语言在 WEB 方面的稳定性，已经被人所熟知了。但是数据库版本控制方面，每个程序设计语言做的深度和稳定性都有所区别。数据库版本控制和 ORM 密切相关。而&amp;hellip;&lt;/p>&lt;/blockquote>
&lt;p>提到 ORM，就不得不聊聊 &lt;code>ActiveRecord&lt;/code>和&lt;code>DataMapper&lt;/code>。&lt;/p>
&lt;h2 id="datamapper">DataMapper
&lt;/h2>&lt;p>DataMapper 是一种 ORM&amp;rsquo;s pattern。&lt;/p>
&lt;p>一般，使用 DataMapper，你会将所有的查询方法写到 &lt;code>repositories&lt;/code>里面。所有的数据操作都会在&lt;code>repositories&lt;/code>中进行。例如增加，加载，删除，查询。使用&lt;code>DataMapper&lt;/code>的时候，entity 会显得有些“呆滞”。一般情况下，定义好属性和一点简单的方法，不会频繁的 entity 进行操作了。&lt;/p>
&lt;p>所以，大多数情况下，程序员使用 repositories 与数据库进行交互。&lt;/p>
&lt;p>这种模式常见于&lt;code>Spring JPA&lt;/code>。&lt;/p>
&lt;h2 id="activerecord">ActiveRecord
&lt;/h2>&lt;p>在 &lt;code>ActiveRecord&lt;/code> 模式中，model 的属性和方法，全都在一起定义。&lt;/p>
&lt;p>所以，在大多数情况下，程序员直接使用 &lt;code>model&lt;/code>与数据库进行交互。&lt;/p>
&lt;p>这种模式常见于 &lt;code>Django&lt;/code> 和 &lt;code>Ruby on rails&lt;/code>。&lt;/p>
&lt;h2 id="我应该选择哪一种">我应该选择哪一种？
&lt;/h2>&lt;p>选择哪一种 ORM pattern 取决当前的应用环境。&lt;/p>
&lt;ul>
&lt;li>&lt;code>Data Mapper&lt;/code> 因为其分离性，在大型应用的开发中往往会更有效率&lt;/li>
&lt;li>&lt;code>Active Record&lt;/code> 使得编写 ORM 变得很容易，因此在小型应用中很受欢迎。&lt;code>Simplicity&lt;/code> 往往是可维护性的一个关键指标。&lt;/li>
&lt;/ul></description></item></channel></rss>