<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Engineering on Svtter's Blog</title><link>https://svtter.cn/tags/engineering/</link><description>Recent content in Engineering on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 20 Jul 2017 01:00:00 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Javascript中变量的作用域</title><link>https://svtter.cn/p/javascript%E4%B8%AD%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/</link><pubDate>Thu, 20 Jul 2017 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/javascript%E4%B8%AD%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/</guid><description>&lt;h2 id="问题引出">问题引出
&lt;/h2>&lt;p>方才阅读es6的时候遇到一个问题：&lt;/p>
&lt;img alt="" src="https://i1.wp.com/ww1.sinaimg.cn/large/c53b1907ly1fhqjhkdfu6j20x40wmwkh.jpg?w=625" data-recalc-dims="1" />
&lt;h2 id="问题解决">问题解决
&lt;/h2>&lt;p>这就想了，如果没有&lt;code>let&lt;/code>关键字，我们如何处理这个问题呢？&lt;/p>
&lt;p>此时就涉及到一个概念，闭包 &lt;code>clojure&lt;/code>。&lt;/p>
&lt;p>不要被这个复杂的名词欺骗了，就是函数套函数，函数返回函数而已。解决这个问题关键在于&lt;/p>
&lt;p>块级作用域和函数作用域的理解；在Javascript中，并不支持块级作用域，它只支持函数作用域，&lt;/p>
&lt;p>而且在一个函数中的任何位置定义的变量在该函数中的任何地方都是可见的。&lt;/p>
&lt;p>因此，我们在Js这个特性的基础上，使用闭包，然后就可以解决这个问题了：&lt;/p>
&lt;img alt="" src="https://i0.wp.com/ww1.sinaimg.cn/large/c53b1907ly1fhqjhzob30j20mw05yq3e.jpg?w=625" data-recalc-dims="1" />
&lt;p>为什么要解决这个问题？因为有时候在for循环中使用回调可能与参数&lt;code>i&lt;/code>有所联系，可能会遭遇到&lt;/p>
&lt;p>问题；&lt;/p>
&lt;p>当然，如果使用es6这种问题就不会发生了。es6大法好。&lt;/p></description></item></channel></rss>