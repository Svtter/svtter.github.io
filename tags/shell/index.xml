<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shell on Svtter's Blog</title><link>https://svtter.cn/tags/shell/</link><description>Recent content in Shell on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 15 Feb 2025 21:11:14 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>Easy Zshrc Config.md</title><link>https://svtter.cn/p/easy-zshrc-config.md/</link><pubDate>Sat, 15 Feb 2025 21:11:14 +0800</pubDate><guid>https://svtter.cn/p/easy-zshrc-config.md/</guid><description>&lt;p&gt;之前在服务器上经常安装 oh-my-zsh；但是网络有时候不好，安装起来很费力。这个时候，就需要一个很简单的 zsh config，能干活就行。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;span class="lnt"&gt;28
&lt;/span&gt;&lt;span class="lnt"&gt;29
&lt;/span&gt;&lt;span class="lnt"&gt;30
&lt;/span&gt;&lt;span class="lnt"&gt;31
&lt;/span&gt;&lt;span class="lnt"&gt;32
&lt;/span&gt;&lt;span class="lnt"&gt;33
&lt;/span&gt;&lt;span class="lnt"&gt;34
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 设置编辑器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;EDITOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;vim&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 设置提示符&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;PROMPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%F{blue}%n%f@%F{green}%m%f %F{cyan}%~%f %# &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 别名定义&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;ls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ls --color=auto&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;ll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ls -la -G&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;dc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;docker compose&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;HISTFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.zsh_history&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;HISTSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;SAVEHIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt BANG_HIST &lt;span class="c1"&gt;# Treat the &amp;#39;!&amp;#39; character specially during expansion.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt EXTENDED_HISTORY &lt;span class="c1"&gt;# Write the history file in the &amp;#34;:start:elapsed;command&amp;#34; format.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt INC_APPEND_HISTORY &lt;span class="c1"&gt;# Write to the history file immediately, not when the shell exits.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt SHARE_HISTORY &lt;span class="c1"&gt;# Share history between all sessions.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt HIST_EXPIRE_DUPS_FIRST &lt;span class="c1"&gt;# Expire duplicate entries first when trimming history.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt HIST_IGNORE_DUPS &lt;span class="c1"&gt;# Don&amp;#39;t record an entry that was just recorded again.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt HIST_IGNORE_ALL_DUPS &lt;span class="c1"&gt;# Delete old recorded entry if new entry is a duplicate.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt HIST_FIND_NO_DUPS &lt;span class="c1"&gt;# Do not display a line previously found.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt HIST_IGNORE_SPACE &lt;span class="c1"&gt;# Don&amp;#39;t record an entry starting with a space.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt HIST_SAVE_NO_DUPS &lt;span class="c1"&gt;# Don&amp;#39;t write duplicate entries in the history file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt HIST_REDUCE_BLANKS &lt;span class="c1"&gt;# Remove superfluous blanks before recording entry.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt HIST_VERIFY &lt;span class="c1"&gt;# Don&amp;#39;t execute immediately upon history expansion.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt HIST_BEEP &lt;span class="c1"&gt;# Beep when accessing nonexistent history.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 启用 fzf 相关功能&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt; -f /usr/share/doc/fzf/examples/key-bindings.zsh &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; /usr/share/doc/fzf/examples/key-bindings.zsh
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt; -f /usr/share/doc/fzf/examples/completion.zsh &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; /usr/share/doc/fzf/examples/completion.zsh
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;setopt no_nomatch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;除了高亮&lt;code&gt;ls&lt;/code&gt;之外，配置了&lt;code&gt;docker compose&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果安装了 fzf，还可以配置 zshenv 来启用 fzf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# 启用 fzf 相关功能&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt; -f /usr/share/doc/fzf/examples/key-bindings.zsh &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; /usr/share/doc/fzf/examples/key-bindings.zsh
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt; -f /usr/share/doc/fzf/examples/completion.zsh &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; /usr/share/doc/fzf/examples/completion.zsh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>如何配置终端</title><link>https://svtter.cn/p/%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E7%BB%88%E7%AB%AF/</link><pubDate>Tue, 30 Jan 2018 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E7%BB%88%E7%AB%AF/</guid><description>&lt;p&gt;配置终端是许多人头疼的问题，比如配置之后没有达到自己预先想要的效果，但是又总是不知道哪里出了问题，或者配置完成之后又遭遇了很多烦恼。&lt;/p&gt;
&lt;p&gt;本文的作用是解决这些问题，或者为解决这些问题提供一个思路。&lt;/p&gt;
&lt;h2 id="颜色不对"&gt;颜色不对
&lt;/h2&gt;&lt;p&gt;颜色不对可能有很多原因，但归根结底是两个问题，一个是TERM环境变量没有设置好，另一个是当前使用的终端app不支持真彩色。&lt;/p&gt;
&lt;p&gt;处理term可以使用&lt;/p&gt;
&lt;div class="codehilite"&gt;
&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export TERM=xterm-256color
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;把它加载到你的rc文件里。有些人使用zsh，那么加入到&lt;code&gt;~.zshrc&lt;/code&gt;里面。有些人使用bash，那么加入到&lt;code&gt;~/.bashrc&lt;/code&gt;里面。&lt;/p&gt;
&lt;p&gt;解决app真彩色问题，可以参考这个链接：https://gist.github.com/XVilka/8346728&lt;/p&gt;
&lt;p&gt;Ubuntu14.04版本下默认的terminal是不支持真彩色的。&lt;/p&gt;
&lt;h2 id="乱码"&gt;乱码
&lt;/h2&gt;&lt;p&gt;终端乱码很大程度上是因为当前的字体不支持输出的字符。这个时候安装一个字符集支持比较齐全的字体即可。常见的字体比如nerd fonts，包含了常用字体+许多的符号字体的集合，因此找到自己心水的字体，安装并且替换即可解决这些问题。&lt;/p&gt;
&lt;p&gt;可能还有许多问题我没有想到，可以在留言区提出，我一并加上。&lt;/p&gt;</description></item><item><title>Shell-tips</title><link>https://svtter.cn/p/shell-tips/</link><pubDate>Wed, 20 Dec 2017 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/shell-tips/</guid><description>&lt;h2 id="重启终端"&gt;重启终端
&lt;/h2&gt;&lt;p&gt;执行命令，修改环境变量等等之后可以通过此命令来简单重启shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exec &amp;quot;$SHELL&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="查找文件"&gt;查找文件
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;$ find ~ -name &amp;quot;*.txt&amp;quot; -print #在$HOME中查.txt文件并显示&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;locate findname&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="编辑变量"&gt;编辑变量
&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;zsh&lt;/code&gt;中，编辑&lt;code&gt;$HOME/.zshenv&lt;/code&gt;；在&lt;code&gt;bash&lt;/code&gt;中，编辑&lt;code&gt;.bash_profile&lt;/code&gt;&lt;/p&gt;</description></item><item><title>bash-使用func和一般的sh的不同</title><link>https://svtter.cn/p/bash-%E4%BD%BF%E7%94%A8func%E5%92%8C%E4%B8%80%E8%88%AC%E7%9A%84sh%E7%9A%84%E4%B8%8D%E5%90%8C/</link><pubDate>Thu, 04 Dec 2014 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/bash-%E4%BD%BF%E7%94%A8func%E5%92%8C%E4%B8%80%E8%88%AC%E7%9A%84sh%E7%9A%84%E4%B8%8D%E5%90%8C/</guid><description>&lt;ul&gt;
&lt;li&gt;本文出自&lt;a class="link" href="http://svtter.github.io" target="_blank" rel="noopener"
&gt;svtter.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;如果只是单纯的使用function, 在终端中是可以使用的，但是当作一个可执行文件是不行的（例如：使用python调用)&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果使用.sh的方式来处理， 那么问题就在于管理上了 — 可能大量有大量的sh文件，所以说需要权衡利弊，自己使用了。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;bash学得并不好，也没有认真的研究，暂且记录一下，日后再做补充&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title>使用cd快速在目录间移动</title><link>https://svtter.cn/p/%E4%BD%BF%E7%94%A8cd%E5%BF%AB%E9%80%9F%E5%9C%A8%E7%9B%AE%E5%BD%95%E9%97%B4%E7%A7%BB%E5%8A%A8/</link><pubDate>Wed, 26 Nov 2014 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E4%BD%BF%E7%94%A8cd%E5%BF%AB%E9%80%9F%E5%9C%A8%E7%9B%AE%E5%BD%95%E9%97%B4%E7%A7%BB%E5%8A%A8/</guid><description>&lt;ul&gt;
&lt;li&gt;本文出自&amp;lt;svtter.github.io&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;难得看见一篇好文= =&lt;/p&gt;
&lt;h2 id="操作方法"&gt;操作方法
&lt;/h2&gt;&lt;p&gt;在此学习并且记录。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标记一个书签: mark [书签]&lt;/li&gt;
&lt;li&gt;进入一个书签: g [书签]&lt;/li&gt;
&lt;li&gt;输出全部标签: gs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="实现原理"&gt;实现原理
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sudo vim /etc/profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;也可以使用&lt;code&gt;:w !sudo tee %&lt;/code&gt;这种方式来保存&lt;/p&gt;
&lt;div class="codehilite"&gt;
&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# mark&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;MARKPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.marks
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;MARKDEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;sanguo#设置你的默认书签，可以直接输入g跳转
&lt;span class="k"&gt;function&lt;/span&gt; g &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="nv"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$MARKDEFAULT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; -P &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MARKPATH&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"No such mark: &lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; mark &lt;span class="o"&gt;{&lt;/span&gt;
mkdir -p &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MARKPATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="nv"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$MARKDEFAULT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
rm -f &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MARKPATH&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
ln -s &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MARKPATH&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; unmark &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="nv"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$MARKDEFAULT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
rm -i &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MARKPATH&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; gs &lt;span class="o"&gt;{&lt;/span&gt;
ls -l &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MARKPATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep ^l &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt; -f &lt;span class="m"&gt;13&lt;/span&gt;-
&lt;span class="o"&gt;}&lt;/span&gt;
_completemarks&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;curw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;COMP_WORDS&lt;/span&gt;&lt;span class="p"&gt;[COMP_CWORD]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;wordlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ls -l &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MARKPATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep ^l &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt; -f &lt;span class="m"&gt;13&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;COMPREPLY&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;compgen&lt;/span&gt; -W &lt;span class="s1"&gt;&amp;#39;${wordlist[@]}&amp;#39;&lt;/span&gt; -- &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$curw&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;complete&lt;/span&gt; -F _completemarks g unmark
&lt;/pre&gt;
&lt;/div&gt;</description></item><item><title>bash相关知识</title><link>https://svtter.cn/p/bash%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</link><pubDate>Sat, 08 Nov 2014 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/bash%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</guid><description>&lt;p&gt;今天想用wget+正则写一个简单的dict，结果不幸失败了。。&lt;/p&gt;
&lt;p&gt;一方面是正则表达式学习不到家，另一方面是wget命令没有习得精华。&lt;/p&gt;
&lt;h1 id="wget"&gt;wget
&lt;/h1&gt;&lt;p&gt;下载到指定的目录&lt;code&gt;wget -P youwant/ (URL)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;利用-P就可以下载到指定目录了，奈何从man里面找找了半天，还是自己的英语不过关阿。&lt;/p&gt;
&lt;h1 id="bash"&gt;bash
&lt;/h1&gt;&lt;p&gt;可以使用grep以及sed, awk进行格式的匹配。发现鸟哥的私房菜看的还是太粗，也有一段时间没有好好看了。&lt;/p&gt;
&lt;p&gt;有时间重新补充一下这篇博客，先处理一下算法题目。&lt;/p&gt;</description></item></channel></rss>