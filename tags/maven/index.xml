<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maven on Svtter's Blog</title><link>https://svtter.cn/tags/maven/</link><description>Recent content in Maven on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 14 Jun 2018 01:00:00 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/maven/index.xml" rel="self" type="application/rss+xml"/><item><title>Maven小记</title><link>https://svtter.cn/p/maven%E5%B0%8F%E8%AE%B0/</link><pubDate>Thu, 14 Jun 2018 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/maven%E5%B0%8F%E8%AE%B0/</guid><description>&lt;blockquote>
&lt;p>发现maven与Java，别有一番乐趣&lt;/p>&lt;/blockquote>
&lt;p>入门建议：&lt;/p>
&lt;p>&lt;a class="link" href="https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html" target="_blank" rel="noopener"
>https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html&lt;/a>&lt;/p>
&lt;p>现在很多文章其实写的都不如官方的文章，但是人们总是习惯性的从百度获取自己想要的某些资源。&lt;/p>
&lt;h2 id="maven编译依赖">maven编译依赖
&lt;/h2>&lt;p>一般情况下，maven不会把依赖的包编译到自己的&lt;code>jar&lt;/code>包里面，我猜和&lt;code>dll&lt;/code>的出发点是一样的，减少内存的占用（减少相同内容在内存中的冗余）。&lt;/p>
&lt;p>但是有时候我们不能确保宿主的机器也有同样的东西，因此有时候需要把依赖编译进去。&lt;/p>
&lt;p>我们可以这样做，在&lt;code>pom.xml&lt;/code>中，添加字段：&lt;/p>
&lt;div class="codehilite">
&lt;pre>&lt;span>&lt;/span> &lt;span class="c">&amp;lt;!--构建依赖--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;build&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.maven.plugins&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>maven-shade-plugin&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.6&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;executions&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;execution&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;phase&amp;gt;&lt;/span>package&lt;span class="nt">&amp;lt;/phase&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;goals&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;goal&amp;gt;&lt;/span>shade&lt;span class="nt">&amp;lt;/goal&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/goals&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/execution&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/executions&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/build&amp;gt;&lt;/span>
&lt;/pre>
&lt;/div>
&lt;p>由此，就可以把需要的依赖包同时编译进去了。&lt;/p>
&lt;p>针对&lt;code>mvn&lt;/code>，我上传了一个二维码扫描的例程，可供参考：https://github.com/Svtter/zxing-example&lt;/p></description></item></channel></rss>