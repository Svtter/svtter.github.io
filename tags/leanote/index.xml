<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leanote on Svtter&#39;s Blog</title>
    <link>http://192.168.2.39:1313/tags/leanote/</link>
    <description>Recent content in Leanote on Svtter&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 10 Mar 2016 01:00:00 +0800</lastBuildDate>
    <atom:link href="http://192.168.2.39:1313/tags/leanote/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leanote – theme_API优化</title>
      <link>http://192.168.2.39:1313/2016/03/10/leanote-theme_api%E4%BC%98%E5%8C%96/</link>
      <pubDate>Thu, 10 Mar 2016 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/2016/03/10/leanote-theme_api%E4%BC%98%E5%8C%96/</guid>
      <description>我本身不是应该前端的Hacker（当然我自己也不知自己属于什么Hacker)，于是决定在themeAPI上参见一下hexo的做法。&#xA;但是再此之前，想要首先将leanote的markdown渲染API加入到themeAPI里面去，所以首先研究一下官方的主题是如何运作的。</description>
    </item>
    <item>
      <title>Leanote – 源码阅读</title>
      <link>http://192.168.2.39:1313/2016/03/10/leanote-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</link>
      <pubDate>Thu, 10 Mar 2016 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/2016/03/10/leanote-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</guid>
      <description>写一下如何阅读Leanote的源代码。&#xA;上面的go的框架我是没有仔细看，感觉似乎用到了很多开源项目？整体来说，leanote应该是一个伟大的项目。&#xA;熟悉gulpfile 这里有一篇日志 https://segmentfault.com/a/1190000000372547&#xA;基本读完以后就懂了。cnpm install -g gulp安装一下。&#xA;大体上读一读可以发现，gulpfile用于构造leanote的前端内容。&#xA;后记2017.12.11 这篇博文后来我没有写下去，因为后面不再使用leanote——读代码这件事情，其实不需要耗费太多时间，就可以做的不错。</description>
    </item>
    <item>
      <title>最近的吐槽</title>
      <link>http://192.168.2.39:1313/post/2016-03-05-%E6%9C%80%E8%BF%91%E7%9A%84%E5%90%90%E6%A7%BD/</link>
      <pubDate>Sat, 05 Mar 2016 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/post/2016-03-05-%E6%9C%80%E8%BF%91%E7%9A%84%E5%90%90%E6%A7%BD/</guid>
      <description>&lt;p&gt;这几天考研复试准备的不咋地。。没有听听力。。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
