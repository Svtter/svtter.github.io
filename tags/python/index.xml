<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Svtter&#39;s Blog</title>
    <link>https://svtter.cn/tags/python/</link>
    <description>Recent content in Python on Svtter&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 11 Sep 2024 20:11:20 +0800</lastBuildDate>
    <atom:link href="https://svtter.cn/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Inline Source Syntax Highlighting Plugin</title>
      <link>https://svtter.cn/post/2024-09-11-python-inline-source-syntax-highlighting-plugin/</link>
      <pubDate>Wed, 11 Sep 2024 20:11:20 +0800</pubDate>
      <guid>https://svtter.cn/post/2024-09-11-python-inline-source-syntax-highlighting-plugin/</guid>
      <description>&lt;p&gt;在 python 代码的编写过程中，有时候我们会希望将部分文本高亮。这个时候，&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=samwillis.python-inline-source&#34;&gt;Python Inline Source Syntax Highlighting&lt;/a&gt; 就派上用场了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>New Usage of typing module in python</title>
      <link>https://svtter.cn/post/2024-07-25-new-usage-of-typing/</link>
      <pubDate>Fri, 12 Jul 2024 16:20:32 +0800</pubDate>
      <guid>https://svtter.cn/post/2024-07-25-new-usage-of-typing/</guid>
      <description>&lt;p&gt;我原本想要分析一下 django webpack；但是写了一半，为了资料论述严谨，又不得不学习了 django component；在 django component 中，又发现了自己之前不知道的一些机制。无奈，先聊聊遇到的 typing 问题吧！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Print Trick for Python</title>
      <link>https://svtter.cn/post/2024-04-12-print-trick/</link>
      <pubDate>Fri, 12 Jan 2024 10:09:40 +0800</pubDate>
      <guid>https://svtter.cn/post/2024-04-12-print-trick/</guid>
      <description>&lt;p&gt;这是一个可以同时将print内容输出到屏幕以及保存到日志文件的简单代码。&lt;/p&gt;&#xA;&lt;p&gt;主要利用了 builtins 对 print 方法进行 hook，从而让方法全局有效。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use Mirror</title>
      <link>https://svtter.cn/post/2022-11-17-use-mirror/</link>
      <pubDate>Thu, 17 Nov 2022 21:15:09 +0800</pubDate>
      <guid>https://svtter.cn/post/2022-11-17-use-mirror/</guid>
      <description>&lt;p&gt;使用代理。在国内编程，使用代理非常重要。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Good Gevent</title>
      <link>https://svtter.cn/post/2022-09-28-good-gevent/</link>
      <pubDate>Wed, 28 Sep 2022 08:55:43 +0800</pubDate>
      <guid>https://svtter.cn/post/2022-09-28-good-gevent/</guid>
      <description>&lt;p&gt;Gevent 是一个非常好用的异步工具，能够自动将阻塞的代码转换成非阻塞的代码。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Two packages in one folder</title>
      <link>https://svtter.cn/post/2022-07-16-2-packages-in-1-folder/</link>
      <pubDate>Sat, 16 Jul 2022 13:06:53 +0800</pubDate>
      <guid>https://svtter.cn/post/2022-07-16-2-packages-in-1-folder/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;GitHub link: &lt;a href=&#34;https://github.com/Svtter/2InOne&#34;&gt;https://github.com/Svtter/2InOne&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Crazy Import</title>
      <link>https://svtter.cn/post/2022-05-09-crazy-import/</link>
      <pubDate>Mon, 09 May 2022 14:02:27 +0800</pubDate>
      <guid>https://svtter.cn/post/2022-05-09-crazy-import/</guid>
      <description>&lt;p&gt;最近发现 Django settings 在使用的时候，容易出现不经过检查的问题。&#xA;因此，想要在 settings 的基础上严格约束一下，减少问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visual Studio Code Tips</title>
      <link>https://svtter.cn/post/2020-06-09-vscode-tips/</link>
      <pubDate>Tue, 09 Jun 2020 11:25:25 +0800</pubDate>
      <guid>https://svtter.cn/post/2020-06-09-vscode-tips/</guid>
      <description>&lt;p&gt;又有一段时间没有更新博客啦！这篇文章是&lt;code&gt;vscode&lt;/code&gt;使用技巧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django 写个过滤器 filter</title>
      <link>https://svtter.cn/2018/11/05/django-%E5%86%99%E4%B8%AA%E8%BF%87%E6%BB%A4%E5%99%A8/</link>
      <pubDate>Mon, 05 Nov 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2018/11/05/django-%E5%86%99%E4%B8%AA%E8%BF%87%E6%BB%A4%E5%99%A8/</guid>
      <description>用 Django 快速开发一个项目，发现 Django 的模板本身不带有整除功能，因此自己手写一个。&#xA;这是目录结构。在 urls.py 添加 app 的名称，例如 app_name = ‘app’ ，然后在与models.py 同级的目录下，新建一个 python 包， templatetags 的，新建自己需要的包名即可。&#xA;app_extra.py：&#xA;这里因为需求比较简单，因此直接就赋值了 11.&#xA;应用到模板中：&#xA;随后即可看到结果。&#xA;此外，寻得两个比较好用 template 插件&#xA;实现的东西虽然不多，但是起码把我不想关心的逻辑封装起来了。。</description>
    </item>
    <item>
      <title>Python functools</title>
      <link>https://svtter.cn/post/2018-10-21-python-functools/</link>
      <pubDate>Sun, 21 Oct 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/post/2018-10-21-python-functools/</guid>
      <description>Python functools包中，有个很好的函数叫做partial ，中文直接翻译为片函数，此前一直都没有使用过。最近通过阅读别人的代码，学会了这一技能，着实好用。&#xA;使用partial，可以把一些固有功能代码做一个整合；&#xA;比如我希望一个函数专门做 int2 转换&#xA;int2 = partial(int, base=2) 甚至还可以再过分一点，把 base 变成一个字典量传入。&#xA;多使用内建函数 locals，可以极大的减少自己的代码量；&#xA;这不得不让我感概：真正的 Pythonista，永无止境。&#xA;def in_func(): a = 2 b = 3 def test(a, b, **args): return a + b print(test(**locals())) CHANGELOG date content 20230829 调整了一些语病 </description>
    </item>
    <item>
      <title>批量修改图片大小</title>
      <link>https://svtter.cn/2017/07/07/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E5%9B%BE%E7%89%87%E5%A4%A7%E5%B0%8F/</link>
      <pubDate>Fri, 07 Jul 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/07/07/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E5%9B%BE%E7%89%87%E5%A4%A7%E5%B0%8F/</guid>
      <description>&lt;p&gt;这两天做数据采集的时候，发现直接获取的数据文件太大了，保存起来占用内存太多，&lt;/p&gt;&#xA;&lt;p&gt;手机端又不需要这么大的内存。&lt;/p&gt;</description>
    </item>
    <item>
      <title>python生成器与协程</title>
      <link>https://svtter.cn/2017/06/15/python%E7%94%9F%E6%88%90%E5%99%A8%E4%B8%8E%E5%8D%8F%E7%A8%8B/</link>
      <pubDate>Thu, 15 Jun 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/06/15/python%E7%94%9F%E6%88%90%E5%99%A8%E4%B8%8E%E5%8D%8F%E7%A8%8B/</guid>
      <description>&lt;p&gt;贴一段代码：&lt;/p&gt;&#xA;&lt;p&gt;这段代码分别是用协程与生成器写的；&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python-logging模块</title>
      <link>https://svtter.cn/2017/06/09/python-logging%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Fri, 09 Jun 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/06/09/python-logging%E6%A8%A1%E5%9D%97/</guid>
      <description>logging 是 python 自带的日志模块，用于收集并且导出日志。&#xA;要想使用好logging，需要明确几个概念：&#xA;1. logger logger 可以理解成输出日志的核心变量。 通过 logger，可以输出 warning, info, debug, critical 等类型的日志。&#xA;2. handler handler 处理器，是把内存中 logger 的日志导向不同的输出。 例如文件、邮件、stdout 等。&#xA;3. formatter 用于规范化日志的结构，补充日志的元信息。&#xA;4. filtter 用于 logger 中日志的过滤。</description>
    </item>
    <item>
      <title>python UART编程</title>
      <link>https://svtter.cn/2017/05/15/pythonuart%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Mon, 15 May 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/05/15/pythonuart%E7%BC%96%E7%A8%8B/</guid>
      <description>UART串口编程发送接收上使用pyserial，数据处理使用struct&#xA;struct廖雪峰 Python使用struct处理二进制 用C语言 一般情况下，有了struct就不需要使用C语言写Python扩展了，但是实际上使用C语言在处理一些情况的时候会更方便一些，因此一个比较好的选择是，用C写模块，然后用Python调用。</description>
    </item>
    <item>
      <title>IPython学习</title>
      <link>https://svtter.cn/2017/04/21/ipython%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Fri, 21 Apr 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/04/21/ipython%E5%AD%A6%E4%B9%A0/</guid>
      <description>IPython6.0 版本更新，已经不支持Python2的相关版本，以及Python3.3以下的版本。赶紧升级吧！</description>
    </item>
    <item>
      <title>python-opencv中的一些问题</title>
      <link>https://svtter.cn/2017/02/18/python-opencv%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 18 Feb 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/02/18/python-opencv%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</guid>
      <description>窗口假死 在Python-opencv中，有时会出现已经cv2.detroyallwindows()但是没有退出窗口的情况。&#xA;此时需要在代码段的末尾添加waitKey函数来进行刷新。&#xA;http://stackoverflow.com/questions/6116564/destroywindow-does-not-close-window-on-mac-using-python-and-opencv&#xA;原因为止，但是这么处理是有效的。</description>
    </item>
    <item>
      <title>值得一读的Python书籍</title>
      <link>https://svtter.cn/2017/01/22/%E5%80%BC%E5%BE%97%E4%B8%80%E8%AF%BB%E7%9A%84python%E4%B9%A6%E7%B1%8D/</link>
      <pubDate>Sun, 22 Jan 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/01/22/%E5%80%BC%E5%BE%97%E4%B8%80%E8%AF%BB%E7%9A%84python%E4%B9%A6%E7%B1%8D/</guid>
      <description> https://pythonguidecn.readthedocs.io/zh/latest/ http://python3-cookbook.readthedocs.io/zh_CN/latest/index.html </description>
    </item>
    <item>
      <title>Python on Windows</title>
      <link>https://svtter.cn/2016/04/27/pythononwindows/</link>
      <pubDate>Wed, 27 Apr 2016 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2016/04/27/pythononwindows/</guid>
      <description>&lt;p&gt;在Windows上使用Python总会有这样或者那样的坑等着我们去踩。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python-使用hexo的python脚本</title>
      <link>https://svtter.cn/post/2014-11-19-python-%E4%BD%BF%E7%94%A8hexo%E7%9A%84python%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 19 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/post/2014-11-19-python-%E4%BD%BF%E7%94%A8hexo%E7%9A%84python%E8%84%9A%E6%9C%AC/</guid>
      <description>为了简化blog的使用写的python脚本，用来简化自己的操作= =&#xA;更新了一下。&#xA;最新的代码在coding.net上</description>
    </item>
  </channel>
</rss>
