<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>STL on Svtter&#39;s Blog</title>
    <link>https://svtter.cn/tags/stl/</link>
    <description>Recent content in STL on Svtter&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 27 Aug 2018 01:00:00 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/stl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title># Difference between map &amp; unordered_map</title>
      <link>https://svtter.cn/2018/08/27/difference-between-map-unordered_map/</link>
      <pubDate>Mon, 27 Aug 2018 01:00:00 +0800</pubDate>
      
      <guid>https://svtter.cn/2018/08/27/difference-between-map-unordered_map/</guid>
      <description>目前有三个容器我不太了解其内部实现，打算通过 &amp;lt;c++ primer&amp;gt; 进行学习
 map multimap unordered_map  map map 是目前最简单的结构，实现的方法是 BST（binary search tree）。因此，其时间复杂度等都与 BST 相同，搜索，增加，删除基本时间都是 log(n)。
use map when  数据有序 需要按照有序的顺序获得元素  unordered_map unordered_map 则是通常所说的 hash table，哈希表，搜索，增加，删除都是以hash表为主，较好的情况是o(1)，也就是hash函数可以较好的把元素分布到表中，如果 hash 函数比较糟糕，则每一次添加删除查找，都是完整遍历一个表。
use unordered_map when  对数据计数 只需要根据 key 访问 value  简单来讲，就是当你需要使用 vector 来计数的时候，可以用 unordered_map 来代替。
multimap multimap containers are generally slower than unordered_multimap containers to access individual elements by their key, but they allow the direct iteration on subsets based on their order.</description>
    </item>
    
  </channel>
</rss>
