<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Til on Svtter's Blog</title><link>https://svtter.cn/tags/til/</link><description>Recent content in Til on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 31 Jul 2025 11:04:42 +0800</lastBuildDate><atom:link href="https://svtter.cn/tags/til/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 aider 来编程</title><link>https://svtter.cn/p/%E4%BD%BF%E7%94%A8-aider-%E6%9D%A5%E7%BC%96%E7%A8%8B/</link><pubDate>Thu, 31 Jul 2025 11:04:42 +0800</pubDate><guid>https://svtter.cn/p/%E4%BD%BF%E7%94%A8-aider-%E6%9D%A5%E7%BC%96%E7%A8%8B/</guid><description>&lt;p>现在大量的 AI 编程工具开始出现在我们的视野里，例如 Qwen Code, Claude Code, Openai Codex 等。&lt;/p>
&lt;p>但是我认为你应该将 aider 作为你的首选 co-pilot。&lt;/p>
&lt;p>原因如下：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>aider 是开源的，而且使用 apache license。&lt;/strong> 你不必担心以后 aider 不更新无法使用，也不必担心&lt;/li>
&lt;li>&lt;strong>基于开源这一点，你可以定制化的使用 aider。&lt;/strong> 例如，你可以直接下载 aider 的源代码，通过 python 去调用以及修改 aider 的功能，从而增强 aider 或者限制它。&lt;/li>
&lt;li>&lt;strong>更快的跟进更好的模型。&lt;/strong> aider 支持了各种各样不同的 provider 的 API。你可以很快的从中选择当前性能最强的一个。如果你使用 cursor，则没有这个优势。&lt;/li>
&lt;li>&lt;strong>更好的隐私保护。&lt;/strong> aider 运行在本地，你可以完全控制你的代码和数据流向，不像一些商业产品可能会收集你的代码用于训练。&lt;/li>
&lt;li>&lt;strong>更轻量级。&lt;/strong> aider 不需要安装庞大的IDE或编辑器插件，只需要简单的命令行工具即可工作。&lt;/li>
&lt;li>&lt;strong>支持多种编辑器。&lt;/strong> 你可以继续使用你喜欢的编辑器（如VSCode、Neovim等）同时享受AI辅助编程。&lt;/li>
&lt;li>&lt;strong>更透明的交互。&lt;/strong> aider 会明确显示它修改了哪些文件，让你对代码变更更有掌控感。&lt;/li>
&lt;li>&lt;strong>社区驱动。&lt;/strong> 作为开源项目，aider 的发展方向由社区共同决定，而不是商业公司的产品路线图。&lt;/li>
&lt;/ol>
&lt;p>我已经退订了 cursor，现在使用 aider 和 Kilo Code 作为我的主要编程工具。&lt;/p>
&lt;p>Kilo 也是开源的工具，并且 Kilo Code 与编辑器结合起来更好。从使用体验上来看，其规划能力比 aider 要强一些。并且，打开一个文本文件要更容易。毕竟是编辑器插件，而不是一个 CLI 命令行工具。&lt;/p>
&lt;h2 id="docker-镜像">Docker 镜像
&lt;/h2>&lt;p>为了能够让朋友们容易的体验 aider，我构建了一个 Docker 镜像。&lt;/p>
&lt;p>获取该镜像：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker pull svtter/aider-image:0.85.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用该镜像&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it -e &lt;span class="nv">OPENROUTER_API_KEY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$OPENROUTER_API_KEY&lt;/span> --rm -v &lt;span class="k">$(&lt;/span>&lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>:/workspace bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Aider 一般使用 openrouter 的 apikey。但是我个人更加建议使用 deepseek。更便宜。&lt;/p></description></item><item><title>Qwen3 Coder Plus With Pydantic Ai</title><link>https://svtter.cn/p/qwen3-coder-plus-with-pydantic-ai/</link><pubDate>Wed, 23 Jul 2025 15:40:46 +0800</pubDate><guid>https://svtter.cn/p/qwen3-coder-plus-with-pydantic-ai/</guid><description>&lt;blockquote>
&lt;p>补充：qwen3-coder-plus 的免费额度很快就用完了（一上午的时间），背刺了我 50 元人民币。如果使用 deepseek reasoner，根本不需要这么多。因此我建议大家还是使用 deepseek API。
我也是服啦。
2025-07-31&lt;/p>&lt;/blockquote>
&lt;p>有结构的 agent 框架要比没有的好用。为了测试 qwen3-coder-plus 是否能够良好的与 pydantic-ai 结合，我编写了下列代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;测试 qwen api 在 openai sdk 下，能否与 pydantic 进行协作&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">openai&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">AsyncOpenAI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pydantic_ai&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Agent&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RunContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pydantic_ai.models.openai&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">OpenAIModel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pydantic_ai.providers.openai&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">OpenAIProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_agent&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;get custom client&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AsyncOpenAI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_retries&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">base_url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getenv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OPENAPI_BASE_URL&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">api_key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getenv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OPENAI_API_KEY&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OpenAIModel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;qwen3-coder-plus&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">provider&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">OpenAIProvider&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">openai_client&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">agent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Agent&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">model&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deps_type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">output_type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">bool&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">system_prompt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Use the `roulette_wheel` function to see if the customer has won based on the number they provide.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">agent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">agent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_agent&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@agent.tool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">roulette_wheel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">RunContext&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">square&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;check if the square is a winner&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;winner&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">square&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deps&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="s2">&amp;#34;loser&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">success_number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">18&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run_sync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Put my money on square eighteen&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deps&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">success_number&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">uv run test_qwen_agent.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>输出结果：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">-&amp;gt; % uv run ./tests/test_qwen_agent.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这证明 pydantic-ai 可以和 qwen3-coder-plus 良好协作。&lt;/p>
&lt;p>又打通了一环！&lt;/p></description></item><item><title>Try Cline</title><link>https://svtter.cn/p/try-cline/</link><pubDate>Sun, 06 Jul 2025 10:29:43 +0800</pubDate><guid>https://svtter.cn/p/try-cline/</guid><description>&lt;img src="https://svtter.cn/p/try-cline/pics/bg.webp" alt="Featured image of post Try Cline" />&lt;p>我之前一直使用 cursor 进行编程，近日发现 cline 效果也很好 (#1 calling tool on openrouter)。&lt;/p>
&lt;p>Cline 是一个 vscode 插件，可以对代码进行类似于 cursor agent 的操作。如果你不了解 cursor，我建议你先看看这个视频：&lt;/p>
&lt;iframe src="//player.bilibili.com/player.html?isOutside=true&amp;aid=114426116120045&amp;bvid=BV1WBG9zgECp&amp;cid=29714612433&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true">&lt;/iframe>
&lt;p>Cline 的不同之处在于可以自己选择编程模型。例如近期比较火热的 Kimi K2，可以通过 API 配置来使用。因此，今天（2025-07-06）尝试了一下 Cline 的编辑能力。从结果上我看，我认为似乎比我想象的要调理和强大的多。&lt;/p>
&lt;h2 id="界面显示">界面显示
&lt;/h2>&lt;p>Cline 能够查看发送给大模型的 context。这一点相比于 cursor 要透明很多。&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/try-cline/pics/cline-clip.png"
width="552"
height="465"
srcset="https://svtter.cn/p/try-cline/pics/cline-clip_hu_eaaa7125a04d835d.png 480w, https://svtter.cn/p/try-cline/pics/cline-clip_hu_c54a7197038a58e6.png 1024w"
loading="lazy"
alt="gui"
class="gallery-image"
data-flex-grow="118"
data-flex-basis="284px"
>&lt;/p>
&lt;h2 id="测试的任务">测试的任务
&lt;/h2>&lt;p>原始任务：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">帮我创建windows桌面项目，使用 c# 编写，可以设置 windows 网络为 dhcp，或者固定ip+网关+DNS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个任务设计到 windows 的 API，还有对一些简单工具的使用。&lt;/p>
&lt;h2 id="运行过程">运行过程
&lt;/h2>&lt;p>整体运行还是比较流畅的，除了遇到了一个解决不了的问题（无法显示 UI）&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/try-cline/pics/interactive.png"
width="523"
height="1780"
srcset="https://svtter.cn/p/try-cline/pics/interactive_hu_448c51fd8829035d.png 480w, https://svtter.cn/p/try-cline/pics/interactive_hu_26ce6c43bfd5c969.png 1024w"
loading="lazy"
alt="interactive"
class="gallery-image"
data-flex-grow="29"
data-flex-basis="70px"
>&lt;/p>
&lt;p>在使用过程中，遇到了无法解决的问题：程序在运行后闪退。后来发现是因为 windows 应用初始化的时候，部分变量值为 null，没有通过 xml 清单进行加载。&lt;/p>
&lt;p>最后我用 cursor + vscode 解决了问题。cursor 建议使用 visual studio 去编辑项目，而不是使用 dotnet 命令行。因此我发现了 null 变量的位置，从而修复了问题。&lt;/p>
&lt;h2 id="费用问题">费用问题
&lt;/h2>&lt;ul>
&lt;li>Cline 操作文件的过程还是比较流畅的，但是费用太高了。我操作了一上午，花费了 $3.17 美元，还没能把事情搞定。&lt;/li>
&lt;li>基本上我一个周编程时间是4天，因此两个周就能达到 cursor 一个月的订阅费用了。&lt;/li>
&lt;li>除非 cline 有足够的优势，否则我应该不会选择 cline。&lt;/li>
&lt;/ul></description></item><item><title>Docker Registry for Personal Docker Images</title><link>https://svtter.cn/p/docker-registry-for-personal-docker-images/</link><pubDate>Sun, 15 Jun 2025 16:43:47 +0800</pubDate><guid>https://svtter.cn/p/docker-registry-for-personal-docker-images/</guid><description>&lt;img src="https://svtter.cn/p/docker-registry-for-personal-docker-images/bg.jpg" alt="Featured image of post Docker Registry for Personal Docker Images" />&lt;p>这篇文章中我尝试一种新的形式: 由我要提出问题，答案由 gpt 回答和撰写。另外，我会初步审核一下 gpt 回复的内容。&lt;/p>
&lt;h2 id="亚马逊与-docker-镜像存储服务对比相关问题">亚马逊与 Docker 镜像存储服务对比相关问题
&lt;/h2>&lt;ol>
&lt;li>亚马逊美国Serverless服务器的价格是多少？&lt;/li>
&lt;li>亚马逊私有Docker Registry（如ECR）的价格是多少？&lt;/li>
&lt;li>Docker个人用户一个月的使用费用是多少？&lt;/li>
&lt;li>Docker个人版和其他付费版本（专业版、团队版、商业版）的区别是什么？&lt;/li>
&lt;li>对比亚马逊ECR和Docker Hub提供的镜像存储服务，用于存储即将过期的镜像及未来通过Docker Image部署函数服务。&lt;/li>
&lt;/ol>
&lt;h2 id="keypoints">Keypoints
&lt;/h2>&lt;ul>
&lt;li>使用 Amazon 可以让其他服务，例如 serverless 在不使用外部流量的前提下来获取 docker image.&lt;/li>
&lt;/ul>
&lt;h2 id="answer-by-gpt-doubao">Answer by GPT (doubao)
&lt;/h2>&lt;p>豆包：&lt;/p>
&lt;h3 id="亚马逊与-docker-镜像存储服务对比文档">亚马逊与 Docker 镜像存储服务对比文档
&lt;/h3>&lt;h4 id="一服务概述">&lt;strong>一、服务概述&lt;/strong>
&lt;/h4>&lt;pre>&lt;code>1. **亚马逊ECR（Elastic Container Registry）**
&lt;/code>&lt;/pre>
&lt;p>亚马逊 AWS 提供的托管 Docker 镜像存储服务，深度集成 AWS 生态（如 Lambda、ECS、EC2 等），支持私有和公共镜像仓库，具备高可用性和安全管控能力。&lt;/p>
&lt;pre>&lt;code>2. **Docker Hub**
&lt;/code>&lt;/pre>
&lt;p>Docker 官方提供的镜像存储服务，分为公共仓库和私有仓库，面向个人及企业用户，支持全球镜像分发和社区共享。&lt;/p>
&lt;h4 id="二核心功能对比">&lt;strong>二、核心功能对比&lt;/strong>
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>对比维度&lt;/strong>&lt;/th>
&lt;th>&lt;strong>亚马逊 ECR&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Docker Hub&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>存储类型&lt;/strong>&lt;/td>
&lt;td>私有仓库为主（支持公共仓库，但需手动配置）&lt;/td>
&lt;td>公共仓库免费，私有仓库需付费升级&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>集成能力&lt;/strong>&lt;/td>
&lt;td>深度集成 AWS 服务（Lambda/ECS/CodePipeline）&lt;/td>
&lt;td>支持与 Docker Desktop、CI/CD 工具通用集成&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>安全性&lt;/strong>&lt;/td>
&lt;td>- 支持 AWS IAM 权限控制、加密（KMS）&lt;/td>
&lt;td>- 基础安全扫描（付费版增强）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 镜像签名、漏洞扫描（需配合 AWS Inspector）&lt;/td>
&lt;td>- 企业版支持 SSO、团队权限管理&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>全球分发&lt;/strong>&lt;/td>
&lt;td>多区域部署，自动复制镜像到指定区域&lt;/td>
&lt;td>全球镜像缓存节点，加速拉取&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>构建与自动化&lt;/strong>&lt;/td>
&lt;td>支持与 CodeBuild 集成，自动构建镜像&lt;/td>
&lt;td>支持 Docker Cloud 自动构建（付费版）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>免费额度&lt;/strong>&lt;/td>
&lt;td>- 新用户首年 500MB 私有存储/月&lt;/td>
&lt;td>- 公共仓库无限，私有仓库免费版仅 1 个仓库&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>过期镜像管理&lt;/strong>&lt;/td>
&lt;td>需手动配置生命周期策略（删除旧版本镜像）&lt;/td>
&lt;td>付费版支持镜像过期策略设置&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="三费用对比以美国地区为例">&lt;strong>三、费用对比（以美国地区为例）&lt;/strong>
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>服务项&lt;/strong>&lt;/th>
&lt;th>&lt;strong>亚马逊 ECR&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Docker Hub&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>存储费用&lt;/strong>&lt;/td>
&lt;td>- 超出 500MB 后：0.1 美元/GB/月&lt;/td>
&lt;td>- 私有仓库：专业版 5 美元/月起（含 2GB 存储）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>数据传输&lt;/strong>&lt;/td>
&lt;td>- 同区域内 AWS 服务间传输免费&lt;/td>
&lt;td>- 公共仓库拉取免费，私有仓库按流量计费&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>镜像拉取限制&lt;/strong>&lt;/td>
&lt;td>无明确限制（按需付费）&lt;/td>
&lt;td>- 免费版：匿名用户每 6 小时 100 次拉取&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>- 专业版：5000 次/天，团队版无限制&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="四适用场景建议">&lt;strong>四、适用场景建议&lt;/strong>
&lt;/h4>&lt;pre>&lt;code>1. **选择亚马逊ECR的场景**
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>已使用 AWS 生态&lt;/strong>：如计划通过 Lambda 部署函数服务，ECR 可直接与 Lambda 集成，简化部署流程，无需额外配置网络或认证。&lt;/p>
&lt;p>&lt;strong>高安全需求&lt;/strong>：依赖 AWS IAM 权限体系，需镜像加密、细粒度访问控制（如仅限特定 AWS 账号访问）。&lt;/p>
&lt;p>&lt;strong>多区域部署&lt;/strong>：需将镜像自动同步到不同 AWS 区域，降低函数服务部署的网络延迟。&lt;/p>
&lt;pre>&lt;code>2. **选择Docker Hub的场景**
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>轻量级个人/团队项目&lt;/strong>：公共仓库适合开源协作，私有仓库专业版（5 美元/月）性价比高，适合小规模镜像存储。&lt;/p>
&lt;p>&lt;strong>跨平台兼容性&lt;/strong>：不依赖特定云服务商，支持本地开发与多云部署（如 AWS、Azure、GCP）。&lt;/p>
&lt;p>&lt;strong>社区资源依赖&lt;/strong>：需直接拉取社区公共镜像（如官方 Docker 镜像），或需要通过 Docker CLI 快速管理镜像。&lt;/p>
&lt;h4 id="五针对函数服务部署的建议">&lt;strong>五、针对函数服务部署的建议&lt;/strong>
&lt;/h4>&lt;pre>&lt;code>1. **当前过期镜像存储**
&lt;/code>&lt;/pre>
&lt;p>若镜像用于 AWS Lambda，优先选择 ECR，可通过生命周期策略自动清理旧版本，避免冗余存储费用。&lt;/p>
&lt;p>若镜像为通用型（非 AWS 专属），Docker Hub 专业版可设置私有仓库存储，并标记过期镜像为“存档”状态，节省空间。&lt;/p>
&lt;pre>&lt;code>2. **未来函数服务部署**
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>AWS Lambda 集成&lt;/strong>：使用 ECR 存储镜像，通过 Lambda 控制台直接关联 ECR 仓库，实现代码更新自动部署（需配置 CodePipeline 触发器）。&lt;/p>
&lt;p>&lt;strong>跨云或本地部署&lt;/strong>：Docker Hub 私有仓库配合 Docker Compose 或 Kubernetes，支持多环境一致性部署，适合需要灵活迁移的场景。&lt;/p>
&lt;h4 id="六总结">&lt;strong>六、总结&lt;/strong>
&lt;/h4>&lt;p>&lt;strong>亚马逊 ECR&lt;/strong>：适合深度绑定 AWS 的企业级用户，安全与集成能力强，费用按存储和流量按需计算。&lt;/p>
&lt;p>&lt;strong>Docker Hub&lt;/strong>：适合个人开发者、中小团队或跨云场景，付费版功能均衡，性价比高。
根据您的需求（存储过期镜像+函数服务部署），若已使用 AWS 生态，ECR 是更优选择；若追求通用性和成本控制，Docker Hub 专业版可满足基础需求。&lt;/p>
&lt;h2 id="結論">結論
&lt;/h2>&lt;p>完全可以使用 Docker 的私人倉庫作為自己的主力倉庫。Docker 私人仓库价格相对划算，在使用 aws 或者 tencent cloud 的时候，完全可以配置一个合适的代理来拉取相关的镜像。或者使用 docker login 登录之后再进行拉取。&lt;/p></description></item><item><title>a Little Trick to Collect Chat Records</title><link>https://svtter.cn/p/a-little-trick-to-collect-chat-records/</link><pubDate>Fri, 13 Jun 2025 11:52:27 +0800</pubDate><guid>https://svtter.cn/p/a-little-trick-to-collect-chat-records/</guid><description>&lt;p>我在与 chatgpt 沟通的时候，发现有时候会出现幻觉以及明显变笨。&lt;/p>
&lt;p>好在 gpt 提供了 canvas 功能。我们可以让 gpt 采集我们之前的问题。&lt;/p>
&lt;p>只需要这样一句话：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-txt" data-lang="txt">&lt;span class="line">&lt;span class="cl">帮我把我提出的问题整理到 canvas 上面。去掉答案，只保留问题
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如此一来，我们就能得到一个我们的对话内容。&lt;/p>
&lt;h2 id="others">others
&lt;/h2>&lt;ul>
&lt;li>仔细想来，现在 gpt 的使用方法，就像是之前的编程技巧一样。如果找到了一个好的使用场景和方法，对产出的提升帮助巨大。&lt;/li>
&lt;li>gpt 打破不了信息壁垒，但是可以协助我们从逻辑上推理出一些表象之后的本质。&lt;/li>
&lt;/ul></description></item><item><title>Using uv to publish python package</title><link>https://svtter.cn/p/using-uv-to-publish-python-package/</link><pubDate>Tue, 03 Jun 2025 15:54:28 +0800</pubDate><guid>https://svtter.cn/p/using-uv-to-publish-python-package/</guid><description>&lt;p>自我从 pdm 迁移到 uv 后，除了依赖管理之外，我希望使用 uv 来发布包。&lt;/p>
&lt;h2 id="方法一">方法一
&lt;/h2>&lt;p>LLMs 给了答复，在 pyproject.toml 中添加内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">build-system&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">requires&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;setuptools&amp;gt;=42&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;wheel&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;uv&amp;gt;=0.6.0&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">build-backend&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;setuptools.build_meta&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>添加这段内容之后，我们运行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">uv build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后再运行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python -m twine upload
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>即可完成包的发布。&lt;/p>
&lt;h2 id="方法二">方法二
&lt;/h2>&lt;p>由于有大量的使用 pdm 的项目，因此直接修改 pdm 也会造成很多不方便的地方。&lt;/p>
&lt;p>仍然可以使用 pdm 作为 &lt;code>build-system&lt;/code>，但是使用 uv 作为包管理工具。&lt;/p>
&lt;p>也就是说:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">build-system&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">requires&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;pdm-backend&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">build-backend&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;pdm.backend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>甚至&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">tool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pdm&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">distribution&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">tool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pdm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">version&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">source&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;file&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">path&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;src/spback/__init__.py&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="一些想法">一些想法
&lt;/h2>&lt;p>LLMs 已经很强大了。但是，LLMs 无法保证生成内容的准确性，需要人来验证。因此，验证产物的人类是必须的。&lt;/p>
&lt;p>这段代码必须有人来验证才能工作。当然，如果仅仅是修改内容，可以让 LLMs 与我们协作，通过 cursor 的形式。&lt;/p></description></item><item><title>Better Oh My Zsh</title><link>https://svtter.cn/p/better-oh-my-zsh/</link><pubDate>Fri, 09 May 2025 12:32:20 +0800</pubDate><guid>https://svtter.cn/p/better-oh-my-zsh/</guid><description>&lt;img src="https://svtter.cn/p/better-oh-my-zsh/bg.png" alt="Featured image of post Better Oh My Zsh" />&lt;p>ohmyzsh 是一个十分好用的工具，但实际上默认配置尚未让这个工具达到巅峰。&lt;/p>
&lt;p>需要编辑&lt;code>~/.zshrc&lt;/code>来增加两个插件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">plugins&lt;/span>&lt;span class="o">=(&lt;/span>... &lt;span class="nb">history&lt;/span> zsh-autosuggestions zsh-syntax-highlighting&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>要使用这些插件，需要从 github 上下载对应的 repo。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/zsh-users/zsh-autosuggestions &lt;span class="si">${&lt;/span>&lt;span class="nv">ZSH_CUSTOM&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="p">~/.oh-my-zsh/custom&lt;/span>&lt;span class="si">}&lt;/span>/plugins/zsh-autosuggestions
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git &lt;span class="si">${&lt;/span>&lt;span class="nv">ZSH_CUSTOM&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="p">~/.oh-my-zsh/custom&lt;/span>&lt;span class="si">}&lt;/span>/plugins/zsh-syntax-highlighting
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如此一来，ohmyzsh 可以自动提示以及高亮显示命令了。&lt;/p>
&lt;p>此外，由于 antigen 已经很久没有更新了，不太推荐使用。&lt;/p></description></item><item><title>使用 openhands 操作代码仓库</title><link>https://svtter.cn/p/%E4%BD%BF%E7%94%A8-openhands-%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93/</link><pubDate>Thu, 08 May 2025 11:25:53 +0800</pubDate><guid>https://svtter.cn/p/%E4%BD%BF%E7%94%A8-openhands-%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93/</guid><description>&lt;img src="https://svtter.cn/p/%E4%BD%BF%E7%94%A8-openhands-%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93/image.png" alt="Featured image of post 使用 openhands 操作代码仓库" />&lt;p>codex 是 openai 出品的 headless code editor (我起的名字)。 相对的，openhands 是一个优秀的开源作品，可以自主操作和编辑 repo。openhands 有基于 web 的 UI 界面。&lt;/p>
&lt;h2 id="安装">安装
&lt;/h2>&lt;p>通过私有化部署可以直接使用 openhands&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker pull docker.all-hands.dev/all-hands-ai/runtime:0.37-nikolaik
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -it --rm --pull&lt;span class="o">=&lt;/span>always &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">SANDBOX_RUNTIME_CONTAINER_IMAGE&lt;/span>&lt;span class="o">=&lt;/span>docker.all-hands.dev/all-hands-ai/runtime:0.37-nikolaik &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -e &lt;span class="nv">LOG_ALL_EVENTS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /var/run/docker.sock:/var/run/docker.sock &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v ~/.openhands-state:/.openhands-state &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -p 3000:3000 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --add-host host.docker.internal:host-gateway &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --name openhands-app &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> docker.all-hands.dev/all-hands-ai/openhands:0.37
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="使用自定的-provider">使用自定的 provider
&lt;/h2>&lt;ul>
&lt;li>openhands 实际上使用 litellm 来调用其他的仓库。
&lt;ul>
&lt;li>配置 litellm 的&lt;a class="link" href="https://docs.litellm.ai/docs/proxy/configs" target="_blank" rel="noopener"
>相关文档&lt;/a>&lt;/li>
&lt;li>配置样例
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">model_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">vllm-models&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">litellm_params&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">model&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">openai/facebook/opt-125m&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># the `openai/` prefix tells litellm it&amp;#39;s openai compatible&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">api_base&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://0.0.0.0:4000/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">api_key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">none&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rpm&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1440&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">model_info&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;img src="https://svtter.cn/p/%E4%BD%BF%E7%94%A8-openhands-%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93/image.png"
width="1628"
height="1386"
srcset="https://svtter.cn/p/%E4%BD%BF%E7%94%A8-openhands-%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93/image_hu_9a632fc87bb7442b.png 480w, https://svtter.cn/p/%E4%BD%BF%E7%94%A8-openhands-%E6%93%8D%E4%BD%9C%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93/image_hu_f99d31c2de0c77b1.png 1024w"
loading="lazy"
alt="image.png"
class="gallery-image"
data-flex-grow="117"
data-flex-basis="281px"
>&lt;/li>
&lt;/ul>
&lt;p>实际上配置 openhands 不需要去配置 litellm。但是，配置的方式和 litellm 是一样的。&lt;/p>
&lt;p>在 openhands 设置中，需要在 model 前面加上 openai 来让 litellm 知道模型是 openai 兼容的。&lt;/p></description></item><item><title>Build a Kubernetes Cluster.md</title><link>https://svtter.cn/p/build-a-kubernetes-cluster.md/</link><pubDate>Sat, 26 Apr 2025 09:55:38 +0800</pubDate><guid>https://svtter.cn/p/build-a-kubernetes-cluster.md/</guid><description>&lt;img src="https://svtter.cn/p/build-a-kubernetes-cluster.md/bg.png" alt="Featured image of post Build a Kubernetes Cluster.md" />&lt;p>Kubernetes 是现行容器云的事实标准。这两天我构建了一个私有化的 kubernetes 集群，将过程整理成了脚本，可以使用这些脚本进行二次部署。&lt;/p>
&lt;p>部署集群的代码：&lt;/p>
&lt;script src="https://tarptaeya.github.io/repo-card/repo-card.js">&lt;/script>
&lt;!-- inside body, where you want to create the card -->
&lt;div class="repo-card" data-repo="svtter/k8s-deployment">&lt;/div>
&lt;h2 id="架设前提">架设前提
&lt;/h2>&lt;p>实际上，大多数 kubernetes 部署失败的案例，都在网络环境建设上翻了跟头。&lt;/p>
&lt;p>架设 kubernetes 集群的前提条件（包括对人和对环境的）：&lt;/p>
&lt;ol>
&lt;li>自由的访问网络&lt;/li>
&lt;li>能够对内网中的 DNS 服务器进行管理，能够对 IP 地址进行管理。&lt;/li>
&lt;li>服务器方面：&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>作为 master 的服务器 &amp;gt;= 1&lt;/li>
&lt;li>作为 node 节点的服务器 &amp;gt;= 2&lt;/li>
&lt;li>使用 supported 操作系统。例如 Ubuntu，CentOS 等。&lt;/li>
&lt;/ul>
&lt;p>此外，服务器防火墙，swap 等需要提前关闭。这些前提条件在&lt;a class="link" href="https://sealos.run/docs/k8s/quick-start/deploy-kubernetes" target="_blank" rel="noopener"
>这里&lt;/a>会更加详细的描述，我这里就不啰嗦了。在我的代码库中，我提供了对应的代码，可以快速进行操作。&lt;/p>
&lt;p>部署 kubernetes 是一个中高级运维人员的必备技能。这个过程中涉及了大量的网络以及操作系统知识。&lt;/p>
&lt;h2 id="架构简述">架构简述
&lt;/h2>&lt;p>Kubernetes 结构图如下：&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/build-a-kubernetes-cluster.md/arch.png"
width="1024"
height="698"
srcset="https://svtter.cn/p/build-a-kubernetes-cluster.md/arch_hu_8f61cc3c186fb5ed.png 480w, https://svtter.cn/p/build-a-kubernetes-cluster.md/arch_hu_2a09611c6ee56014.png 1024w"
loading="lazy"
alt="Kubernetes architecture"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="352px"
>&lt;/p>
&lt;p>其中，master 节点再 Control Plan 中，用于接收外部请求和转发。&lt;/p>
&lt;h2 id="安装过程">安装过程
&lt;/h2>&lt;p>安装脚本：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装 uv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bash install-uv.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 根据自己的实际情况配置网络中的主机&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 配置 master node，worker node&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim conf.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装 sealos&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bash download_sealos.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 运行安装脚本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">uv run install-k8s.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用">使用
&lt;/h2>&lt;p>安装完成后，可以直接使用 helm 进行集群容器的安装和卸载。&lt;/p></description></item><item><title>about PDF Reader.md</title><link>https://svtter.cn/p/about-pdf-reader.md/</link><pubDate>Thu, 24 Apr 2025 16:16:41 +0800</pubDate><guid>https://svtter.cn/p/about-pdf-reader.md/</guid><description>&lt;img src="https://svtter.cn/p/about-pdf-reader.md/image.png" alt="Featured image of post about PDF Reader.md" />&lt;p>这两天一直在测试文件接口与大模型的结合，从 pdf 读取数据，并且转换成 excel 的能力。&lt;/p>
&lt;p>这是开源的代码：&lt;/p>
&lt;script src="https://tarptaeya.github.io/repo-card/repo-card.js">&lt;/script>
&lt;!-- inside body, where you want to create the card -->
&lt;div class="repo-card" data-repo="svtter/pdf-reader">&lt;/div>
&lt;h2 id="资源声明">资源声明
&lt;/h2>&lt;ul>
&lt;li>本文的图片出自 &lt;a class="link" href="https://medium.com/@kapildevkhatik2/the-ultimate-guide-to-pdf-summarization-with-openai-api-simplify-your-reading-process-80021210cd11" target="_blank" rel="noopener"
>https://medium.com/@kapildevkhatik2/the-ultimate-guide-to-pdf-summarization-with-openai-api-simplify-your-reading-process-80021210cd11&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>String Template in Prompt.md</title><link>https://svtter.cn/p/string-template-in-prompt.md/</link><pubDate>Fri, 18 Apr 2025 10:16:02 +0800</pubDate><guid>https://svtter.cn/p/string-template-in-prompt.md/</guid><description>&lt;img src="https://svtter.cn/p/string-template-in-prompt.md/image.png" alt="Featured image of post String Template in Prompt.md" />&lt;p>我在尝试编写 prompt 的时候，遇到了一个问题：&lt;code>KeyError: '\n &amp;quot;filename&amp;quot;'&lt;/code>.&lt;/p>
&lt;p>原因是我在 prompt 中是这样编写的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">请以JSON格式返回结果，格式如下：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;filename&amp;#34;: &amp;#34;文件名.csv&amp;#34;, // 如果没有明确提到文件名，填写null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;content&amp;#34;: &amp;#34;第一行第一列,第一行第二列\n第二行第一列,第二行第二列\n...&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // 更多CSV数据...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">文本内容如下：&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{text}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我是采用这种方式来调用的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取上面的 prompt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">prompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_prompt&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">prompt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>发现问题之后，我想能不能用&lt;code>langchain&lt;/code>的&lt;code>StringTemplate&lt;/code>绕过。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">langchain_core.prompts&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">PromptTemplate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">prompt_template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PromptTemplate&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_template&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prompt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>结果也是报了同样的错误。&lt;code>KeyError: '\n &amp;quot;filename&amp;quot;'&lt;/code>。&lt;/p>
&lt;p>才发觉 &lt;code>StringTemplate&lt;/code> 底层应该也是用 &lt;code>string.format&lt;/code> 的方法去实现的。&lt;/p>
&lt;p>那么怎么办呢？用 &lt;code>jinja2&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">jinja2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">prompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_prompt&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">prompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jinja2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Template&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prompt&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">render&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样一来 render 就没有问题了。&lt;/p></description></item><item><title>Knowledge of PPOCR.md</title><link>https://svtter.cn/p/knowledge-of-ppocr.md/</link><pubDate>Mon, 14 Apr 2025 18:11:00 +0800</pubDate><guid>https://svtter.cn/p/knowledge-of-ppocr.md/</guid><description>&lt;img src="https://svtter.cn/p/knowledge-of-ppocr.md/background.jpg" alt="Featured image of post Knowledge of PPOCR.md" />&lt;p>我在 2.7 版本中使用的 ppocrlabel 组件，被迁移到了单独的 &lt;a class="link" href="https://github.com/PFCCLab/PPOCRLabel" target="_blank" rel="noopener"
>PPOCRLabel&lt;/a>。&lt;/p>
&lt;h2 id="ppocrlabel">PPOCRLabel
&lt;/h2>&lt;p>可以通过 ppocrlabel 组件，使用模型对图像进行预标记，然后在手动进行自主标记。&lt;/p>
&lt;p>这种方式可以极大的降低标注的成本。&lt;/p>
&lt;p>关于 &lt;a class="link" href="" >paddleocr&lt;/a> 的知识，以后都会在这个博客下面更新。&lt;/p>
&lt;p>在部署 paddle 的时候遇到了一些问题，这里记录一下。&lt;/p>
&lt;h2 id="notebook-related">Notebook Related
&lt;/h2>&lt;ol>
&lt;li>我使用镜像&lt;code>registry.baidubce.com/paddlepaddle/paddle:2.4.2&lt;/code>，安装&lt;code>notebook&lt;/code>，无法打开:&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://svtter.cn/p/knowledge-of-ppocr.md/pics/paddle-note-error.png"
width="1832"
height="414"
srcset="https://svtter.cn/p/knowledge-of-ppocr.md/pics/paddle-note-error_hu_c106deaf2249524f.png 480w, https://svtter.cn/p/knowledge-of-ppocr.md/pics/paddle-note-error_hu_a87e63bcde44b288.png 1024w"
loading="lazy"
alt="error"
class="gallery-image"
data-flex-grow="442"
data-flex-basis="1062px"
>&lt;/p>
&lt;ol start="2">
&lt;li>paddle:2.4 以上的版本，如果 CPU 不支持 AVX，那么是无法运行的。&lt;/li>
&lt;/ol>
&lt;p>我尝试部署了一个 paddle 模型，最后通过使用&lt;code>PaddleOCR&lt;/code>这个类完成了推理。其他的方法推理都不太行。&lt;/p>
&lt;p>实际上 paddle 在 ocr 方面做的很出色了，兼顾了很多细节。&lt;/p>
&lt;p>但是,由于文档使用的工具链上有不够细致的地方，导致用户不太舒服。&lt;/p></description></item><item><title>Diffusion Model.md</title><link>https://svtter.cn/p/diffusion-model.md/</link><pubDate>Sat, 05 Apr 2025 21:51:38 +0800</pubDate><guid>https://svtter.cn/p/diffusion-model.md/</guid><description>&lt;img src="https://svtter.cn/p/diffusion-model.md/noise-dog.png" alt="Featured image of post Diffusion Model.md" />&lt;p>深度学习的魅力在于，一旦有新的任务在某些架构上获得了新的性能，许多其他任务可以参考这个架构，进而从中受益。&lt;/p>
&lt;p>我想，diffusion model 是一个典型的模型。虽然我不进行 diffusion model 的相关研究，目前也没有相关的项目与之有关，但是了解一下这个网络架构并没有坏处。&lt;/p>
&lt;p>diffusion model 是一个从图像处理过程中受益的模型。&lt;/p>
&lt;p>diffusion model 通过学习图像增加噪声的逆过程，从而学习到了从噪声中生成图像的能力。&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/diffusion-model.md/noise-dog.png"
width="2992"
height="668"
srcset="https://svtter.cn/p/diffusion-model.md/noise-dog_hu_c99a3a942e0e9506.png 480w, https://svtter.cn/p/diffusion-model.md/noise-dog_hu_ad0c92868aa71fcd.png 1024w"
loading="lazy"
alt="noise-dog"
class="gallery-image"
data-flex-grow="447"
data-flex-basis="1074px"
>&lt;/p>
&lt;p>为了能够让模型获得更好的性能，将模型的降噪 step 作为输入之一。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">noise image -&amp;gt; -------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | |----&amp;gt; cleared image
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">step (int) -&amp;gt; | denoiser |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --------------|
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Prompt is a soft Contrain.md</title><link>https://svtter.cn/p/prompt-is-a-soft-contrain.md/</link><pubDate>Fri, 04 Apr 2025 11:20:42 +0800</pubDate><guid>https://svtter.cn/p/prompt-is-a-soft-contrain.md/</guid><description>&lt;img src="https://svtter.cn/p/prompt-is-a-soft-contrain.md/ds.jpg" alt="Featured image of post Prompt is a soft Contrain.md" />&lt;p>大语言模型的提示词本质上是一种软约束（soft contrain）。&lt;/p>
&lt;p>我们经常会发现，尽管我们对大模型提出了要求，这种要求往往是通过提示词实现的，但大模型仍然会输出超出我们要求的内容。&lt;/p>
&lt;p>因此，这种要求不是硬性的，永远都会有极小的可能性会出现问题。例如 CRNN，也一定会出现识别的字符串超出原本字符串长度的情况。&lt;/p>
&lt;p>进而，工程师在设计基于 LLMs 的应用时，应该将这部分考虑进去。毕竟，如果&lt;code>int a = 10; print(a);&lt;/code> 的输出一般就是&lt;code>10&lt;/code>。&lt;/p>
&lt;p>工程师为了能够让预训练的大模型能够更好的与人进行沟通（chat），往往在训练后会对大模型进行微调(fine tune)。&lt;/p>
&lt;p>这种微调，某种程度上就是使用一些已有的 prompt 和回答，对模型进行训练。&lt;/p>
&lt;p>因此，prompt engineering 的意义就是，使得 prompt 能够和微调的数据集进行匹配，从而使得模型能够获得更好的性能。&lt;/p></description></item><item><title>Using uv.md</title><link>https://svtter.cn/p/using-uv.md/</link><pubDate>Sun, 30 Mar 2025 14:33:34 +0800</pubDate><guid>https://svtter.cn/p/using-uv.md/</guid><description>&lt;img src="https://svtter.cn/p/using-uv.md/image.png" alt="Featured image of post Using uv.md" />&lt;p>近期我开始大量的使用 uv 而不是 pdm 了。&lt;/p>
&lt;h2 id="knowledge-piece">knowledge piece
&lt;/h2>&lt;p>&lt;code>uvx&lt;/code> could replace &lt;code>pipx&lt;/code>.&lt;/p>
&lt;p>The uvx command invokes a tool without installing it.&lt;/p>
&lt;p>For example, to run &lt;code>ruff&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">uvx ruff
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Create a Never Stop Container.md</title><link>https://svtter.cn/p/create-a-never-stop-container.md/</link><pubDate>Fri, 14 Mar 2025 16:45:58 +0800</pubDate><guid>https://svtter.cn/p/create-a-never-stop-container.md/</guid><description>&lt;img src="https://svtter.cn/p/create-a-never-stop-container.md/background.png" alt="Featured image of post Create a Never Stop Container.md" />&lt;p>有时候我们需要启动一个不停止的容器，来调试我们的应用，或者使用 devcontainer。&lt;/p>
&lt;p>如果我们想在 &lt;code>Dockerfile&lt;/code> 中完成这个事情，我们可以添加这个&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="line">&lt;span class="cl">...&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 其他内容&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;tail&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;/dev/null&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果是 &lt;code>docker-compose.yml&lt;/code>，我们可以这样做&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">your-app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">entrypoint&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;tail&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;-f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/dev/null&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如此一来，这个容器就不会停止了。&lt;/p></description></item><item><title>Play With Openmanus.md</title><link>https://svtter.cn/p/play-with-openmanus.md/</link><pubDate>Mon, 10 Mar 2025 20:21:44 +0800</pubDate><guid>https://svtter.cn/p/play-with-openmanus.md/</guid><description>&lt;img src="https://svtter.cn/p/play-with-openmanus.md/pics/chat.png" alt="Featured image of post Play With Openmanus.md" />&lt;p>Manus 最近很火爆，我部署了 &lt;a class="link" href="https://github.com/mannaandpoem/OpenManus" target="_blank" rel="noopener"
>OpenManus&lt;/a>，来体验一下 Manus 这种通用的 Agent。&lt;/p>
&lt;p>为此，我构建了一个镜像，可以无痛拉起 &lt;a class="link" href="https://github.com/mannaandpoem/OpenManus" target="_blank" rel="noopener"
>OpenManus&lt;/a>，可以从 &lt;a class="link" href="https://hub.docker.com/r/svtter/openmanus" target="_blank" rel="noopener"
>svtter/openmanus&lt;/a> 获得。&lt;/p>
&lt;h2 id="教程">教程
&lt;/h2>&lt;ol>
&lt;li>编写 &lt;code>docker-compose.yml&lt;/code>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">openmanus&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">images&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">svtter/openmanus&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - .:/app&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./config:/app/config&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>填写 &lt;code>config/config.yml&lt;/code> 文件:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># A config file for OpenManus&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># Global LLM configuration&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">llm]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">model = &amp;#34;anthropic/claude-3.7-sonnet&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">base_url = &amp;#34;https://openrouter.ai/api/v1&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用 openrouter&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">api_key = &amp;#34;sk-**&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># api key&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">max_tokens = 4096&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">temperature = 0.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># [llm] #AZURE OPENAI:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># api_type= &amp;#39;azure&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># model = &amp;#34;YOUR_MODEL_NAME&amp;#34; #&amp;#34;gpt-4o-mini&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># base_url = &amp;#34;{YOUR_AZURE_ENDPOINT.rstrip(&amp;#39;/&amp;#39;)}/openai/deployments/{AZURE_DEPOLYMENT_ID}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># api_key = &amp;#34;AZURE API KEY&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># max_tokens = 8096&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># temperature = 0.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># api_version=&amp;#34;AZURE API VERSION&amp;#34; #&amp;#34;2024-08-01-preview&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># Optional configuration for specific LLM models&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">llm.vision]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">model = &amp;#34;anthropic/claude-3.7-sonnet&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">base_url = &amp;#34;https://openrouter.ai/api/v1&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用 openrouter&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">api_key = &amp;#34;sk-**&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用 api-key&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>最后的目录结构应该这样的：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── config.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── docker-compose.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1 directory, 2 files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>运行命令：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker compose run openmanus python main.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>即可看到交互命令行。&lt;/p>
&lt;h2 id="测试">测试
&lt;/h2>&lt;p>让我们测试一下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">INFO [browser_use] BrowserUse logging setup complete with level info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO [root] Anonymized telemetry enabled. See https://docs.browser-use.com/development/telemetry for more information.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter your prompt (or &amp;#39;exit&amp;#39;/&amp;#39;quit&amp;#39; to quit): who is the best NBA player now?
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行完成：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">03&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">31&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">20.198&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">base&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">137&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">Executing&lt;/span> &lt;span class="n">step&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">03&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">31&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">26.653&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toolcall&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">think&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">53&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="err">✨&lt;/span> &lt;span class="n">Manus&lt;/span>&lt;span class="s1">&amp;#39;s thoughts: Thank you for your question about the best NBA player currently. Based on my research, I can provide you with a definitive answer:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">**&lt;/span>&lt;span class="n">Nikola&lt;/span> &lt;span class="n">Jokic&lt;/span>&lt;span class="o">**&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">Denver&lt;/span> &lt;span class="n">Nuggets&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">widely&lt;/span> &lt;span class="n">considered&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">best&lt;/span> &lt;span class="n">NBA&lt;/span> &lt;span class="n">player&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">This&lt;/span> &lt;span class="n">conclusion&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">supported&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="n">multiple&lt;/span> &lt;span class="n">authoritative&lt;/span> &lt;span class="n">sources&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="n">ESPN&lt;/span>&lt;span class="s1">&amp;#39;s NBA Rank 2024-2025 places Jokic at #1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="n">CBS&lt;/span> &lt;span class="n">Sports&lt;/span> &lt;span class="n">rankings&lt;/span> &lt;span class="n">specifically&lt;/span> &lt;span class="n">mention&lt;/span> &lt;span class="s2">&amp;#34;Nikola Jokic over SGA at No. 1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="n">Jokic&lt;/span> &lt;span class="n">has&lt;/span> &lt;span class="n">won&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">NBA&lt;/span> &lt;span class="n">MVP&lt;/span> &lt;span class="n">award&lt;/span> &lt;span class="n">three&lt;/span> &lt;span class="n">times&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">recent&lt;/span> &lt;span class="n">years&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2021&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2022&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="mi">2024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="n">He&lt;/span> &lt;span class="n">led&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">Denver&lt;/span> &lt;span class="n">Nuggets&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">their&lt;/span> &lt;span class="n">first&lt;/span> &lt;span class="n">NBA&lt;/span> &lt;span class="n">Championship&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="mi">2023&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">The&lt;/span> &lt;span class="n">current&lt;/span> &lt;span class="n">consensus&lt;/span> &lt;span class="n">top&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="n">NBA&lt;/span> &lt;span class="n">players&lt;/span> &lt;span class="n">are&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">1.&lt;/span> &lt;span class="n">Nikola&lt;/span> &lt;span class="n">Jokic&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Denver&lt;/span> &lt;span class="n">Nuggets&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">2.&lt;/span> &lt;span class="n">Luka&lt;/span> &lt;span class="n">Doncic&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Dallas&lt;/span> &lt;span class="n">Mavericks&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">3.&lt;/span> &lt;span class="n">Giannis&lt;/span> &lt;span class="n">Antetokounmpo&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Milwaukee&lt;/span> &lt;span class="n">Bucks&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">4.&lt;/span> &lt;span class="n">Shai&lt;/span> &lt;span class="n">Gilgeous&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Alexander&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Oklahoma&lt;/span> &lt;span class="n">City&lt;/span> &lt;span class="n">Thunder&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">5.&lt;/span> &lt;span class="n">Jayson&lt;/span> &lt;span class="n">Tatum&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Boston&lt;/span> &lt;span class="n">Celtics&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Jokic&lt;/span> &lt;span class="n">stands&lt;/span> &lt;span class="n">out&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">his&lt;/span> &lt;span class="n">exceptional&lt;/span> &lt;span class="n">versatility&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">center&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">elite&lt;/span> &lt;span class="n">passing&lt;/span> &lt;span class="n">skills&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">scoring&lt;/span> &lt;span class="n">efficiency&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rebounding&lt;/span> &lt;span class="n">prowess&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">basketball&lt;/span> &lt;span class="n">IQ&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">His&lt;/span> &lt;span class="n">unique&lt;/span> &lt;span class="n">ability&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">both&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">dominant&lt;/span> &lt;span class="n">scorer&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">primary&lt;/span> &lt;span class="n">playmaker&lt;/span> &lt;span class="n">at&lt;/span> &lt;span class="mi">7&lt;/span> &lt;span class="n">feet&lt;/span> &lt;span class="n">tall&lt;/span> &lt;span class="n">makes&lt;/span> &lt;span class="n">him&lt;/span> &lt;span class="n">one&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">most&lt;/span> &lt;span class="n">impactful&lt;/span> &lt;span class="n">players&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">league&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">03&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">31&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">26.653&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toolcall&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">think&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">54&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="err">🛠️&lt;/span> &lt;span class="n">Manus&lt;/span> &lt;span class="n">selected&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="n">tools&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">use&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">03&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">31&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">26.654&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toolcall&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">think&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">58&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="err">🧰&lt;/span> &lt;span class="n">Tools&lt;/span> &lt;span class="n">being&lt;/span> &lt;span class="n">prepared&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;terminate&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="费用">费用
&lt;/h2>&lt;p>一次性花了我一块钱，恐怖如斯。&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/play-with-openmanus.md/pics/price.png"
width="724"
height="63"
srcset="https://svtter.cn/p/play-with-openmanus.md/pics/price_hu_2fd15c616c4c7747.png 480w, https://svtter.cn/p/play-with-openmanus.md/pics/price_hu_d13840975a8d9f99.png 1024w"
loading="lazy"
alt="price"
class="gallery-image"
data-flex-grow="1149"
data-flex-basis="2758px"
>&lt;/p>
&lt;h2 id="结论和想法">结论和想法
&lt;/h2>&lt;ol>
&lt;li>用了 google search，browser，以及 python 作为 agent tools。很有想法，实现也很快。&lt;/li>
&lt;li>东契奇已经去了湖人，分析的数据还在独行侠，AGI 无法淘汰我们！&lt;/li>
&lt;li>机会永远留给有准备的人&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://svtter.cn/p/play-with-openmanus.md/pics/chat.png"
width="900"
height="298"
srcset="https://svtter.cn/p/play-with-openmanus.md/pics/chat_hu_b27caa3b0d69649a.png 480w, https://svtter.cn/p/play-with-openmanus.md/pics/chat_hu_3593c209d2e46352.png 1024w"
loading="lazy"
alt="chat"
class="gallery-image"
data-flex-grow="302"
data-flex-basis="724px"
>&lt;/p></description></item><item><title>Django Bridge and Telepath Make Decode Easier.md</title><link>https://svtter.cn/p/django-bridge-and-telepath-make-decode-easier.md/</link><pubDate>Mon, 10 Mar 2025 19:34:19 +0800</pubDate><guid>https://svtter.cn/p/django-bridge-and-telepath-make-decode-easier.md/</guid><description>&lt;p>&lt;a class="link" href="https://wagtail.github.io/telepath/" target="_blank" rel="noopener"
>telepath&lt;/a>是 wagtail 开发的一个库，可以用于对 python 对象进行转换。&lt;/p>
&lt;p>其最大的好处是，将原本复杂的 python class -&amp;gt; JSON -&amp;gt; Javascript class，转换成 python class -&amp;gt; Javascript class。&lt;/p>
&lt;p>更具体的内容可以参考&lt;a class="link" href="https://wagtail.github.io/telepath/tutorial/" target="_blank" rel="noopener"
>tutorial&lt;/a>。&lt;/p>
&lt;p>那么有没有可能在这个基础上，让 React 和 Django 直通呢？ &lt;a class="link" href="https://django-bridge.org/docs/introduction/" target="_blank" rel="noopener"
>Django Bridge&lt;/a> 就是做这个工作的。&lt;/p>
&lt;p>&lt;a class="link" href="https://django-bridge.org/docs/introduction/" target="_blank" rel="noopener"
>Django Bridge&lt;/a> 允许用户直接返回 JSON 结构，然后 React 根据 JSON 结构进行解析，对应渲染 React Component。&lt;/p>
&lt;h2 id="问题是什么">问题是什么
&lt;/h2>&lt;ol>
&lt;li>学习成本。如果 django bridge 是一个团队中大家都熟悉的东西，那么上手不慢。但是如果大家都不太熟悉，那么引入 django bridge，需要花时间学习。&lt;/li>
&lt;li>调试成本。相比于 http JSON，这种方式依赖于 Django Bridge 对 JSON 的解析。调试起来可能会有一定的困难。&lt;/li>
&lt;li>对于已有的项目，代码中可能存在基本通信框架，那么这个库可能会导致旧代码的改造。&lt;/li>
&lt;/ol>
&lt;p>其他的内容，在&lt;a class="link" href="https://django-bridge.org/docs/introduction/#should-i-use-it" target="_blank" rel="noopener"
>Should I use it?&lt;/a>中有所提及，可供参考。&lt;/p>
&lt;h2 id="有什么优势">有什么优势
&lt;/h2>&lt;ol>
&lt;li>虽然是前后端分离，但不需要考虑 session 和 cookie 的管理了。也不需要考虑 JWT 的问题。(是不是分离了也不需要管理呢？)&lt;/li>
&lt;li>官网原文：If you&amp;rsquo;re about to build a web app or SaaS product with Django and React, this library could save you a lot of time. It provides all the necessary tools to integrate a React frontend with Django and includes a project template with simple Vite-based frontend tooling to get you started.&lt;/li>
&lt;/ol>
&lt;p>更多的内容，请移步官网阅读。&lt;/p></description></item><item><title>ComfyUI Start.md</title><link>https://svtter.cn/p/comfyui-start.md/</link><pubDate>Mon, 10 Mar 2025 16:54:57 +0800</pubDate><guid>https://svtter.cn/p/comfyui-start.md/</guid><description>&lt;img src="https://svtter.cn/p/comfyui-start.md/pics/image.png" alt="Featured image of post ComfyUI Start.md" />&lt;p>ComfyUI 是一个使用生成模型进行图像处理的工作流工具，可以很好的处理图像和生成图像。
为了能够流畅运行，我将其部署到服务器上。直接根据&lt;a class="link" href="https://docs.comfy.org/zh-CN/installation/manual_install#nvidia" target="_blank" rel="noopener"
>官方链接&lt;/a>去跑，非常流畅。&lt;/p>
&lt;h2 id="问题和解答">问题和解答
&lt;/h2>&lt;ol>
&lt;li>ComfyUI 一般是桌面版本，服务器上也能使用吗？&lt;/li>
&lt;/ol>
&lt;p>是的。实际上 ComfyUI 是基于 WEB 开发的。如果自己部署，搞复杂一点，可以自己部署一个 nginx server，中间套一个 user auth，来提供服务。
如果追求简单化，直接 &lt;code>python main.py&lt;/code> 然后转发即可。&lt;/p></description></item><item><title>Update the Hugo.md</title><link>https://svtter.cn/p/update-the-hugo.md/</link><pubDate>Fri, 07 Mar 2025 11:39:32 +0800</pubDate><guid>https://svtter.cn/p/update-the-hugo.md/</guid><description>&lt;p>由于之前使用的 hugo 版本太低，更新需要费很多功夫，于是我更新了 hugo，现在只需要关注文章即可。&lt;/p>
&lt;p>我现在使用的新的主题是 &lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack" target="_blank" rel="noopener"
>hugo-theme-stack&lt;/a>.&lt;/p>
&lt;p>因为我的 &lt;code>hugo 源文件&lt;/code> 和 &lt;code>&amp;lt;username&amp;gt;.github.io&lt;/code> 不再同一个 repo 下，也就是说，我不能使用 branch 来直接配置 gh-pages。&lt;/p>
&lt;p>因此，我调整了 &lt;code>workflow&lt;/code>，来适应我的情况。这是我的 workflow 配置文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy to Github Pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">master]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">master]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">permissions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Give the default GITHUB_TOKEN write permission to commit and push the&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># added or changed files to the repository.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">contents&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">write&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Cache Hugo resources&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/cache@v4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cache-name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cache-hugo-resources&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">resources&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ env.cache-name }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/setup-go@v5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">go-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;^1.17.0&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">go version&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;latest&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify --gc&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">personal_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.ACCESS_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external_repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">svtter/svtter.github.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Openrouter Usage.md</title><link>https://svtter.cn/p/openrouter-usage.md/</link><pubDate>Mon, 03 Mar 2025 11:45:12 +0800</pubDate><guid>https://svtter.cn/p/openrouter-usage.md/</guid><description>&lt;p>周天开发了一个基于大模型的应用，使用了 openrouter，遇到了一些问题，记录一点收获。&lt;/p>
&lt;h2 id="不支持-embedding">不支持 embedding
&lt;/h2>&lt;p>最大的问题就是不支持 embedding API。虽然 openrouter 已经支持了 openai 等不同的模型的 API endopint，
但是 embedding 是开发 RAG 应用的关键。不支持 embedding 使得 openrouter 在实际应用开发上无所作为。&lt;/p>
&lt;p>&lt;img src="https://svtter.cn/p/openrouter-usage.md/pics/image.png"
width="799"
height="211"
srcset="https://svtter.cn/p/openrouter-usage.md/pics/image_hu_57d5ac83c17b591e.png 480w, https://svtter.cn/p/openrouter-usage.md/pics/image_hu_ea2692bffb369dc7.png 1024w"
loading="lazy"
alt="prof"
class="gallery-image"
data-flex-grow="378"
data-flex-basis="908px"
>&lt;/p></description></item><item><title>Python Timezone.md</title><link>https://svtter.cn/p/python-timezone.md/</link><pubDate>Fri, 28 Feb 2025 17:46:29 +0800</pubDate><guid>https://svtter.cn/p/python-timezone.md/</guid><description>&lt;p>无论当前服务器设置如何，输出&lt;code>Asia/Shanghai&lt;/code>的时间。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pytz&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">utc_now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utcnow&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># Get current time in UTC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">utc_timezone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pytz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">utc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">utc_now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">utc_timezone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">localize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">utc_now&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Localize the time as UTC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Convert to another timezone, e.g., &amp;#39;America/New_York&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">new_timezone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pytz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">timezone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Asia/Shanghai&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">new_timezone_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">utc_now&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">astimezone&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_timezone&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new_timezone_time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strftime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;%Y-%m-&lt;/span>&lt;span class="si">%d&lt;/span>&lt;span class="s1"> %H:%M:%S %Z%z&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># Display time in the new timezone&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Dataset 和 DataLoader 的区别是什么</title><link>https://svtter.cn/p/dataset-%E5%92%8C-dataloader-%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88/</link><pubDate>Mon, 24 Feb 2025 22:01:57 +0800</pubDate><guid>https://svtter.cn/p/dataset-%E5%92%8C-dataloader-%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88/</guid><description>&lt;p>在 &lt;code>torch.utils.data&lt;/code> 中，有两个类，一个是&lt;code>Dataset&lt;/code>，另一个是&lt;code>DataLoader&lt;/code>。&lt;/p>
&lt;p>这两个类的主要区别是什么？&lt;/p>
&lt;p>Dataset 一般用于读取数据集的基础数据。例如，在 torch 给出的&lt;a class="link" href="https://pytorch.org/tutorials/beginner/data_loading_tutorial.html" target="_blank" rel="noopener"
>官网说明&lt;/a>中，用于展示数据集的数量，以及用于神经网络训练的单个样本。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">FaceLandmarkDataset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Dataset&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__len__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;表示数据集的数量&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__getitem__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">idx&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;返回某个下标的数据组合。例如，如果是图像和标签，应该是 {&amp;#39;img&amp;#39;: img, &amp;#39;label&amp;#39;: label} &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>与之相对的，DataLoader 则是一个可以并行读取数据的类。一般情况下，不需要进行继承然后改写。&lt;/p>
&lt;p>所以我们主要说说怎么用。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataloader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DataLoader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">transformed_dataset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">batch_size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shuffle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_workers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们可以看到，因为 DataLoader 的存在，因此实际上我们在实现 Dataset 的时候:&lt;/p>
&lt;ol>
&lt;li>不需要关注 shuffle: 为了神经网络训练的 batch不聚集在一个地方&lt;/li>
&lt;li>不需要考虑并行读取，因为有 &lt;code>num_worker&lt;/code>&lt;/li>
&lt;li>不需要考虑 &lt;code>batch_size&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>因此，DataLoader 可以比较容易的完成一些数据集处理前的必要工作。&lt;/p>
&lt;p>如果使用 lightning，那么还需要进一步了解 DataModule。我会在另外一篇博客中说明。&lt;/p></description></item><item><title>Where to Put Your Data Folder.md</title><link>https://svtter.cn/p/where-to-put-your-data-folder.md/</link><pubDate>Mon, 24 Feb 2025 14:34:56 +0800</pubDate><guid>https://svtter.cn/p/where-to-put-your-data-folder.md/</guid><description>&lt;p>在训练模型时，我们应该尽可能的把数据和代码放在同一个位置。&lt;/p>
&lt;p>放在同一个位置可以避免路径的问题，例如给出数据的绝对路径等。&lt;/p>
&lt;p>比如，如果我将路径设置为，&lt;code>./data/&lt;/code>，那么我只需要把数据放在&lt;code>./data&lt;/code>目录下即可。&lt;/p>
&lt;p>我可以通过&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ln -s &lt;span class="k">$(&lt;/span>source-path-of-dataset&lt;span class="k">)&lt;/span> ./data
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>来将数据从其他位置链接过来。&lt;/p>
&lt;p>如果在相同的主机上，git 是可以自动同步这些 link 的。&lt;/p>
&lt;p>但如果在不同的主机上，就需要自己做好管理了。&lt;/p></description></item><item><title>Certbot Self Signed.md</title><link>https://svtter.cn/p/certbot-self-signed.md/</link><pubDate>Wed, 19 Feb 2025 15:58:51 +0800</pubDate><guid>https://svtter.cn/p/certbot-self-signed.md/</guid><description>&lt;p>我们有时候会有 SSL 需求，但是国内的证书都需要买，价格也有问题，因此这里写一篇博客，教会大家如何使用 &lt;code>certbot&lt;/code> 和 &lt;code>let's encrypt&lt;/code>。&lt;/p>
&lt;p>&lt;code>Let's Encrypt&lt;/code> 是一个免费的 SSL 服务。
&lt;code>certbot&lt;/code>用来自动化 ssl 签名，来提供 https。&lt;/p>
&lt;h2 id="debianubuntu-安装依赖">Debian/Ubuntu 安装依赖
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install certbot python3-certbot-nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="添加配置文件">添加配置文件
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo nano /etc/nginx/sites-available/subdomain.example.com.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>文件中添加 nginx 的配置信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">listen&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_name&lt;/span> &lt;span class="n">subdomain&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">root&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">www&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">subdomain&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">index&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">html&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">htm&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">location&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try_files&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">uri&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="mi">404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="启用和部署-https">启用和部署 HTTPS
&lt;/h2>&lt;p>启用配置文件： &lt;code>sudo ln -s /etc/nginx/sites-available/subdomain.example.com.conf /etc/nginx/sites-enabled/&lt;/code>.&lt;/p>
&lt;p>添加域名即可&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo certbot --nginx -d subdomain.example.com.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Compile Latex Local.md</title><link>https://svtter.cn/p/compile-latex-local.md/</link><pubDate>Mon, 17 Feb 2025 16:39:50 +0800</pubDate><guid>https://svtter.cn/p/compile-latex-local.md/</guid><description>&lt;p>我们有时候希望在本地而不是 overleaf 上编译 latex 文件。这篇文章提供了一个方法。&lt;/p>
&lt;p>我们可以用 Docker 来构建一个编译环境。Dockerfile 如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 使用 TeXLive 官方镜像作为基础镜像&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> texlive/texlive:latest&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 安装必要的包&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> make &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> git &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm -rf /var/lib/apt/lists/*&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 设置工作目录&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /paper&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 复制论文源文件到容器中&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 设置默认命令&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;latexmk&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-pdf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;0_main.tex&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>构建镜像：&lt;code>docker build -t paper .&lt;/code>&lt;/li>
&lt;li>构建PDF: &lt;code>docker run --rm -v $(pwd):/paper paper&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>构建命令可以自己修改。比如你的主文件是&lt;code>main.tex&lt;/code>，就可以修改成&lt;code>CMD [&amp;quot;latexmk&amp;quot;, &amp;quot;-pdf&amp;quot;, &amp;quot;0_main.tex&amp;quot;]&lt;/code>。&lt;/p></description></item><item><title>Extend LVM Disk.md</title><link>https://svtter.cn/p/extend-lvm-disk.md/</link><pubDate>Sat, 15 Feb 2025 14:12:37 +0800</pubDate><guid>https://svtter.cn/p/extend-lvm-disk.md/</guid><description>&lt;p>使用 PVE + Debian 组合后，开发变得愉快了很多。今天遇到了一个新的问题，磁盘空间不足，拓展之后磁盘大小仍然不变。&lt;/p>
&lt;!-- 如果之前安装 Debian 没使用 LVM（逻辑卷），基本上就没救了，自己需要重新做一下系统。 -->
&lt;p>我们讨论的是使用 LVM（逻辑卷管理器）的情况。&lt;/p>
&lt;p>在这种情况下，我们需要首先看看系统。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@debian:/home/svtter# lsblk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sda 8:0 &lt;span class="m">0&lt;/span> 132G &lt;span class="m">0&lt;/span> disk
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─sda1 8:1 &lt;span class="m">0&lt;/span> 487M &lt;span class="m">0&lt;/span> part /boot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─sda2 8:2 &lt;span class="m">0&lt;/span> 1K &lt;span class="m">0&lt;/span> part
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└─sda5 8:5 &lt;span class="m">0&lt;/span> 31.5G &lt;span class="m">0&lt;/span> part
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├─debian--vg-root 254:0 &lt;span class="m">0&lt;/span> 30.5G &lt;span class="m">0&lt;/span> lvm /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └─debian--vg-swap_1 254:1 &lt;span class="m">0&lt;/span> 976M &lt;span class="m">0&lt;/span> lvm &lt;span class="o">[&lt;/span>SWAP&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sr0 11:0 &lt;span class="m">1&lt;/span> 1.4G &lt;span class="m">0&lt;/span> rom
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时我们总共有 132G 的可用空间，使用了 31.5 G。&lt;/p>
&lt;p>我们需要调整 &lt;code>/dev/sda5&lt;/code> 的大小。&lt;/p>
&lt;p>我们首先需要使用一个 bootable usb。如果你使用的 PVE，你可以直接加载一个 iso 来启动。&lt;/p>
&lt;blockquote>
&lt;p>注意：以下的操作不一定具有可复现性。请务必备份你的数据，以防不测。&lt;/p>&lt;/blockquote>
&lt;p>在 live system 中，运行&lt;code>parted /dev/sda&lt;/code>。&lt;/p>
&lt;blockquote>
&lt;p>debian live system 中，用户名密码为：&lt;code>user/live&lt;/code>，切换 root 用户，只需要&lt;code>sudo su&lt;/code>。&lt;/p>&lt;/blockquote>
&lt;p>在 parted 中，使用 print 查看磁盘情况。&lt;/p>
&lt;p>下面是一个操作样例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动 parted 并选择磁盘&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">parted /dev/sda
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看当前分区表&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">print
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 调整分区大小（假设要将 /dev/sda5 扩展到最大可用空间）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">resizepart &lt;span class="m">5&lt;/span> &lt;span class="c1"># 5 是 /dev/sda5 的分区编号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 按照提示输入新的分区大小，按 Enter 选择默认的最大可用空间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 退出 parted&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">quit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时，需要首先&lt;code>resizepart /dev/sda2&lt;/code>，也就是逻辑卷组。然后在扩展&lt;code>resizepart /dev/sda5&lt;/code>。&lt;/p>
&lt;p>完成拓展后，运行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pvresize /dev/sda5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vgextend debian-vg /dev/sda5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lvextend -l +100%FREE /dev/debian-vg/root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时磁盘空间已经拓展了。但是 ext4 文件系统还未适应。&lt;/p>
&lt;p>运行命令来重新调整 ext4 文件系统。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">e2fsck -f /dev/debian-vg/root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">resize2fs /dev/debian-vg/root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再次查看&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@debian:/home/user# sudo lvdisplay /dev/debian-vg/root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --- Logical volume ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LV Path /dev/debian-vg/root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LV Name root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VG Name debian-vg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LV UUID 82SmmD-qnAc-KOIO-1B2Y-ynP3-Mo0E-D12Rq0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LV Write Access read/write
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LV Creation host, &lt;span class="nb">time&lt;/span> debian, 2025-02-15 05:49:23 +0000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LV Status available
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># open 0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LV Size &amp;lt;91.70 GiB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Current LE &lt;span class="m">23475&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Segments &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Allocation inherit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Read ahead sectors auto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - currently &lt;span class="nb">set&lt;/span> to &lt;span class="m">256&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Block device 254:0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样一来，磁盘空间就拓展了。&lt;/p></description></item><item><title>实际推理模型和实验中推理模型</title><link>https://svtter.cn/p/%E5%AE%9E%E9%99%85%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E5%92%8C%E5%AE%9E%E9%AA%8C%E4%B8%AD%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B/</link><pubDate>Sat, 15 Feb 2025 09:50:49 +0800</pubDate><guid>https://svtter.cn/p/%E5%AE%9E%E9%99%85%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B%E5%92%8C%E5%AE%9E%E9%AA%8C%E4%B8%AD%E6%8E%A8%E7%90%86%E6%A8%A1%E5%9E%8B/</guid><description>&lt;p>最近使用 paddlepaddle 比较多，发现了 paddleocr 对模型做了一个区分。有时候会给用户带来一些困惑。这里详细说说。&lt;/p>
&lt;p>实验中用于推理的模型，也就是可训练的模型。一般paddle的模型文件是这样的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">-rw-r--r-- &lt;span class="m">1&lt;/span> root root 420M Feb &lt;span class="m">12&lt;/span> 15:59 model.pdopt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r-- &lt;span class="m">1&lt;/span> root root 275M Feb &lt;span class="m">12&lt;/span> 15:59 model.pdparams
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一个是 pdopt 一个是 pdparams。&lt;/p>
&lt;p>这个就是用来在实验过程中进行推理的模型。一般用&lt;code>tools/infer_rec.py&lt;/code>。&lt;/p>
&lt;p>如果要实际部署到开发环境，需要将现在的实验中的模型做一个转换。&lt;/p>
&lt;p>需要执行&lt;code>tools/export_model.py&lt;/code>来把模型转换成&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">inference/en_PP-OCRv3_rec/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── inference.pdiparams # 识别inference模型的参数文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── inference.json # 识别inference模型的program文件
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如此一来，就可以使用 paddlex 或者其他的推理服务来推理了。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;ul>
&lt;li>实际上国内的深度学习框架技术上并不差，只不过做的太大，也没有很好的入门教程，所以开发者本身不用。&lt;/li>
&lt;li>百度对于自己的名声维护的太差。从之前的公关老大翻车就能看出来。&lt;/li>
&lt;li>做个 python web 的类比。如果 torch 是 flask，那么 paddlepaddle 更像是 django。&lt;/li>
&lt;/ul></description></item><item><title>Cuda and Paddle.md</title><link>https://svtter.cn/p/cuda-and-paddle.md/</link><pubDate>Tue, 11 Feb 2025 15:41:18 +0800</pubDate><guid>https://svtter.cn/p/cuda-and-paddle.md/</guid><description>&lt;p>深度学习环境配置是很多朋友迈不过去的坎。不过有了大模型，遇到问题定位的速度能快很多。&lt;/p>
&lt;p>我花了一些时间去适配老版本的 paddle，搞定了，这里发一篇文章记录一下。&lt;/p>
&lt;p>docker image 里面，很多 cuda11 镜像，在 cuda12 的环境下是跑不起来的。原因我也不太清楚。这个时候，可以选择大版本一致的 cuda。&lt;/p>
&lt;p>为了保证不影响 server 其他人的环境，不要更新 nvidia 驱动，安装自己的 cuda 版本，然后修改环境变量，就能改变系统的 cuda。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bashrc" data-lang="bashrc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CUDA_VERSION=11.7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CUDA_HOME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/usr/local/cuda-&lt;/span>&lt;span class="nv">$CUDA_VERSION&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LD_LIBRARY_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$CUDA_HOME&lt;/span>&lt;span class="s2">/lib64:&lt;/span>&lt;span class="nv">$LD_LIBRARY_PATH&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$CUDA_HOME&lt;/span>/bin:&lt;span class="nv">$PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>应用这个环境变量，然后查看&lt;code>nvidia-smi&lt;/code>，就能看到版本的变化。&lt;/p></description></item><item><title>Change Network of Debian.md</title><link>https://svtter.cn/p/change-network-of-debian.md/</link><pubDate>Mon, 10 Feb 2025 20:49:27 +0800</pubDate><guid>https://svtter.cn/p/change-network-of-debian.md/</guid><description>&lt;p>有时候我们希望修改默认的 ip 地址以及 DNS 服务器，来获得更好的网络。&lt;/p>
&lt;p>对 Debian 来说，修改两个文件，一个是&lt;code>/etc/network/interfaces&lt;/code>，另一个是&lt;code>/etc/resolv.conf&lt;/code>&lt;/p>
&lt;p>对于&lt;code>interfaces&lt;/code>来说&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># This file describes the network interfaces available on your system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># and how to activate them. For more information, see interfaces(5).
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source /etc/network/interfaces.d/*
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># The loopback network interface
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">auto lo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface lo inet loopback
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># The primary network interface
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">allow-hotplug ens18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface ens18 inet static
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">address 192.168.2.35
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">netmask 255.255.255.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gateway 192.168.2.60
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在网关是&lt;code>192.168.2.60&lt;/code>的时候；&lt;/p>
&lt;p>如果还需要配置 DNS，修改 &lt;code>/etc/resolv.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nameserver 192.168.2.60
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>禁止ipv6&lt;/p>
&lt;p>&lt;code>/etc/sysctl.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">net.ipv6.conf.all.disable_ipv6 = 1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>别忘了重启网络：&lt;code>systemctl restart networking&lt;/code>.&lt;/p></description></item><item><title>PDM 使用过程中的问题</title><link>https://svtter.cn/p/pdm-%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 09 Feb 2025 12:15:25 +0800</pubDate><guid>https://svtter.cn/p/pdm-%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>&lt;p>在使用 pdm 的时候，如果更新包很快，有时候会无法更新 lockfile，也就是&lt;code>pdm lock&lt;/code>无法根据最新的包生成内容。&lt;/p>
&lt;p>这个时候，可以使用&lt;code>pdm cache info&lt;/code>来查看 cache 情况。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">➜ high-energy git:&lt;span class="o">(&lt;/span>main&lt;span class="o">)&lt;/span> ✗ pdm cache info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cache Root: /home/svtter/.cache/pdm, Total size: 17.9 MB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File Hash Cache: /home/svtter/.cache/pdm/hashes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Files: 793, Size: &lt;span class="m">56&lt;/span> kB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HTTP Cache: /home/svtter/.cache/pdm/http
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Files: 317, Size: 12.1 MB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Wheels Cache: /home/svtter/.cache/pdm/wheels
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Files: 6, Size: 5.6 MB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Metadata Cache: /home/svtter/.cache/pdm/metadata
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Files: 6, Size: &lt;span class="m">147&lt;/span> kB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Package Cache: /home/svtter/.cache/pdm/packages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Packages: 0, Size: &lt;span class="m">0&lt;/span> bytes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一般删除 &lt;code>HTTP Cache&lt;/code> 可以解决问题。默认路径是&lt;code>$HOME/.cache/pdm/http&lt;/code>。&lt;/p></description></item><item><title>使用 git 管理 logseq 文件</title><link>https://svtter.cn/p/%E4%BD%BF%E7%94%A8-git-%E7%AE%A1%E7%90%86-logseq-%E6%96%87%E4%BB%B6/</link><pubDate>Sat, 08 Feb 2025 18:18:29 +0800</pubDate><guid>https://svtter.cn/p/%E4%BD%BF%E7%94%A8-git-%E7%AE%A1%E7%90%86-logseq-%E6%96%87%E4%BB%B6/</guid><description>&lt;p>因为经常同时使用多台设备，我经常会遇到在一处写好文章，在另外一台设备继续使用 logseq 的问题。直接复制粘贴显得很笨。&lt;/p>
&lt;p>我大概分了两个阶段处理这个问题。第一个阶段是用移动硬盘，在不同系统之间直接拷贝。这个时候用到 git bare repository.&lt;/p>
&lt;h2 id="stage-1">Stage 1
&lt;/h2>&lt;p>&lt;code>git init --bare logseq-database.git&lt;/code>&lt;/p>
&lt;p>然后再其他的 working git repository 上，添加 remote。例如我的磁盘路径是&lt;code>E:\&lt;/code>。&lt;/p>
&lt;p>&lt;code>git remote add origin E:\logseq-database.git&lt;/code>&lt;/p>
&lt;p>如此一来可以直接在不同设备之间同步 logseq 数据。&lt;/p>
&lt;h2 id="stage-2">Stage 2
&lt;/h2>&lt;p>我发现使用移动硬盘还是不太方便。我将一台10年前的 thinkpad 刷机，安装了 gitea。我一开始使用的是 gogs，但是 gogs 对于 submodule 处理不太友好，有莫名其妙的 bug。因此最终还是
使用了 gitea。使用 gitea 之后，我将原本的 git 库迁移到自己的本地机器上。例如：&lt;code>http://gitea.local/svtter/logseq-database.git&lt;/code>。&lt;/p>
&lt;h2 id="stage-3">Stage 3
&lt;/h2>&lt;p>我发现大型文件存储和共享容易出问题。我增加了 &lt;code>git-lfs&lt;/code> 的支持，通过&lt;/p>
&lt;p>&lt;code>git lfs install&lt;/code>&lt;/p>
&lt;p>以及&lt;/p>
&lt;p>&lt;code>git lfs track *.pdf&lt;/code>&lt;/p>
&lt;p>来避免大文件在&lt;code>.git&lt;/code>目录中留下太多的数据。&lt;/p>
&lt;h2 id="stage-4">Stage 4
&lt;/h2>&lt;p>定期备份一部分数据到&lt;code>GitHub&lt;/code>。但是我现在一般不这么做了。&lt;/p>
&lt;p>使用 git 在合并的时候要注意一个问题。如果文件名称有变化，自动化的合并会直接忽略。
大概是这样：我在两个设备上同时修改了一个文件，其中一个文件不仅仅是修改了内容，还更改了文件名。然后，两个设备分别进行了 git commit。
如此一来，git在进行合并的时候，不会提示冲突。git 自动化合并之后，其中一个设备上所作的修改会消失。&lt;/p>
&lt;p>针对这个问题，处理方法是在合并的时候尽可能采用 rebase 的方法。==&amp;gt; 但是 rebase 合并文件的时候速度很慢，要自己手动处理的内容很多。&lt;/p>
&lt;p>因此，在两个设备上同时修改一个文件的时候，首先要拉一下远端的修改。其次，应尽可能避免修改文件名。否则，可能会导致变更消失。&lt;/p>
&lt;p>好在 git commit 历史记录一直都在。实在不行，就从 commit 记录里找到丢失的部分，然后补充一个新的提交。&lt;/p></description></item><item><title>Coolify 和 Traefic 结合使用</title><link>https://svtter.cn/p/coolify-%E5%92%8C-traefic-%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 07 Feb 2025 17:14:55 +0800</pubDate><guid>https://svtter.cn/p/coolify-%E5%92%8C-traefic-%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8/</guid><description>&lt;p>我使用 coolify 来管理多台服务器；但是 coolify 域名管理有点让人迷惑，我一直没能搞定。今天测试了一下，终于搞明白了。&lt;/p>
&lt;p>例如，如果我要部署一个&lt;code>myapp&lt;/code>，我的&lt;code>docker-compose.yml&lt;/code>应该这样写。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">myapp&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">myapp&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;8050:80&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;./data:/app/data&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">NODE_ENV=production&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;APP_PORT=${APP_PORT_IN_UI}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;PORT=${PORT_IN_UI:-80} volumes:&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;${COOLIFY_VOLUME_MYAPP}:/app/data&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">coolify.managed=true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.enable=true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.http.routers.myapp.rule=Host(`example.myapp.com`)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;traefik.http.routers.myapp.entrypoints=http,https&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>80&lt;/code>是&lt;code>myapp&lt;/code>内部的&lt;code>port&lt;/code>，域名用&lt;code>example.myapp.com&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>如此配置，就可以使用域名了。&lt;/p></description></item></channel></rss>