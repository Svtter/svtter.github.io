<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on Svtter&#39;s Blog</title>
    <link>/zh-cn/categories/devops/</link>
    <description>Recent content in DevOps on Svtter&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} Razon Yang. All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 04 Jan 2019 01:00:00 +0800</lastBuildDate><atom:link href="/zh-cn/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>为你的 Docker 项目集成 ELK</title>
      <link>/2019/01/04/%E4%B8%BA%E4%BD%A0%E7%9A%84-docker-%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90-elk/</link>
      <pubDate>Fri, 04 Jan 2019 01:00:00 +0800</pubDate>
      
      <guid>/2019/01/04/%E4%B8%BA%E4%BD%A0%E7%9A%84-docker-%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90-elk/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/twtrubiks/docker-elk-tutorial&#34;&gt;https://github.com/twtrubiks/docker-elk-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基本上按照这个配置就可以了，创建 @timestamp 这一步，可以用如下脚本替代 Postman&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;这也是 tutorials 中，使用的 ELK images 给出的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/deviantony/docker-elk&#34;&gt;https://github.com/deviantony/docker-elk&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Docker swarm 构建 PostgreSQL 集群</title>
      <link>/2018/12/01/%E4%BD%BF%E7%94%A8-docker-swarm-%E6%9E%84%E5%BB%BA-postgresql-%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Sat, 01 Dec 2018 01:00:00 +0800</pubDate>
      
      <guid>/2018/12/01/%E4%BD%BF%E7%94%A8-docker-swarm-%E6%9E%84%E5%BB%BA-postgresql-%E9%9B%86%E7%BE%A4/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;又是一个渣翻，Copyright belongs to the original text。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://info.crunchydata.com/blog/an-easy-recipe-for-creating-a-postgresql-cluster-with-docker-swarm&#34; target=&#34;_blank&#34;&gt;原文地址&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;PostgreSQL 在 9.0 版本已经开始持续接收大量的增强，包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;异步拓展&lt;/li&gt;
&lt;li&gt;同步拓展&lt;/li&gt;
&lt;li&gt;仲裁提交&lt;/li&gt;
&lt;li&gt;级联拓展&lt;/li&gt;
&lt;li&gt;逻辑拓展&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;PostgreSQL 文档也提供了一个 overview 以及 不同拓展方法的比较。详见&lt;!-- raw HTML omitted --&gt;PostgreSQL 集群策略比较&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;用于部署 PostgreSQL 的拓展的主拓展的方法论，是一个重要的工具来为你的数据库集群创建高可用的环境。需要一个合适的部署策略来确保你的数据被保存到不同磁盘，以及不同的数据中心。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记恢复 https</title>
      <link>/2018/11/03/%E8%AE%B0%E6%81%A2%E5%A4%8D-https/</link>
      <pubDate>Sat, 03 Nov 2018 01:00:00 +0800</pubDate>
      
      <guid>/2018/11/03/%E8%AE%B0%E6%81%A2%E5%A4%8D-https/</guid>
      <description>这几天 https 挂掉了，似乎是因为铁门的证书（过期，不被chrome认可）了。因此重新搞一下 https。 恢复 https 也没有做什么工作，就是把之前的证书重新</description>
    </item>
    
    <item>
      <title>为什么我密码对了，就是登录不上？</title>
      <link>/2018/10/17/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E5%AF%86%E7%A0%81%E5%AF%B9%E4%BA%86%EF%BC%8C%E5%B0%B1%E6%98%AF%E7%99%BB%E5%BD%95%E4%B8%8D%E4%B8%8A%EF%BC%9F/</link>
      <pubDate>Wed, 17 Oct 2018 01:00:00 +0800</pubDate>
      
      <guid>/2018/10/17/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E5%AF%86%E7%A0%81%E5%AF%B9%E4%BA%86%EF%BC%8C%E5%B0%B1%E6%98%AF%E7%99%BB%E5%BD%95%E4%B8%8D%E4%B8%8A%EF%BC%9F/</guid>
      <description>今天又偶遇了之前用阿里云出现的问题： 之前一直没有排查到错误，今天终于在本地机器的加持下得以解决。这是什么问题呢？IP地址冲突。 的确是IP地址</description>
    </item>
    
    <item>
      <title># Docker swarm 学习</title>
      <link>/2018/06/21/#dockerswarm%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 21 Jun 2018 01:00:00 +0800</pubDate>
      
      <guid>/2018/06/21/#dockerswarm%E5%AD%A6%E4%B9%A0/</guid>
      <description>本文的学习过程主要是通过 Docker 官方文档 花了一段时间学习 Docker swarm，一个docker的容器集群服务，来应对即将到来的高并发项目需求。 Docker machine Docker machine 是 Docker</description>
    </item>
    
  </channel>
</rss>
