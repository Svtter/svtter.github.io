<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>动态语言 on Svtter&#39;s Blog</title>
    <link>/zh-cn/categories/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in 动态语言 on Svtter&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} Razon Yang. All Rights Reserved.</copyright>
    <lastBuildDate>Tue, 08 Jan 2019 01:00:00 +0800</lastBuildDate><atom:link href="/zh-cn/categories/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django tricks</title>
      <link>/2019/01/08/django-tricks/</link>
      <pubDate>Tue, 08 Jan 2019 01:00:00 +0800</pubDate>
      
      <guid>/2019/01/08/django-tricks/</guid>
      <description>关于 session django.contrib.sessions.middleware | Django documentation | Django session 是使用 cookie 来进行判断的，通过 session_cookie_name 来提取，然后通过 SessionStore() 来保存。 因此，Django 也是通过 sessionid 来区分用户；（或者其他什么名称）。 使用</description>
    </item>
    
    <item>
      <title># Python文件操作</title>
      <link>/2018/06/19/python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 19 Jun 2018 01:00:00 +0800</pubDate>
      
      <guid>/2018/06/19/python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;p&gt;Python的文件操作很多，为了方便以后查询使用，在此做下记录。&lt;/p&gt;
&lt;p&gt;注：这些函数都可以在官网查询，这里做个cache。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python拆包的好处</title>
      <link>/2018/06/12/python%E6%8B%86%E5%8C%85%E7%9A%84%E5%A5%BD%E5%A4%84/</link>
      <pubDate>Tue, 12 Jun 2018 01:00:00 +0800</pubDate>
      
      <guid>/2018/06/12/python%E6%8B%86%E5%8C%85%E7%9A%84%E5%A5%BD%E5%A4%84/</guid>
      <description>内容 在最近的一期 realpython 中，我阅读到了这样一段代码： 之前因为： 这个东西不是很直观 这个可能造成参数混乱 而不是很在意这段代码。现在想来，真是很方便的一</description>
    </item>
    
    <item>
      <title>vscode为django添加合适的pylint</title>
      <link>/2018/02/24/vscode%E4%B8%BAdjango%E6%B7%BB%E5%8A%A0%E5%90%88%E9%80%82%E7%9A%84pylint/</link>
      <pubDate>Sat, 24 Feb 2018 01:00:00 +0800</pubDate>
      
      <guid>/2018/02/24/vscode%E4%B8%BAdjango%E6%B7%BB%E5%8A%A0%E5%90%88%E9%80%82%E7%9A%84pylint/</guid>
      <description>使用vscode进行django开发的时候，总会出现一些错误，比如说对Django的一些结构进行错误的报错； 这个时候可以安装pylint-d</description>
    </item>
    
    <item>
      <title>python如何使用不可变量const</title>
      <link>/2018/02/06/python%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%8F%AF%E5%8F%98%E9%87%8Fconst/</link>
      <pubDate>Tue, 06 Feb 2018 01:00:00 +0800</pubDate>
      
      <guid>/2018/02/06/python%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%8F%AF%E5%8F%98%E9%87%8Fconst/</guid>
      <description>这样一来，就可以在python中使用不可变量了。其中，利用魔术方法__setattr__，把一个变量当作是const类的属性，然后使用__d</description>
    </item>
    
    <item>
      <title>pipenv入门指南</title>
      <link>/2017/12/26/pipenv%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 26 Dec 2017 01:00:00 +0800</pubDate>
      
      <guid>/2017/12/26/pipenv%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid>
      <description>前言 pipenv是书写flask的大神kennethreitz的新作；pipenv集成了virtualenv和pip等工具，让你从requi</description>
    </item>
    
    <item>
      <title>Python-Tips</title>
      <link>/2017/11/26/python-tips/</link>
      <pubDate>Sun, 26 Nov 2017 01:00:00 +0800</pubDate>
      
      <guid>/2017/11/26/python-tips/</guid>
      <description>&lt;p&gt;来自分布在各处的开发tips&lt;/p&gt;
&lt;h2 id=&#34;使用nametuple&#34;&gt;使用nametuple&lt;/h2&gt;
&lt;p&gt;nametuple用来构建只有少数属性但是没有方法的对象，比如数据库条目。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python在Ubuntu中使用形式</title>
      <link>/2016/08/07/python%E5%9C%A8ubuntu%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%BD%A2%E5%BC%8F/</link>
      <pubDate>Sun, 07 Aug 2016 01:00:00 +0800</pubDate>
      
      <guid>/2016/08/07/python%E5%9C%A8ubuntu%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%BD%A2%E5%BC%8F/</guid>
      <description>Python在Ubuntu中的形式十分杂乱。对于Debian已经很久没有使用过了，因此不太清楚Debian对于Python的版本是如何管理的</description>
    </item>
    
    <item>
      <title>Python – 数据结构</title>
      <link>/2015/07/09/python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Thu, 09 Jul 2015 01:00:00 +0800</pubDate>
      
      <guid>/2015/07/09/python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>http://blog.jobbole.com/65218/ http://blog.csdn.net/column/details/wklken4ds-alg-py.html</description>
    </item>
    
    <item>
      <title>Python-建立最简单的web服务器</title>
      <link>/2014/12/11/python-%E5%BB%BA%E7%AB%8B%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Thu, 11 Dec 2014 01:00:00 +0800</pubDate>
      
      <guid>/2014/12/11/python-%E5%BB%BA%E7%AB%8B%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>本文出自svtter.com 有三个服务模块可以使用: BaseHTTPServer 最基础web服务. SimpleHTTPServer 可以处理GET和HEAD. CGIHTTPServer 可以处理POST请求和执行CGI. 只需</description>
    </item>
    
    <item>
      <title>python的自动补全</title>
      <link>/2014/11/21/python%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</link>
      <pubDate>Fri, 21 Nov 2014 01:00:00 +0800</pubDate>
      
      <guid>/2014/11/21/python%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</guid>
      <description>新建python_start_up_file文件 在$HOME/.profile文件中写入 export PYTHONSTARTUP=$HOME/.python_start_up_file 小注： 可以使用py3compile来编译文件，然</description>
    </item>
    
    <item>
      <title>Python-使用hexo的python脚本</title>
      <link>/2014/11/19/python-%E4%BD%BF%E7%94%A8hexo%E7%9A%84python%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 19 Nov 2014 01:00:00 +0800</pubDate>
      
      <guid>/2014/11/19/python-%E4%BD%BF%E7%94%A8hexo%E7%9A%84python%E8%84%9A%E6%9C%AC/</guid>
      <description>为了简化blog的使用写的python脚本，用来简化自己的操作= = 更新了一下。 最新的代码在coding.net上</description>
    </item>
    
    <item>
      <title>Python – 一个Python的备份脚本</title>
      <link>/2014/11/14/python-%E4%B8%80%E4%B8%AApython%E7%9A%84%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Fri, 14 Nov 2014 01:00:00 +0800</pubDate>
      
      <guid>/2014/11/14/python-%E4%B8%80%E4%B8%AApython%E7%9A%84%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;h1 id=&#34;tags&#34;&gt;TAGS&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;python的注释必须与代码相隔两个空格&lt;/li&gt;
&lt;li&gt;#与注释语言间必须有一个空格&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
