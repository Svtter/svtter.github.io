<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vim on Svtter's Blog</title><link>https://svtter.cn/categories/vim/</link><description>Recent content in Vim on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 06 Aug 2017 01:00:00 +0800</lastBuildDate><atom:link href="https://svtter.cn/categories/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>vim的补全插件</title><link>https://svtter.cn/p/vim%E7%9A%84%E8%A1%A5%E5%85%A8%E6%8F%92%E4%BB%B6/</link><pubDate>Sun, 06 Aug 2017 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/vim%E7%9A%84%E8%A1%A5%E5%85%A8%E6%8F%92%E4%BB%B6/</guid><description>&lt;p>Vim的补全插件大体上分4个阵营，如&lt;code>deoplete&lt;/code>, &lt;code>completor.vim&lt;/code>, &lt;code>YCM&lt;/code>, 以及&lt;code>neocomplete&lt;/code>。&lt;/p>
&lt;p>在我想写这篇文章的时候，&lt;code>YCM&lt;/code>即&lt;code>youcompleteme&lt;/code>还认为自己支持了vim8的新特性&lt;code>async&lt;/code>，即非阻塞补全那一套东西。这个特性是怎么回事呢？输入的时候补全插件会进行补全搜索，这个时候如果不用新的特性，会造成UI卡顿。&lt;/p>
&lt;p>所以，事实上根据我的测试，作者似乎错误的理解了这个新特性，可以看看&lt;a class="link" href="https://github.com/Valloric/YouCompleteMe/issues/2376" target="_blank" rel="noopener"
>工单&lt;/a>。&lt;/p>
&lt;p>不过目前没有时间去搞清楚这个问题。因为我直接选择了&lt;code>completor.vim&lt;/code>，这个插件完美实现了这个功能。&lt;/p>
&lt;p>未完待续&lt;/p></description></item><item><title>vim-另存为</title><link>https://svtter.cn/p/vim-%E5%8F%A6%E5%AD%98%E4%B8%BA/</link><pubDate>Tue, 02 Dec 2014 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/vim-%E5%8F%A6%E5%AD%98%E4%B8%BA/</guid><description>&lt;ul>
&lt;li>本文出自&lt;a class="link" href="http://svtter.github.io" target="_blank" rel="noopener"
>svtter.github.io&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>想要另存一个文件名，但是vim另存的方法。。然后发现了sav这个东西。&lt;/p>
&lt;p>help文件中是这么描述的:&lt;/p>
&lt;blockquote>
&lt;p Vi="Vi" 无此功能="无此功能">_:sav_ _:saveas_&lt;/blockquote>
&lt;blockquote>
&lt;p>:sav&lt;/p>
\[eas\]\[!\]&lt;p> [++opt] {file}&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>用文件名 {file} 保存当前缓冲区，并设置当前缓冲区的文件&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>名为 {file}。前一个名字用作轮换文件名。[!] 用以覆盖已&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>存在的文件。&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>如果 ‘filetype’ 为空，在写入文件前用新名字进行文件类型&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>检测。&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>如果写操作成功，复位 ‘readonly’。&lt;/p>
可见，可以利用sav来&lt;code>重命名当前文件，并且修改新命名的文件&lt;/code>的功能。唯一的不足就是，我们无法通过这个操作将原来的&lt;/p>&lt;/blockquote>
&lt;p>文件删除(或者我们本来就不需要删除原来的文件). 这是vim的缓冲区机制决定的。&lt;/p>
&lt;p>个人认为无伤大雅，不是吗= =&lt;/p>
&lt;p>有时候wiki以及:help要比在网上百度一下好用的多 — 这个月饭都吃不起了，别跟我提VPN.&lt;/p></description></item><item><title>vim的相关记录</title><link>https://svtter.cn/p/vim%E7%9A%84%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/</link><pubDate>Thu, 27 Nov 2014 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/vim%E7%9A%84%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/</guid><description>&lt;ul>
&lt;li>本文出自&amp;lt;svtter.github.io&amp;gt;&lt;/li>
&lt;/ul>
&lt;h2 id="vim的部分插件记录">vim的部分插件记录
&lt;/h2>&lt;ul>
&lt;li>snipmate vim中的textmate&lt;/li>
&lt;li>vimwiki&lt;/li>
&lt;li>Vimpress : Manage wordpress blog posts from Vim&lt;/li>
&lt;li>calendar&lt;/li>
&lt;li>vimmailr.zip : Send (MAPI) mail from vim&lt;/li>
&lt;li>&lt;a class="link" href="http://xbeta.info/vim-voof.htm" target="_blank" rel="noopener"
>VOom&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>