<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>乐趣 on Svtter's Blog</title><link>https://svtter.cn/categories/%E4%B9%90%E8%B6%A3/</link><description>Recent content in 乐趣 on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 23 Jan 2018 01:00:00 +0800</lastBuildDate><atom:link href="https://svtter.cn/categories/%E4%B9%90%E8%B6%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>一个小的助记工具</title><link>https://svtter.cn/p/%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9A%84%E5%8A%A9%E8%AE%B0%E5%B7%A5%E5%85%B7/</link><pubDate>Tue, 23 Jan 2018 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9A%84%E5%8A%A9%E8%AE%B0%E5%B7%A5%E5%85%B7/</guid><description>&lt;p&gt;花了一小段时间撸了一个助记工具，运行起来就是把“复制”的词汇自动保存到规定的json文件中，并累计次数。如果后面有时间继续做下去，可能会考虑做一些可视化的工作，以及调用一些第三方API等等。&lt;/p&gt;
&lt;p&gt;可能一些词典工具本身已经带有这个功能，不过自己开发的东西自由度会更大一些，学习成本不高。&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://github.com/Svtter/wordRecorder" target="_blank" rel="noopener"
&gt;github repo: wordRecorder&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="roadmap"&gt;roadmap
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;leancloud云端保存！&lt;/li&gt;
&lt;li&gt;还没想好&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>autojump – 一个快速目录跳转脚本</title><link>https://svtter.cn/p/autojump-%E4%B8%80%E4%B8%AA%E5%BF%AB%E9%80%9F%E7%9B%AE%E5%BD%95%E8%B7%B3%E8%BD%AC%E8%84%9A%E6%9C%AC/</link><pubDate>Sat, 13 Jan 2018 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/autojump-%E4%B8%80%E4%B8%AA%E5%BF%AB%E9%80%9F%E7%9B%AE%E5%BD%95%E8%B7%B3%E8%BD%AC%E8%84%9A%E6%9C%AC/</guid><description>&lt;p&gt;之前一直都在用&lt;code&gt;z.shell&lt;/code&gt;这个东西来进行跳转，突然发现还有一个更好用的工具&lt;a class="link" href="https://github.com/wting/autojump" target="_blank" rel="noopener"
&gt;autojump&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="安装"&gt;安装
&lt;/h2&gt;&lt;p&gt;这个工具在Ubuntu下安装十分简单，直接通过：&lt;/p&gt;
&lt;div class="codehilite"&gt;
&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt install autojump
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;安装之后，记得把&lt;code&gt;. /usr/share/autojump/autojump.sh&lt;/code&gt;添加到你的shell配置文件中，例如&lt;code&gt;.zshenv&lt;/code&gt;或者&lt;code&gt;.bashrc&lt;/code&gt;等等。&lt;/p&gt;
&lt;p&gt;之后，使用&lt;code&gt;man autojump&lt;/code&gt;来查看如何使用这个命令，十分方便。&lt;/p&gt;
&lt;h3 id="osx"&gt;osx
&lt;/h3&gt;&lt;div class="codehilite"&gt;
&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install autojump
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;把&lt;code&gt;autojump&lt;/code&gt;添加到你的[oh-my-zsh]的&lt;code&gt;plugin&lt;/code&gt;列表中，例如：&lt;/p&gt;
&lt;div class="codehilite"&gt;
&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plugin&lt;span class="o"&gt;(&lt;/span&gt;
autojump
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;用法方面，举个例子。&lt;/p&gt;
&lt;h2 id="进入目录"&gt;进入目录
&lt;/h2&gt;&lt;p&gt;可以直接使用:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;j github&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进入&lt;code&gt;github&lt;/code&gt;这个目录；&lt;/p&gt;
&lt;h2 id="通过shell在图形界面打开目录"&gt;通过shell在图形界面打开目录
&lt;/h2&gt;&lt;p&gt;通过:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jo github&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;来在图形界面中打开&lt;code&gt;github&lt;/code&gt;这个目录。&lt;/p&gt;
&lt;p&gt;赶紧尝试一下吧！&lt;/p&gt;</description></item><item><title>Ubuntu下最舒爽的输入法</title><link>https://svtter.cn/p/ubuntu%E4%B8%8B%E6%9C%80%E8%88%92%E7%88%BD%E7%9A%84%E8%BE%93%E5%85%A5%E6%B3%95/</link><pubDate>Sat, 13 Jan 2018 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/ubuntu%E4%B8%8B%E6%9C%80%E8%88%92%E7%88%BD%E7%9A%84%E8%BE%93%E5%85%A5%E6%B3%95/</guid><description>&lt;p&gt;私以为，Ubuntu下最舒服的输入法是Rime，建议在Ubuntu下安装&lt;code&gt;fcitx-rime&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id="安装"&gt;安装
&lt;/h2&gt;&lt;div class="codehilite"&gt;
&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 1.安装&lt;/span&gt;
sudo apt-get install fcitx-rime
&lt;span class="c1"&gt;# 2.配置 fcitx 为默认. 然后重启&lt;/span&gt;
im-config
sudo reboot
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;我的系统环境是&lt;code&gt;Ubuntu 16.04&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装完成以后，使用&lt;code&gt;ctrl+grave&lt;/code&gt;。grave就是&lt;code&gt;tab&lt;/code&gt;上方的反引号。&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="http://rime.im/" target="_blank" rel="noopener"
&gt;rime&lt;/a&gt;是佛振，我国开发者进行开发的，充满了Hack精神的输入法引擎，在条件允许的情况下，可以进行捐助。&lt;/p&gt;</description></item><item><title>博客的二次提升</title><link>https://svtter.cn/p/%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BA%8C%E6%AC%A1%E6%8F%90%E5%8D%87/</link><pubDate>Sat, 13 Jan 2018 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BA%8C%E6%AC%A1%E6%8F%90%E5%8D%87/</guid><description>&lt;p&gt;今天晚上我在rss上花费了不少时间，由于效率不高，算是娱乐了一下吧。&lt;/p&gt;
&lt;h2 id="标记语言考察"&gt;标记语言考察
&lt;/h2&gt;&lt;p&gt;markdown现有的一些python-parser，比如&lt;a class="link" href="https://github.com/Python-Markdown/markdown" target="_blank" rel="noopener"
&gt;python-markdown&lt;/a&gt;虽然已经做得很好了，但是对于todo等我想要的需求还没有支持，因此想要考虑使用其他的标记语言，比如&lt;code&gt;restructedtext&lt;/code&gt;，这个用于&lt;code&gt;sphinx&lt;/code&gt;这个用于构建文档框架中的标记语言。&lt;/p&gt;
&lt;p&gt;于是，简单查看了&lt;code&gt;docutils&lt;/code&gt;的文档，发觉其对于我想要的特性支持也并不是十分优秀，准确讲，只有一个暴露在外的接口，并无其他。这个接口的例子：&lt;/p&gt;
&lt;div class="codehilite"&gt;
&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;docutils.core&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;publish_parts&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;publish_parts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"*anurag*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;writer_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;html_body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;anurag&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;自然，目的是文档，标记语言只不过其中的产物，也没有必要做多余的事情。倒是我想的简单了。&lt;/p&gt;
&lt;p&gt;在搜索了许多材料之后，发现&lt;a class="link" href="https://www.ibm.com/developerworks/cn/topics/" target="_blank" rel="noopener"
&gt;IBM的开发中心&lt;/a&gt;很不错，有很多有意思的东西，文章也写得深入浅出。也算是意外收获。&lt;/p&gt;
&lt;p&gt;最后还是放弃了对于markdown的更新，还是按照老路子，如果有时间，就给&lt;a class="link" href="" &gt;python-markdown&lt;/a&gt;提一个&lt;code&gt;pull request&lt;/code&gt;自己造轮子。&lt;/p&gt;
&lt;h2 id="rss相关研究"&gt;rss相关研究
&lt;/h2&gt;&lt;p&gt;我的博客rss常年挂出500，其中主要原因是内容中编码出错的问题。我一直没有定位到这个bug的出处，可能是SQLite的bug或者django-form的bug？文章中总是会混入&lt;code&gt;\\x08&lt;/code&gt;这种类似的&lt;code&gt;xml&lt;/code&gt;无法编码的数据。有时间仔细排查一下。这个问题才是主要问题，不过我的精力主要放在下面这个问题上了。&lt;/p&gt;
&lt;p&gt;为了解决rss渲染的时候，description的问题，我引入了&lt;code&gt;safe&lt;/code&gt;希望不要把&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;类似于这种标签进行转义，不过我失败了。我查询了关于django的safe过滤器，其中safe过滤器可以通过一个函数来搞定，就是这个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This ought to do it:&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class="codehilite"&gt;
&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.safestring&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;mark_safe&lt;/span&gt;
&lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mark_safe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;引入之后依然进行了转义。于是我决定暂时进行一次清除，用&lt;code&gt;一篇博文&lt;/code&gt;来替代所有的&lt;code&gt;description&lt;/code&gt;。如果后面有时间看看&lt;code&gt;rss&lt;/code&gt;，把这个功能做完。最好还可以自己写一个&lt;a class="link" href="https://github.com/orakaro/PyRSSReader" target="_blank" rel="noopener"
&gt;rss阅读器&lt;/a&gt;，来方便自己进行博客订阅。&lt;/p&gt;
&lt;p&gt;在网络上一个不错的教程，来自&lt;a class="link" href="https://code.ziqiangxuetang.com/rss/rss-tutorial.html" target="_blank" rel="noopener"
&gt;自强学堂&lt;/a&gt;。看完这个rss以后，可以考虑从&lt;a class="link" href="https://docs.djangoproject.com/en/2.0/ref/contrib/syndication/" target="_blank" rel="noopener"
&gt;官方文档&lt;/a&gt;入手。&lt;/p&gt;
&lt;h2 id="也不能老换"&gt;也不能老换
&lt;/h2&gt;&lt;p&gt;因为看到大家都用node来搭建博客，又一次简单的翻阅了一下&lt;a class="link" href="https://ghost.org/" target="_blank" rel="noopener"
&gt;ghost&lt;/a&gt;——一个基于nodejs开发的文档，我感觉效果不大。一方面，学习nodejs于我而言，可能是一个比较高的学习成本，我没有多余的时间进行nodejs学习。对于nodejs，我仅仅是了解一部分的皮毛知识。&lt;/p&gt;
&lt;p&gt;在查询之后，判定切换成本比较高。如果要直接用博客系统，考虑使用&lt;a class="link" href="https://github.com/Fantomas42/django-blog-zinnia" target="_blank" rel="noopener"
&gt;Zinna&lt;/a&gt;，以及&lt;a class="link" href="http://mezzanine.jupo.org/" target="_blank" rel="noopener"
&gt;Mezzanine&lt;/a&gt;进行二次开发。&lt;/p&gt;
&lt;p&gt;当然，使用hexo也是一个非常不错的选择。可以使用跨域来解决访问量统计不准确的问题。&lt;/p&gt;
&lt;h2 id="总结"&gt;总结
&lt;/h2&gt;&lt;p&gt;整个娱乐过程没有比较好的产出，主要原因可能是没有在做事之前，简单规划一下。试想，如果规划的比较优秀，可能时间上节省大半吧。因此强势安利一波&lt;a class="link" href="https://trello.com/" target="_blank" rel="noopener"
&gt;trello&lt;/a&gt;，和国内的teambition相似，不过UI设计上更加简洁明快一些。&lt;/p&gt;
&lt;h2 id="参考资料"&gt;参考资料
&lt;/h2&gt;&lt;p&gt;未列出&lt;/p&gt;</description></item><item><title>塞尔网吐槽</title><link>https://svtter.cn/p/%E5%A1%9E%E5%B0%94%E7%BD%91%E5%90%90%E6%A7%BD/</link><pubDate>Wed, 09 Mar 2016 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E5%A1%9E%E5%B0%94%E7%BD%91%E5%90%90%E6%A7%BD/</guid><description>&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;说真的，我真是有些受够了这该死的赛尔网了。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;—— 沃·兹基硕德&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;要知道windows的cmd何其难用，就算是安装了cmder也是难逃大量环境配置问题，脚本执行问题。该死的赛尔网没有Linux版的客户端，何其尴尬。以我个人认为，开发一个Linux的客户端，并不是难事 —— 有人说有啊的确有Linux版的客户端啊。但是请问能用吗。压根不能用。&lt;/p&gt;
&lt;p&gt;这就不得不讨论到今年提速降费的问题上了。终于不绑定ip了，所谓提速就是从2M提高到了3M，降费就是从40降到30。但是很明显这依然满足不了需求不是吗？&lt;/p&gt;</description></item><item><title>如何正确的使用Powerline</title><link>https://svtter.cn/p/%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E4%BD%BF%E7%94%A8powerline/</link><pubDate>Sun, 06 Mar 2016 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E4%BD%BF%E7%94%A8powerline/</guid><description>&lt;p&gt;最近终于研究清楚了&lt;code&gt;Powerline&lt;/code&gt;的使用方法。也是之前没有好好的阅读文档的缘故。&lt;/p&gt;
&lt;p&gt;无论&lt;code&gt;Windows&lt;/code&gt;还是&lt;code&gt;Linux&lt;/code&gt;最简单的方法都是下载&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://github.com/powerline/fonts" target="_blank" rel="noopener"
&gt;https://github.com/powerline/fonts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载以后，Linux运行install.sh，Windows运行install.ps1，即可安装。&lt;/p&gt;</description></item><item><title>入了输入法的新坑Rime..</title><link>https://svtter.cn/p/%E5%85%A5%E4%BA%86%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E6%96%B0%E5%9D%91rime../</link><pubDate>Wed, 24 Feb 2016 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E5%85%A5%E4%BA%86%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E6%96%B0%E5%9D%91rime../</guid><description>&lt;h2 id="简单介绍一下rime"&gt;简单介绍一下Rime
&lt;/h2&gt;&lt;p&gt;摘自项目简介&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://github.com/rime/home/wiki/Introduction" target="_blank" rel="noopener"
&gt;https://github.com/rime/home/wiki/Introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;= =直接复制粘贴总感觉不是很好。读完整个简介感觉作者逼格很高。个人对ibus的印象非常之好，远胜于fcitx。可能是因为某狗的印象所致。某狗做的还是很好的。&lt;/p&gt;
&lt;h2 id="如何在ubuntu下开始"&gt;如何在ubuntu下开始
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;题外话：反复来回，仗着网速10M搞了好多发行版，这几天换了启动模式UEFI，感觉已经不是自己的那台老家伙了，加上AHCI，感觉流畅不少。换成了Gnome以后整体使用感觉相当舒畅。KDE总感觉分外杂乱，个人更喜欢被限制在一个区域来拘束我放荡不羁的灵魂。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;似乎ubuntu在12.04已经在其软件仓库内置了Rime。&lt;/p&gt;
&lt;p&gt;安装时只需要&lt;code&gt;sudo apt-get install ibus-rime&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;如果从&lt;code&gt;input method&lt;/code&gt;里无法添加，从终端输入&lt;code&gt;ibus-setup&lt;/code&gt;添加一次。&lt;/p&gt;
&lt;p&gt;然后如果还不行，建议&lt;code&gt;reboot&lt;/code&gt;来试试。重启完成以后应该就可以添加了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl+`&lt;/code&gt;用于呼出各种配置。其他的参加官网吧。&lt;/p&gt;
&lt;h2 id="后记"&gt;后记
&lt;/h2&gt;&lt;p&gt;私以为作者是个湾湾，结果不是。= =。&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://github.com/lotem" target="_blank" rel="noopener"
&gt;https://github.com/lotem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;嗷，大神。&lt;/p&gt;</description></item><item><title>创建VLAN，和你的朋友玩局域网游戏吧！</title><link>https://svtter.cn/p/%E5%88%9B%E5%BB%BAvlan%E5%92%8C%E4%BD%A0%E7%9A%84%E6%9C%8B%E5%8F%8B%E7%8E%A9%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%B8%E6%88%8F%E5%90%A7/</link><pubDate>Sat, 23 Jan 2016 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E5%88%9B%E5%BB%BAvlan%E5%92%8C%E4%BD%A0%E7%9A%84%E6%9C%8B%E5%8F%8B%E7%8E%A9%E5%B1%80%E5%9F%9F%E7%BD%91%E6%B8%B8%E6%88%8F%E5%90%A7/</guid><description>&lt;p&gt;探索了一下，Shadowsocks仅仅是作为一个代理，并不提供VLAN服务，其他的例如openvpn（Windows上配置有些麻烦，卸载程序做的不彻底，换了安装路径出现问题），Gamer’s Internet Tunnel（好东西，但是并不易于小白操作）。&lt;/p&gt;
&lt;p&gt;最后发现了一款日本人写的开源软件。（其实也是不易于小白操作。。）&lt;/p&gt;
&lt;h3 id="softether-vpnserver"&gt;【softether-vpnserver】
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;具体的搭建教程：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="link" href="http://bluereader.org/article/6875396" target="_blank" rel="noopener"
&gt;http://bluereader.org/article/6875396&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;非常简单粗暴地是，不少简单的互联系统采取拆包挖洞的方法，因此需要分析各种协议，例如IPX等，但是此软件直接粗暴地在vpn基础上加上个dhcp服务器，也就是加入这个vpnserver，就加入了一个远程局域网。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;因此，我们可以利用此特点，不做坏坏的事情，只是单纯的和朋友们建立私人通道，玩玩游戏。。&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="link" href="https://www.softether.org/" target="_blank" rel="noopener"
&gt;https://www.softether.org/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="pptp"&gt;【pptp】
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="http://ju.outofmemory.cn/entry/195240" target="_blank" rel="noopener"
&gt;http://ju.outofmemory.cn/entry/195240&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://bbs.aliyun.com/read/162297.html" target="_blank" rel="noopener"
&gt;https://bbs.aliyun.com/read/162297.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于对战平台不知道是怎么做的， 应该是从协议方面入手吧&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id="后记"&gt;后记
&lt;/h1&gt;&lt;p&gt;现在看来，网络编程方面做得十分欠缺，写出这种博客也只能反应出自己的知识匮乏不足。继续修行。&lt;/p&gt;</description></item><item><title>那些年有趣的API</title><link>https://svtter.cn/p/%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%9C%89%E8%B6%A3%E7%9A%84api/</link><pubDate>Wed, 09 Sep 2015 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%9C%89%E8%B6%A3%E7%9A%84api/</guid><description>&lt;p&gt;图灵机器人： &lt;a class="link" href="http://www.tuling123.com/" target="_blank" rel="noopener"
&gt;http://www.tuling123.com/&lt;/a&gt;&lt;/p&gt;</description></item><item><title>ChinaUnicom的高速连接方法</title><link>https://svtter.cn/p/chinaunicom%E7%9A%84%E9%AB%98%E9%80%9F%E8%BF%9E%E6%8E%A5%E6%96%B9%E6%B3%95/</link><pubDate>Thu, 27 Aug 2015 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/chinaunicom%E7%9A%84%E9%AB%98%E9%80%9F%E8%BF%9E%E6%8E%A5%E6%96%B9%E6%B3%95/</guid><description>&lt;p&gt;找到网关在浏览器中输入即可。&lt;/p&gt;</description></item><item><title>About ElementaryOS</title><link>https://svtter.cn/p/about-elementaryos/</link><pubDate>Mon, 15 Jun 2015 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/about-elementaryos/</guid><description>&lt;p&gt;Obviously, it’s a beautiful operating system but basing on Ubuntu make it so weak that cannot afford simple change, like add other ppa.&lt;/p&gt;
&lt;p&gt;Otherwise, all ubuntu based OS just like that. It’s unaffordrable, itn’t?&lt;/p&gt;</description></item><item><title>Windows中的终端cmder</title><link>https://svtter.cn/p/windows%E4%B8%AD%E7%9A%84%E7%BB%88%E7%AB%AFcmder/</link><pubDate>Thu, 28 May 2015 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/windows%E4%B8%AD%E7%9A%84%E7%BB%88%E7%AB%AFcmder/</guid><description>&lt;p&gt;因为一些神奇的缘故不得不停留在windows，但是为低效垃圾的cmd与一直让人心烦，于是下载了cmder。&lt;/p&gt;
&lt;p&gt;这是官方：http://gooseberrycreative.com/cmder/&lt;/p&gt;
&lt;p&gt;给没有梯子的同学= = 带有msysgit&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="http://pan.baidu.com/s/1mgDt32g" target="_blank" rel="noopener"
&gt;http://pan.baidu.com/s/1mgDt32g&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是安装以后提示缺少某个神奇的dll，需要安装2015库。&lt;/p&gt;
&lt;p&gt;详细见这个issue：https://github.com/bliker/cmder/issues/501&lt;/p&gt;
&lt;p&gt;坑爹的是cmder在github上的源代码clone下来也是不能用的，这算啥啊- –&lt;/p&gt;
&lt;p&gt;反正安装就到这里了= =怎么用请自己继续探索吧。。&lt;/p&gt;</description></item><item><title>一些vim的想法</title><link>https://svtter.cn/p/%E4%B8%80%E4%BA%9Bvim%E7%9A%84%E6%83%B3%E6%B3%95/</link><pubDate>Tue, 05 May 2015 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E4%B8%80%E4%BA%9Bvim%E7%9A%84%E6%83%B3%E6%B3%95/</guid><description>&lt;h2 id="插件管理方面"&gt;插件管理方面
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;对于Vundle，可以给每个插件添加一个简单的配置文件，针对不同的插件进行不同的载入，有时间可以实现一下。&lt;/li&gt;
&lt;li&gt;或者可以重新造轮子，自己写一个插件管理器，实现功能。&lt;/li&gt;
&lt;li&gt;莫非已经实现了功能而我没有发现？= =&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mapvim"&gt;Map.vim
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;/tmp/tmp.cpp&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="acmvim"&gt;ACM.vim
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;添加gdb调试脚本功能。&lt;/li&gt;
&lt;li&gt;添加一键比对功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="另外"&gt;另外
&lt;/h2&gt;&lt;p&gt;可以将一部分相关的func转移。&lt;/p&gt;</description></item><item><title>gitbook初探</title><link>https://svtter.cn/p/gitbook%E5%88%9D%E6%8E%A2/</link><pubDate>Thu, 11 Dec 2014 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/gitbook%E5%88%9D%E6%8E%A2/</guid><description>&lt;blockquote&gt;
&lt;p&gt;本文出自&lt;a class="link" href="http://svtter.github.io" target="_blank" rel="noopener"
&gt;svtter.github.io&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;gitbook&lt;/strong&gt;是在利用nodejs搭建的一个写书的平台，也可以用来做别的事情，比如说作为项目的文档。&lt;/p&gt;
&lt;p&gt;gitbook样式，编辑方式【markdown】都是比较不错的，有一个官方网站 &lt;a class="link" href="http://www.gitbook.com" target="_blank" rel="noopener"
&gt;http://www.gitbook.com&lt;/a&gt;，但是国内的访问速度不是很理想，所以直接挂上去可能体验不是很好，建议自己download下来然后重新部署。&lt;/p&gt;</description></item><item><title>有趣的博客</title><link>https://svtter.cn/p/%E6%9C%89%E8%B6%A3%E7%9A%84%E5%8D%9A%E5%AE%A2/</link><pubDate>Thu, 27 Nov 2014 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E6%9C%89%E8%B6%A3%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid><description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;本文出自&amp;lt;svtter.github.io&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class="link" href="http://www.vimer.cn" target="_blank" rel="noopener"
&gt;vimer的程序世界&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class="link" href="http://www.lulinux.com" target="_blank" rel="noopener"
&gt;lulinux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class="link" href="http://learnvimscriptthehardway.onefloweroneworld.com/" target="_blank" rel="noopener"
&gt;vimscript&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>