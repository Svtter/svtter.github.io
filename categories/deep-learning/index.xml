<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deep Learning on Svtter's Blog</title><link>https://svtter.cn/categories/deep-learning/</link><description>Recent content in Deep Learning on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 11 Oct 2024 16:51:14 +0800</lastBuildDate><atom:link href="https://svtter.cn/categories/deep-learning/index.xml" rel="self" type="application/rss+xml"/><item><title>CNN Size Computing</title><link>https://svtter.cn/p/cnn-size-computing/</link><pubDate>Fri, 11 Oct 2024 16:51:14 +0800</pubDate><guid>https://svtter.cn/p/cnn-size-computing/</guid><description>&lt;p>CNNs (Convolutional Neural Networks) is a amazing component of neural network theory. However, to use it efficiently, we need to compute the output shape.&lt;/p>
&lt;h3 id="ask-for-chatgpt">ask for chatgpt
&lt;/h3>&lt;ul>
&lt;li>&lt;a class="link" href="https://chatgpt.com/share/19be811d-e750-45de-b5bd-ad391c9dba80" target="_blank" rel="noopener"
>https://chatgpt.com/share/19be811d-e750-45de-b5bd-ad391c9dba80&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="input-shape">input shape
&lt;/h3>&lt;p>Ensure that the input to your network is of the correct shape. The input tensor should have the dimensions &lt;code>[batch_size, channels, height, width]&lt;/code>. For example, if you&amp;rsquo;re using a batch size of 1, the input should be &lt;code>[1, 32, 32, 300]&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>1 is batch size.&lt;/li>
&lt;li>&lt;code>input_data = torch.randn(1, 32, 32, 300) # Example input tensor with the correct shape&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="compute-of-cnn-output">Compute of CNN output
&lt;/h3>&lt;ul>
&lt;li>reference: &lt;a class="link" href="https://www.baeldung.com/cs/convolutional-layer-size" target="_blank" rel="noopener"
>baeldung link&lt;/a>
&lt;img src="https://svtter.cn/assets/image_1717928679511_0.png"
loading="lazy"
alt="image.png"
>&lt;/li>
&lt;/ul>
&lt;p>The channels number is the CNN&amp;rsquo;s filters number.&lt;/p></description></item><item><title>Easy LSTM Training Tricks</title><link>https://svtter.cn/p/easy-lstm-training-tricks/</link><pubDate>Mon, 12 Aug 2024 15:35:03 +0800</pubDate><guid>https://svtter.cn/p/easy-lstm-training-tricks/</guid><description>&lt;p>This post introduces how to train the LSTM networks to get correct outputs.&lt;/p>
&lt;p>If you use this way, not work.&lt;/p>
&lt;ul>
&lt;li>Just use the last width, like &lt;code>x[-1, :, :]&lt;/code>, select the last piece of width.&lt;/li>
&lt;li>It&amp;rsquo;s normal way. However, somethings it will &lt;strong>NOT WORK&lt;/strong>.&lt;/li>
&lt;li>&lt;img src="https://svtter.cn/pics/lstm-1.png"
loading="lazy"
alt="image.png"
>&lt;/li>
&lt;/ul>
&lt;p>This way will work.&lt;/p>
&lt;ul>
&lt;li>Flatten all the output&lt;/li>
&lt;li>&lt;img src="https://svtter.cn/pics/lstm-2.png"
loading="lazy"
alt="image.png"
>&lt;/li>
&lt;li>It always works.&lt;/li>
&lt;/ul>
&lt;p>Have fun.&lt;/p>
&lt;p>Besides, I found &lt;a class="link" href="https://marimo.io/use-cases#examples" target="_blank" rel="noopener"
>marimo&lt;/a>, which is a replacement for jupyter notebooks.&lt;/p></description></item></channel></rss>