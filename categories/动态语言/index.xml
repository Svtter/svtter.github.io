<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>动态语言 on Svtter&#39;s Blog</title>
    <link>https://svtter.cn/categories/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in 动态语言 on Svtter&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 08 Jan 2019 01:00:00 +0800</lastBuildDate>
    <atom:link href="https://svtter.cn/categories/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django tricks</title>
      <link>https://svtter.cn/2019/01/08/django-tricks/</link>
      <pubDate>Tue, 08 Jan 2019 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2019/01/08/django-tricks/</guid>
      <description>&lt;h2 id=&#34;关于-session&#34;&gt;关于 session&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/2.1/_modules/django/contrib/sessions/middleware/#SessionMiddleware&#34;&gt;django.contrib.sessions.middleware | Django documentation | Django&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;session 是使用 cookie 来进行判断的，通过 session_cookie_name 来提取，然后通过 SessionStore() 来保存。&lt;/p&gt;&#xA;&lt;p&gt;因此，Django 也是通过 sessionid 来区分用户；（或者其他什么名称）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用-cache-作为全局变量&#34;&gt;使用 cache 作为全局变量&lt;/h2&gt;&#xA;&lt;p&gt;cache.set(‘foo’, ‘bar’) # another function cache.get(‘foo’) # get ‘bar’&lt;/p&gt;&#xA;&lt;p&gt;使用 cache , &lt;code&gt;django-redis&lt;/code&gt; 是一个好方法。可以在使用 &lt;code&gt;cache.lock&lt;/code&gt;变量，在应用层面加锁，来完成异步操作，还可以支持分布式应用，十分方便。&lt;/p&gt;</description>
    </item>
    <item>
      <title># Python文件操作</title>
      <link>https://svtter.cn/2018/06/19/python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 19 Jun 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2018/06/19/python%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;p&gt;Python的文件操作很多，为了方便以后查询使用，在此做下记录。&lt;/p&gt;&#xA;&lt;p&gt;注：这些函数都可以在官网查询，这里做个cache。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python拆包的好处</title>
      <link>https://svtter.cn/2018/06/12/python%E6%8B%86%E5%8C%85%E7%9A%84%E5%A5%BD%E5%A4%84/</link>
      <pubDate>Tue, 12 Jun 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2018/06/12/python%E6%8B%86%E5%8C%85%E7%9A%84%E5%A5%BD%E5%A4%84/</guid>
      <description>&lt;h2 id=&#34;内容&#34;&gt;内容&lt;/h2&gt;&#xA;&lt;p&gt;在最近的一期 realpython 中，我阅读到了这样一段代码：&lt;/p&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Why Python Is Great:&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# Function argument unpacking&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;myfunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;tuple_vec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;dict_vec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myfunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuple_vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;myfunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dict_vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;之前因为：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;这个东西不是很直观&lt;/li&gt;&#xA;&lt;li&gt;这个可能造成参数混乱&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;而不是很在意这段代码。现在想来，真是很方便的一个东西：我们可以通过这个特性，轻松的拆解&lt;code&gt;response.json&lt;/code&gt;这个&lt;code&gt;dict&lt;/code&gt;，从而直接使用参数。&lt;/p&gt;&#xA;&lt;p&gt;注意一点，如果一个函数的参数超过三个，说明你需要拆解这个函数，而不是被参数的数量搞得焦头烂额。&lt;/p&gt;&#xA;&lt;h2 id=&#34;具体例子&#34;&gt;具体例子&lt;/h2&gt;&#xA;&lt;p&gt;这个方法可以方便很多事情，比如说，我可以这样来重新构建输出的变量，而不是一个个&lt;code&gt;print&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add_parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;    &lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;add kwargs to dict&lt;/span&gt;&#xA;&lt;span class=&#34;sd&#34;&gt;    Args:&lt;/span&gt;&#xA;&lt;span class=&#34;sd&#34;&gt;        params: the dict need to add&lt;/span&gt;&#xA;&lt;span class=&#34;sd&#34;&gt;        kwargs: variable&lt;/span&gt;&#xA;&lt;span class=&#34;sd&#34;&gt;    &#34;&#34;&#34;&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;add_parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;                   &lt;span class=&#34;n&#34;&gt;x_train&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_train&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;                   &lt;span class=&#34;n&#34;&gt;y_train&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_train&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;                   &lt;span class=&#34;n&#34;&gt;x_test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;                   &lt;span class=&#34;n&#34;&gt;y_test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;pretty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>vscode为django添加合适的pylint</title>
      <link>https://svtter.cn/2018/02/24/vscode%E4%B8%BAdjango%E6%B7%BB%E5%8A%A0%E5%90%88%E9%80%82%E7%9A%84pylint/</link>
      <pubDate>Sat, 24 Feb 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2018/02/24/vscode%E4%B8%BAdjango%E6%B7%BB%E5%8A%A0%E5%90%88%E9%80%82%E7%9A%84pylint/</guid>
      <description>&lt;p&gt;使用vscode进行django开发的时候，总会出现一些错误，比如说对Django的一些结构进行错误的报错；&lt;/p&gt;&#xA;&lt;p&gt;这个时候可以安装&lt;code&gt;pylint-django&lt;/code&gt;这个插件。&lt;/p&gt;&#xA;&lt;p&gt;安装方法：&lt;code&gt;pip install pylint-django&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用：&lt;/p&gt;&#xA;&lt;p&gt;在&lt;code&gt;.vscode/&lt;/code&gt;配置文件中增加：&lt;/p&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;s2&#34;&gt;&#34;python.linting.pylintArgs&#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&#xA;        &lt;span class=&#34;s2&#34;&gt;&#34;--load-plugins=pylint_django&#34;&lt;/span&gt;&#xA;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;即可。&lt;/p&gt;&#xA;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/45135263/class-has-no-objects-member&#34;&gt;https://stackoverflow.com/questions/45135263/class-has-no-objects-member&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>python如何使用不可变量const</title>
      <link>https://svtter.cn/2018/02/06/python%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%8F%AF%E5%8F%98%E9%87%8Fconst/</link>
      <pubDate>Tue, 06 Feb 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2018/02/06/python%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%8F%AF%E5%8F%98%E9%87%8Fconst/</guid>
      <description>&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# python2&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# Put in const.py...:&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;_const&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ConstError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ne&#34;&gt;TypeError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__setattr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__dict__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;has_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;            &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ConstError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Can&amp;#39;t rebind const(&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&#xA;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__dict__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&#xA;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_const&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# that&amp;#39;s all -- now any client-code can&lt;/span&gt;&#xA;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;const&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# and bind an attribute ONCE:&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# but NOT re-bind it:&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;magic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;88&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# raises const.ConstError&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# you may also want to add the obvious __delattr__&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# python3 version&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;_const&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ConstError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ne&#34;&gt;TypeError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__setattr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__dict__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;            &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ConstError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Can&amp;#39;t rebind const(&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__dict__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&#xA;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_const&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;这样一来，就可以在python中使用不可变量了。其中，利用魔术方法&lt;code&gt;__setattr__&lt;/code&gt;，把一个变量当作是&lt;code&gt;const&lt;/code&gt;类的属性，然后使用&lt;code&gt;__dict__&lt;/code&gt;来判断当前变量是否已经存在。&lt;/p&gt;&#xA;&lt;p&gt;通过这个技巧我们还能构造出一系列有意思的东西——&lt;/p&gt;&#xA;&lt;h2 id=&#34;运行截图&#34;&gt;运行截图&lt;/h2&gt;&#xA;&lt;img alt=&#34;&#34; src=&#34;https://i2.wp.com/ws1.sinaimg.cn/large/c53b1907ly1fo6qa3mr0mj20ve0kg0vx.jpg?w=625&amp;#038;ssl=1&#34; data-recalc-dims=&#34;1&#34; /&gt;&#xA;&lt;h2 id=&#34;refer&#34;&gt;refer&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gist.github.com/Svtter/c96e3259e264621e8bc1ab45b4c2675a&#34;&gt;https://gist.github.com/Svtter/c96e3259e264621e8bc1ab45b4c2675a&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://code.activestate.com/recipes/65207-constants-in-python/?in=user-97991&#34;&gt;http://code.activestate.com/recipes/65207-constants-in-python/?in=user-97991&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>pipenv入门指南</title>
      <link>https://svtter.cn/2017/12/26/pipenv%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 26 Dec 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/12/26/pipenv%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;pipenv是书写flask的大神kennethreitz的新作；pipenv集成了virtualenv和pip等工具，让你从&lt;code&gt;requirements.pip&lt;/code&gt;以及&lt;code&gt;virtualenv&lt;/code&gt;的环境中解放出来。并且他还集成了&lt;code&gt;pyenv&lt;/code&gt;的选择&lt;code&gt;python&lt;/code&gt;版本，可以说是所向披靡了。&lt;/p&gt;&#xA;&lt;p&gt;这是他的原话：&lt;/p&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;You no longer need to use pip and virtualenv separately. They work together.&#xA;Managing a requirements.txt file can be problematic, so Pipenv uses the upcoming Pipfile and Pipfile.lock instead, which is superior for basic use cases.&#xA;Hashes are used everywhere, always. Security. Automatically expose security vulnerabilities.&#xA;Give you insight into your dependency graph (e.g. $ pipenv graph).&#xA;Streamline development workflow by loading .env files.&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;相信随着pipenv更加流行，许多工具也会在自己的环境中对pipenv提供支持，解决许多令人不舒服的问题，也能更好的提高编辑的舒适度。&lt;/p&gt;&#xA;&lt;h2 id=&#34;安装pipenv&#34;&gt;安装pipenv&lt;/h2&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install pipenv&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;创建虚拟环境-virtualenv&#34;&gt;创建虚拟环境 virtualenv&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;当不存在一个虚拟环境的时候，pipenv将会自动创建一个环境&lt;/li&gt;&#xA;&lt;li&gt;你也可以手动创建虚拟环境：&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;$ pipenv --three&lt;/code&gt; 创建Python3虚拟环境&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$ pipenv --two&lt;/code&gt; 创建Python2虚拟环境&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;其他的东西和&lt;code&gt;virtualenv&lt;/code&gt;是一样的。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;安装包&#34;&gt;安装包&lt;/h2&gt;&#xA;&lt;p&gt;比如你要使用&lt;code&gt;requests&lt;/code&gt;（是的也是这个大神写的）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python-Tips</title>
      <link>https://svtter.cn/2017/11/26/python-tips/</link>
      <pubDate>Sun, 26 Nov 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2017/11/26/python-tips/</guid>
      <description>&lt;p&gt;来自分布在各处的开发tips&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用nametuple&#34;&gt;使用nametuple&lt;/h2&gt;&#xA;&lt;p&gt;nametuple用来构建只有少数属性但是没有方法的对象，比如数据库条目。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python在Ubuntu中使用形式</title>
      <link>https://svtter.cn/2016/08/07/python%E5%9C%A8ubuntu%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%BD%A2%E5%BC%8F/</link>
      <pubDate>Sun, 07 Aug 2016 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2016/08/07/python%E5%9C%A8ubuntu%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%BD%A2%E5%BC%8F/</guid>
      <description>&lt;p&gt;Python在Ubuntu中的形式十分杂乱。对于&lt;code&gt;Debian&lt;/code&gt;已经很久没有使用过了，因此不太清楚Debian对于Python的版本是如何管理的。&lt;/p&gt;&#xA;&lt;p&gt;但是在CentOS中，Python的管理方式是，默认不安装Python3。（CentOS6.5）这对于系统的&lt;strong&gt;纯洁性&lt;/strong&gt;具有相当的保护性。&lt;/p&gt;&#xA;&lt;!-- more--&gt;&#xA;&lt;p&gt;行文至此，不得不想到，肯定有对于此类讲解的书籍，也会说的比我更加明确。对于此问题，如果我继续深入的读读书，谈一谈，可能会更好。&lt;/p&gt;&#xA;&lt;p&gt;Debian系的Ubuntu顺承了上游的想法同时包含两个东西，但是我认为，这并不是一个正确的做法。因为总有程序员写代码的时候不喜欢使用&lt;code&gt;env python2&lt;/code&gt;。这也就解释了为什么我们仅仅修改了&lt;code&gt;python&lt;/code&gt;的指向，但是依然容易出问题。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/21653286&#34;&gt;https://www.zhihu.com/question/21653286&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;知乎上有许多&lt;code&gt;pip3&lt;/code&gt;这种答案，但是这其实是有问题的。尤其是当存在缓存的时候，如果&lt;code&gt;pip2&lt;/code&gt;和&lt;code&gt;pip3&lt;/code&gt;同时安装一个包的时候，&lt;code&gt;pip3&lt;/code&gt;或者&lt;code&gt;pip2&lt;/code&gt;会读取另一方的缓存，导致安装失败。然后陆续出现问题。这是我所遇到的， 尽管不一定100%发生，但是如果发生了，就对行云流水的体验造成了很大的影响——我不得不去G搜看看问题所在。&lt;/p&gt;&#xA;&lt;p&gt;所以，最终的解决方案？&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.ituring.com.cn/article/261302&#34;&gt;http://www.ituring.com.cn/article/261302&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;以后Linux相关书籍以及想法就写在图灵社区，最终成书，对于大学程序员起指导作用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python – 数据结构</title>
      <link>https://svtter.cn/2015/07/09/python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Thu, 09 Jul 2015 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2015/07/09/python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.jobbole.com/65218/&#34;&gt;http://blog.jobbole.com/65218/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/column/details/wklken4ds-alg-py.html&#34;&gt;http://blog.csdn.net/column/details/wklken4ds-alg-py.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Python-建立最简单的web服务器</title>
      <link>https://svtter.cn/2014/12/11/python-%E5%BB%BA%E7%AB%8B%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Thu, 11 Dec 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2014/12/11/python-%E5%BB%BA%E7%AB%8B%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文出自&lt;a href=&#34;http://svtter.github.io&#34;&gt;svtter.github.io&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;有三个服务模块可以使用:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;BaseHTTPServer 最基础web服务.&lt;/li&gt;&#xA;&lt;li&gt;SimpleHTTPServer 可以处理GET和HEAD.&lt;/li&gt;&#xA;&lt;li&gt;CGIHTTPServer 可以处理POST请求和执行CGI.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;只需要一行代码即可:&lt;/p&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;python -m SimpleHTTPServer 8080&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;如果8080端口被占用，可以选择别的端口来使用.&lt;/p&gt;&#xA;&lt;p&gt;此处的 SimpleHTTPServer 可以使用以上三个服务模块替代&lt;/p&gt;</description>
    </item>
    <item>
      <title>python的自动补全</title>
      <link>https://svtter.cn/2014/11/21/python%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</link>
      <pubDate>Fri, 21 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2014/11/21/python%E7%9A%84%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</guid>
      <description>&lt;h2 id=&#34;新建python_start_up_file文件&#34;&gt;新建python_start_up_file文件&lt;/h2&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# python startup file&lt;/span&gt;&#xA;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;readline&lt;/span&gt;&#xA;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rlcompleter&lt;/span&gt;&#xA;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;atexit&lt;/span&gt;&#xA;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# tab completion&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse_and_bind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;tab: complete&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# history file&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;histfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;home&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.pythonhistory&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_history_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;histfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ioerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;    &lt;span class=&#34;mi&#34;&gt;&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;atexit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write_history_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;histfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;del&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;histfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rlcompleter&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;在&lt;code&gt;$HOME/.profile&lt;/code&gt;文件中写入&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;export PYTHONSTARTUP=$HOME/.python_start_up_file&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;小注&#34;&gt;小注：&lt;/h2&gt;&#xA;&lt;p&gt;可以使用py3compile来编译文件，然后使用python3+文件名来运行&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python-使用hexo的python脚本</title>
      <link>https://svtter.cn/post/2014-11-19-python-%E4%BD%BF%E7%94%A8hexo%E7%9A%84python%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 19 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/post/2014-11-19-python-%E4%BD%BF%E7%94%A8hexo%E7%9A%84python%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;p&gt;为了简化blog的使用写的python脚本，用来简化自己的操作= =&lt;/p&gt;&#xA;&lt;p&gt;更新了一下。&lt;/p&gt;&#xA;&lt;p&gt;最新的代码在coding.net上&lt;/p&gt;&#xA;&lt;div class=&#34;codehilite&#34;&gt;&#xA;  &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env python2&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# coding: UTF-8&lt;/span&gt;&#xA;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;&#xA;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;&#xA;&lt;span class=&#34;c1&#34;&gt;# 博客目录&lt;/span&gt;&#xA;&lt;span class=&#34;n&#34;&gt;blog_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/home/svitter/svtter.github.io/source/_posts&amp;#39;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;&#xA;    &lt;span class=&#34;sd&#34;&gt;&amp;#39;&amp;#39;&amp;#39;output help information&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-n: new blog&amp;#39;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-g: Generate and push&amp;#39;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-h: help&amp;#39;&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no option&amp;#39;&lt;/span&gt;&#xA;    &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;        &lt;span class=&#34;c1&#34;&gt;# 改变工作目录&lt;/span&gt;&#xA;        &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blog_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;        &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;            &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;hexo n &#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&#xA;            &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;gvim &#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;.md&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;            &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;hexo g&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;            &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;hexo d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;            &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/home/svitter/svtter.github.io&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;            &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;. update&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;h&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;            &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;dir&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;            &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blog_dir&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;            &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gvim &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;blog_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;            &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no such command.&amp;#39;&lt;/span&gt;&#xA;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;        &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Python – 一个Python的备份脚本</title>
      <link>https://svtter.cn/2014/11/14/python-%E4%B8%80%E4%B8%AApython%E7%9A%84%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Fri, 14 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.cn/2014/11/14/python-%E4%B8%80%E4%B8%AApython%E7%9A%84%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;h1 id=&#34;tags&#34;&gt;TAGS&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;python的注释必须与代码相隔两个空格&lt;/li&gt;&#xA;&lt;li&gt;#与注释语言间必须有一个空格&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
