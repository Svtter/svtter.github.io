<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Svtter&#39;s Blog</title>
    <link>https://svtter.github.io/categories/linux/</link>
    <description>Recent content in Linux on Svtter&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 02 Jun 2019 01:00:00 +0800</lastBuildDate>
    <atom:link href="https://svtter.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我的 Linux 开发环境</title>
      <link>https://svtter.github.io/post/2019-06-02-my-linux-development-env/</link>
      <pubDate>Sun, 02 Jun 2019 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/post/2019-06-02-my-linux-development-env/</guid>
      <description>&lt;p&gt;GNU/Linux 操作系统数量繁多，对于新手直接使用进行开发十分不友好。但是，随着&#xA;许多工具的发展，Linux 入门已经没有那么困难，这里简单介绍笔者的几个开发环境，&#xA;供读者参考。&lt;/p&gt;</description>
    </item>
    <item>
      <title>安装 GNU/Linux</title>
      <link>https://svtter.github.io/2018/10/12/%E5%AE%89%E8%A3%85-gnu-linux/</link>
      <pubDate>Fri, 12 Oct 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2018/10/12/%E5%AE%89%E8%A3%85-gnu-linux/</guid>
      <description>之前一直搞不清楚 UEFI 和 Legacy 区别在哪里，今天搞了一下 Manjaro 终于搞明白了；比较好笑的是，我参考的是 Ubuntu 的文档。&#xA;https://help.ubuntu.com/community/UEFI&#xA;安装 Manjaro 的时候，一直都有个安装引导程序到某处，很纳闷，为啥我这里有这个东西，别人截图就没有。后来更换了rufus的写入的模式，也就是 UEFI only。然后重新以 UEFI 模式载入，终于，引导不再有之前的“安装引导程序“了。&#xA;感动不已，于是在这里记录一下。&#xA;https://askubuntu.com/questions/63610/how-do-i-remove-ubuntu-in-the-bios-boot-menu-uefi</description>
    </item>
    <item>
      <title>ssh 显示图像</title>
      <link>https://svtter.github.io/2018/09/20/ssh-%E6%98%BE%E7%A4%BA%E5%9B%BE%E5%83%8F/</link>
      <pubDate>Thu, 20 Sep 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2018/09/20/ssh-%E6%98%BE%E7%A4%BA%E5%9B%BE%E5%83%8F/</guid>
      <description>原来一直认为ssh仅仅是一个字符界面，最近发现其实可以传输xserver中的图像。&#xA;方法很简单，只需要在ssh的选项中添加-Y就可以了。比如原来的ssh命令是这样：&#xA;现在改成这样&#xA;非常简单有效。&#xA;另外，远程查看Ubuntu中的图像，可以使用eog命令。安装：&#xA;安装完成后，直接运行eog ./test.png即可。这对于服务器调试相当方便了！&#xA;SSH 可选的加速策略</description>
    </item>
    <item>
      <title>Ubuntu 脱坑指南</title>
      <link>https://svtter.github.io/2018/05/29/ubuntu%E8%84%B1%E5%9D%91%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 29 May 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2018/05/29/ubuntu%E8%84%B1%E5%9D%91%E6%8C%87%E5%8D%97/</guid>
      <description>希望本文能够给读者较少一些不必要的困扰。书写顺序较为随意，以&#xA;“从安装到使用”这个为主线行文。&#xA;安装时 本文不在此具体介绍如何安装Ubuntu。对于安装过程的建议，本文会写在&#xA;内容之中。安装之前，建议阅读本文。&#xA;使用非定制的ISO 不要使用Lubuntu，Kubuntu甚至Gnome Ubuntu这些更改了默认桌面环境的Ubuntu。&#xA;对于新手而言，Ubuntu本身就很脆弱，使用这些定制的ISO，不仅不利于提升用户&#xA;体验，反而会在非重点的地方极大的消耗时间。对了，Kylin也是不推荐的，尽管&#xA;官方甚至都把它挂在了首页。&#xA;唯一建议使用的ISO是官方下载地址。&#xA;使用英文系统 中文系统可能会导致许多问题。比如，如果一个软件不支持中文路径，你可能需要&#xA;排查很久才能想到这个问题。除此之外还有其他的一些问题，比如在命令行中进入&#xA;一个目录，你可能需要切换输入法，然后再切换回来，十分不方便。还有一些暗含&#xA;的问题，我已经记不清了，也没有精力去探索这些问题，因为我们的目的是“脱坑”。&#xA;因此，使用英文作为系统语言可以解决很多问题。唯一引入的问题可能是英文的阅&#xA;读障碍。我想这应该是一个需要克服的问题。&#xA;如果使用英文調不出輸入法，可以嘗試添加中文支持，再去掉&#xA;不要挑战花式安装 我这里的花式安装是指，/home做一个分区，/boot做一个分区这种事；还有就&#xA;是在固态上放一个区，在其他位置再放一个区等。这种事情不要做。是的，不要做。&#xA;在我看来，这种事情毫无意义，对于新手而言，基本上不会有时间让系统稳定到&#xA;硬盘不够用。&#xA;把根目录/挂到一个大分区下，100G，所有问题就都解决了。当空间不足需要重装，&#xA;恭喜，你可能已经不是新手了，很多问题都可以不再按照此指南进行了。你可以&#xA;尝试按照你自己的意图去配置系统了。&#xA;使用 下面是使用部分。使用部分是，第一次进行安装之后，第一次进入桌面。&#xA;不要添加第三方PPA 我把这条忠告写在最前面。如果你不知道什么叫做第三方ppa，那么很好，&#xA;我的意思是，在你了解它是什么之前，不要通过apt与software center&#xA;以外的方式安装软件。这可以很大程度的保护你的软件包管理工具。修复&#xA;软件包管理工具需要消耗的时间可能很多，而且问题往往是链式的，总会&#xA;给新手造成“我以为我解决了”这样的错觉。&#xA;sudo add-apt-repository ppa:kelleyk/emacs 这就是我所说的PPA。&#xA;Vim 和 Emacs 都是我的最爱。&#xA;不要在输入法上耗费太多时间 输入法如果花费一上午都没有解决的话，建议放弃。因为Ubuntu官方的版本&#xA;有时候给出的中文输入法都可能无法使用。&#xA;如果真的需要输入中文，可以先考虑使用中文搜索引擎做pinyin的转换。不过&#xA;你真的需要中文，并且在Ubuntu下做文字处理的工作吗？&#xA;多运行apt-get update 是的。更换国内源这个事情我是建议的，个人对于tsinghua的源非常喜欢，&#xA;尽管它崩的概率也有点高，不过在ipv6以及速度上都太令人满意了。&#xA;源的不稳定可能造成的问题是，没有完全将软件依赖更新好。&#xA;如果你不知道我在说什么，没关系，apt命令出现问题时，多运行apt-get update&#xA;就可以了。&#xA;官方文档为主 Ubuntu的很多问题，都是国内博主在写文章时比较随意造成的（我也挖这种坑）。&#xA;在进行软件安装的时候，新手往往在国内搜索某个教程就复制粘贴了。这是非常&#xA;容易出问题的，且不论安全性，甚至教程本身都无法使得软件正常运行。这里面&#xA;包含很多种可能：文章不再更新，系统已经不适配；教程缺斤少两等等。&#xA;安装软件先以官方文档为主，也就是软件的官方网站，一般都会有文档。文档可能&#xA;不好读，但是起码能够减少问题。其次是Ubuntu官方的安装指南；再其次是google&#xA;第一位的安装指南（前提是新手能明白每一步都在做什么）；没有最后。&#xA;能用apt-get install解决的问题，不要通过make解决。&#xA;尽量不使用sudo 除非是按照官方文档进行操作（不排除无良软件开发者挖坑导致运行时出问题），</description>
    </item>
    <item>
      <title>获取本机ipv6地址</title>
      <link>https://svtter.github.io/2018/02/28/%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAipv6%E5%9C%B0%E5%9D%80/</link>
      <pubDate>Wed, 28 Feb 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2018/02/28/%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BAipv6%E5%9C%B0%E5%9D%80/</guid>
      <description>获取本机ipv6地址，最简单的方法：&#xA;还可以使用python的netinterface包。&#xA;ifconfig也是从这个文件进行获取的，只是优化了一下格式。&#xA;reference https://blog.lilydjwg.me/2012/6/6/get-ipv4-and-ipv6-addresses-of-local-host-in-a-programming-way.34055.html </description>
    </item>
    <item>
      <title>使用 grub customizer 调教grub</title>
      <link>https://svtter.github.io/2018/02/28/%E4%BD%BF%E7%94%A8grubcustomizer%E8%B0%83%E6%95%99grub/</link>
      <pubDate>Wed, 28 Feb 2018 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2018/02/28/%E4%BD%BF%E7%94%A8grubcustomizer%E8%B0%83%E6%95%99grub/</guid>
      <description>调整grub总是需要搜索某个文件，某个配置，相当麻烦，近期找了一个比较不错的图形化配置管理器，grub customizer，可以调整启动的内核，以及启动的画面，非常好用，安利一发。&#xA;安装 使用截图 【日后补上】&#xA;reference http://ubuntuhandbook.org/index.php/2016/04/install-grub-customizer-ubuntu-16-04-lts/ grub讲解 </description>
    </item>
    <item>
      <title>定制ARM-Linux镜像</title>
      <link>https://svtter.github.io/2017/02/25/%E5%AE%9A%E5%88%B6arm-linux%E9%95%9C%E5%83%8F/</link>
      <pubDate>Sat, 25 Feb 2017 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2017/02/25/%E5%AE%9A%E5%88%B6arm-linux%E9%95%9C%E5%83%8F/</guid>
      <description>简单看了看ARM-Linux镜像的相关内容，发现一个比较坑的地方，就是，不同架构的Linux是&#xA;不能直接chroot的，除非经过处理，比如qemu。使用这种模拟器可以进行解释执行。&#xA;&amp;lt;未完待续&amp;gt;</description>
    </item>
    <item>
      <title>Linux-makefile写法</title>
      <link>https://svtter.github.io/2014/12/24/linux-makefile%E5%86%99%E6%B3%95/</link>
      <pubDate>Wed, 24 Dec 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/12/24/linux-makefile%E5%86%99%E6%B3%95/</guid>
      <description> 本文出自svtter.github.io&#xA;本文可以随意转载，但是转载请保留本信息.&#xA;makefile写法有复杂的有简单的，我这里提到的主要为了做一些简单的开发，所以还是说些简单的事情。&#xA;使用makefile之前，要学会使用bash的一些东西。鸟哥的私房菜虽然说是介绍Linux，但是总感觉很多都是介绍bash，以及和&#xA;bash配合使用的一些命令。。。&#xA;变量的写法 定义的时候直接使用VAR = main.o即可这种格式即可 使用的时候使用${VAR}这种形式来使用，类似于php中的变量。 另外， 位于makefile外面的变量也是可以使用的，使用的时候使用如下格式VAR = main.o make即可，这样就相当于在makefile&#xA;定义了一个VAR变量。在外定义的变量是优先于makefile里面的变量的，就像是一个预订义的函数一般。&#xA;此外，$@表示当前的目标。如果在clean那里面，$@指的是clean&#xA;make + 命令写法 比如make clean的写法，就是在makefile文件中添加&#xA;clean:&#xA;rm .. (类似bash的使用方法，这个地方也可以使用变量）&#xA;相对的，install等等的方法就类似于这个上面的写法了。&#xA;写到这里也是明白了为什么vim里面有个make命令，却没有各种编译命令了= =&#xA;然后附加一个自己写的第一个makefile:（为了读者更加容易理解，我没有使用变量）&#xA;test.c:&#xA;t2.c:&#xA;文件目录是：&#xA;– file&#xA;– makefile&#xA;– test.c&#xA;– t2.c&#xA;使用make可以创建链接文件并且运行。 使用make clean可以删除生成的文件。 </description>
    </item>
    <item>
      <title>Linux-软中断通信</title>
      <link>https://svtter.github.io/2014/12/23/linux-%E8%BD%AF%E4%B8%AD%E6%96%AD%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Tue, 23 Dec 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/12/23/linux-%E8%BD%AF%E4%B8%AD%E6%96%AD%E9%80%9A%E4%BF%A1/</guid>
      <description>本文出自svtter.github.io&#xA;本文可以随意转载，但是转载请保留本信息.&#xA;执行结果 e3.png</description>
    </item>
    <item>
      <title>archlinux-安装笔记2-常用软件转载</title>
      <link>https://svtter.github.io/2014/12/09/archlinux-%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B02-%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E8%BD%AC%E8%BD%BD/</link>
      <pubDate>Tue, 09 Dec 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/12/09/archlinux-%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B02-%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E8%BD%AC%E8%BD%BD/</guid>
      <description>本文出自svtter.github.io</description>
    </item>
    <item>
      <title>archlinux-支持iphone插线3G</title>
      <link>https://svtter.github.io/2014/12/02/archlinux-%E6%94%AF%E6%8C%81iphone%E6%8F%92%E7%BA%BF3g/</link>
      <pubDate>Tue, 02 Dec 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/12/02/archlinux-%E6%94%AF%E6%8C%81iphone%E6%8F%92%E7%BA%BF3g/</guid>
      <description>本文出自svtter.github.io 度娘永远都不会告诉你真正的答案是什么。&#xA;因为没有了CMCC-EDU，用上了坑爹联通，所以现在习惯于手机USB上网了。。（博主套餐流量看个技术是可以的。。)&#xA;然后问题就来了。。CentOS7上可以安稳的使用3G但是arch似乎不支持，百度了好久也没有找到。&#xA;后来bing 了一下iphone arch linux神奇的wiki就出来了，随后就申请了个帐号，准备在学习Linux的过程中学习英语。给wiki&#xA;做点翻译还是可以的吧= =。&#xA;方法很简单, 因为我用的是NetworkManager, 所以最简单而行之有效的方法是:&#xA;重启机器或者NetworkManager搞定。&#xA;虽然无关技术以及学术痛痒，但是总感觉在Linux普及上尽了一份力= =</description>
    </item>
    <item>
      <title>archlinux-安装笔记</title>
      <link>https://svtter.github.io/2014/11/30/archlinux-%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 30 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/30/archlinux-%E5%AE%89%E8%A3%85%E7%AC%94%E8%AE%B0/</guid>
      <description>本文出自&amp;lt;svtter.github.io&amp;gt; 花了一些时间安装arch，记录一下注意事项。&#xA;多重引导 安装多重引导支持&#xA;pacman -S os-prober&#xA;更新grub&#xA;grub-mkconfig -o /boot/grub/grub.cfg&#xA;写入mbr&#xA;grub-install --target=i386-pc --recheck /dev/sda&#xA;图形化的网络服务 systemctl enable NetWorkManager.service&#xA;wifi配置 如果你想使用wifi（在图形界面下），首先你要停止dhcp服务systemctl stop dhcpcd.service 开机停止运行systemctl disable dhcpcd.service 我们之所以这样，是为了保证我们的NetWorkManager正常服务。 session控制器 我选择的是gdm，原因是slim我不太会配置。&#xA;pacman -S gdm&#xA;另外patheon在我书写这篇blog的时候，还是存在不少bug.官方的wiki在这个时候也不是很好用了。期待patheon！&#xA;添加了官方给的patheon库，会出现一个gnome-lib的冲突&#xA;输入法的注意事项 使用fcitx需要注意.xprofile的配置问题。&#xA;其他的安装情况可以看看官方的wiki&#xA;sudoer的配置 使用pacman安装sudoer&#xA;pacman -S sudo&#xA;编辑/etc/sudoers，取消wheel用户组的注释.&#xA;vim配置 在gvim中，直接使用synatic on而不用判断，否则会造成代码高亮失效。&#xA;locate配置 安装以后发现locate命令无法使用，安装pacman -S mlocate&#xA;另外, mark一个项目:gitbook, 很好很强大 应该涵盖了所有的我安装时候遇到的问题，如果还有什么问题，我再后续添加。</description>
    </item>
    <item>
      <title>Linux-进程间的通信</title>
      <link>https://svtter.github.io/2014/11/28/linux-%E8%BF%9B%E7%A8%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Fri, 28 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/28/linux-%E8%BF%9B%E7%A8%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1/</guid>
      <description> 本文出自&amp;lt;svtter.github.io&amp;gt; 实验内容 消息的创建，发送，和接收。&#xA;&amp;lt;任务&amp;gt; 使用系统调用 msgget( ), megsnd( ), msgrev( )及 msgctl()编制一长度为 1K 的消息发送和接收的程序 。&#xA;程序设计 为了便于操作和观察结, 用一个程序为引子 , 先后fork( )两个子进程 , SERVER 和 CLIENT,进行通信。 SERVER 端建立一个 Key 为 75 的消息队列,等待其他进程发来的消息。当遇到类型为 1 的消息, 则作为结束信号,取消该队列,并退出 SERVER 。SERVER 每接收到一个消息后显示一句 “(server)received”。 CLIENT 端使用 Key 为 75 的消息队列,先后发送类型从 10 到 1 的消息,然后退出。最后的一个 消息,既是 SERVER 端需要的结束信号。CLIENT 每发送一条消息后显示一句“(client)sent”。 父进程在 SERVER 和 CLIENT 均退出后结束。 使用的函数 并非每次创建消息队列都会成功，所以重新添加-1情况的判断。&#xA;可以使用ipcs -q命令查看&#xA;源代码 运行结果 </description>
    </item>
    <item>
      <title>Linux-管道</title>
      <link>https://svtter.github.io/2014/11/21/linux-%E7%AE%A1%E9%81%93/</link>
      <pubDate>Fri, 21 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/21/linux-%E7%AE%A1%E9%81%93/</guid>
      <description> 本文出自&amp;lt;svtter.github.io&amp;gt;&#xA;头文件: #include&amp;lt;unistd.h&amp;gt;&#xA;使用方法: int pipe(int chan[2]);&#xA;说明: pipe会建立管道，并将文件描述词通过chan返回。一般chan[0]为管道的读取端，chan[1]是写入端。&#xA;返回值: 成功返回0，失败返回-1，错误信息保存在errno中&#xA;错误信息:&#xA;EMFILE 进程已用完文件描述词最大量。 ENFILE 系统已无文件描述词可用。 EFAULT 参数filedes数组地址不合法 运行结果： </description>
    </item>
    <item>
      <title>Linux-同步互斥</title>
      <link>https://svtter.github.io/2014/11/21/linux-%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/</link>
      <pubDate>Fri, 21 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/21/linux-%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/</guid>
      <description> 本文出自&amp;lt;svtter.github.io&amp;gt; 使用pthread实现经典问题：生产者消费者 关于semaphore的相关信息就不再贴出来了。&#xA;编译的时候记得-pthread选项。&#xA;运行结果 操作系统经典问题：哲学家就餐问题 mutex是c++11的新功能。记得添加C++11支持。(在运行结果中包含编译选项。)&#xA;运行结果 操作系统经典问题：读者写者问题 读者优先 使用了c++11的新特性thread 运行结果 由于可以同时阅读，所以读者reading输出可能出现少许问题。&#xA;写者优先 使rsem中只有一个读者在等待，保证了如果有写者，写者优先写 运行结果 基本上结果就是写者写完，才会有读者阅读 </description>
    </item>
    <item>
      <title>Linux系统函数简介</title>
      <link>https://svtter.github.io/2014/11/21/linux%E7%B3%BB%E7%BB%9F%E5%87%BD%E6%95%B0%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Fri, 21 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/21/linux%E7%B3%BB%E7%BB%9F%E5%87%BD%E6%95%B0%E7%AE%80%E4%BB%8B/</guid>
      <description>本文出自&amp;lt;svtter.github.io&amp;gt;&#xA;系统调用函数说明、参数值及定义&#xA;本文摘自老师的资料= =&#xA;使用这些函数的时候记得将头文件unistd.h包含到程序中&#xA;1、fork() 创建一个新进程&#xA;int fork()&#xA;其中返回int取值意义如下:&#xA;0:创建子进程,从子进程返回的id值大于0:从父进程返回的子进程id值 -1:创建失败&#xA;2、lockf(files,function,size): 用作锁定文件的某些段或者整个文件,本函数适用的头文件为:&#xA;#include&amp;lt;unistd.h&amp;gt;&#xA;参数定义:&#xA;int lockf(files,function,size)&#xA;int files,function;&#xA;long size;&#xA;其中:files是文件描述符:function是锁定和解锁;1表示锁定,0表示解锁。size是锁定和解锁的字节数,若用0,表示从文件的当前位置到文件尾。&#xA;3、msgget(key,flag): 获得一个消息的描述符,该描述符指定一个消息队列以便用于其他系统调用。&#xA;该函数使用偷文件如下:&#xA;#include&amp;lt;sy/types.h&amp;gt;&#xA;#include&amp;lt;sy/ipc.h&amp;gt;&#xA;#include&amp;lt;sy/msg.h&amp;gt;&#xA;参数定义&#xA;int msgget(key,flag)&#xA;key_tkey;&#xA;int flag;&#xA;语法格式:msgqid=msgget(key,flag)&#xA;其中:msgid是该系统调用返回的描述符,失败则返回-1;flag 本身由操作允许权和控制命令值相或得到。&#xA;如:&#xA;IP_CREAT|0400 是否该队列应被创建;&#xA;IP_EXCL |0400 是否该队列的创建应是互斥的;等。&#xA;msgsnd(id,msgp,size,flag): 发送一消息。&#xA;该函数是用头文件如下:&#xA;#include&amp;lt;sy/types.h&amp;gt;&#xA;#include&amp;lt;sy/ipc.h&amp;gt;&#xA;#include&amp;lt;sy/msg.h&amp;gt;&#xA;参数定义&#xA;int msgnd(id,msgp,size,flag)&#xA;int id,size,flag;&#xA;struct msgbuf * msgp;&#xA;其中:id是返回消息队列的描述符;msgp是指向用户存储区的一个构造体指针,size指示由msgp&#xA;指向的数据结构中字符数组的长度;即消息的长度。这个数组的最大值由MSG-MAX系统可调用参数来确&#xA;定。flag规定当核心用尽内部缓冲空间时应执行的动作;若在标志flag中末设置IPC_NOWAIT位,则当&#xA;41该消息队列中字节数超过一最大值时,或系统范围的消息数超过某一最大值时,调用msgsnd进程睡眠。&#xA;若是设置IPC_NOWAIT,则在此情况下,msgsnd立即返回。&#xA;msgrcv(id,msgp,size,type,flag): 接受一消息。&#xA;该函数调用使用头文件如下:&#xA;#include&amp;lt;sy/types.h&amp;gt;&#xA;#include&amp;lt;sy/ipc.h&amp;gt;&#xA;#include&amp;lt;sy/msg.h&amp;gt;</description>
    </item>
    <item>
      <title>解决无法在CentOS下的gvim中使用ibus输入中文</title>
      <link>https://svtter.github.io/post/2014-11-15-%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E5%9C%A8centos%E4%B8%8B%E7%9A%84gvim%E4%B8%AD%E4%BD%BF%E7%94%A8ibus%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87/</link>
      <pubDate>Sat, 15 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/post/2014-11-15-%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E5%9C%A8centos%E4%B8%8B%E7%9A%84gvim%E4%B8%AD%E4%BD%BF%E7%94%A8ibus%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87/</guid>
      <description>问题 之前在gvim中一直无法使用中文，格外痛苦，后来使用了vim-ibus插件之后，可以在vim中使用中文了，但是依然不能在gvim中使用，一直以为是两个软件冲突的&#xA;问题，现在终于解决了。&#xA;gvim version: vim-X11 ibus version: 1.6 解决方案 问题出在：使用的vim插件中有插件与ibus冲突，但是奈何找不到X11的log（应该可以找到，找到再说。。） 排查方式比较简单，使用:PluginInstall,:PluginClean即可(考虑到我使用vundle管理插件) 去除相应的插件即可(比如现在冲突的是auto-pairs)。如果不想去除冲突插件，可以考虑使用vim-ibus，这个在shell下是可以使得很多冲突减少的。 可能auto-pairs在不久的将来就会修复这个bug，请在具体环境下排查 </description>
    </item>
    <item>
      <title>Linux-存储管理</title>
      <link>https://svtter.github.io/2014/11/14/linux-%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 14 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/14/linux-%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/</guid>
      <description>还未动笔</description>
    </item>
    <item>
      <title>Linux-进程管理</title>
      <link>https://svtter.github.io/2014/11/14/linux-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 14 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/14/linux-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</guid>
      <description>本文出自&amp;lt;svtter.github.io&amp;gt;&#xA;进程的创建 用于进程的创建。fork()的作用是，从当前位置创建一个子进程，并执行。fork的返回值为子进程的pid&#xA;运行结果 进程的控制 在这段代码中使用了lockf, 和wait函数。作用是什么呢？&#xA;lockf顾名思义是锁定file. lockf(1, 1, 0)锁定资源，lockf(1, 0, 0)释放资源。&#xA;wait作用为等待子进程的返回信息。wait中的signal用于接受进程的返回信号，即exit(0)中的0&#xA;运行结果 </description>
    </item>
    <item>
      <title>Linux -基础学习笔记-2</title>
      <link>https://svtter.github.io/2014/11/12/linux-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/</link>
      <pubDate>Wed, 12 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/12/linux-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/</guid>
      <description>&lt;h1 id=&#34;linux用户和用户组&#34;&gt;Linux用户和用户组&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;简单解释：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;&lt;thead&gt;&#xA;&lt;tr&gt;&#xA;&lt;th style=&#34;text-align:left&#34;&gt;文件权限&lt;/th&gt;&#xA;&lt;th style=&#34;text-align:left&#34;&gt;连接数&lt;/th&gt;&#xA;&lt;th style=&#34;text-align:left&#34;&gt;文件所有者&lt;/th&gt;&#xA;&lt;th style=&#34;text-align:left&#34;&gt;文件所属用户组&lt;/th&gt;&#xA;&lt;th style=&#34;text-align:left&#34;&gt;文件大小&lt;/th&gt;&#xA;&lt;th style=&#34;text-align:left&#34;&gt;文件最后被修改的时间&lt;/th&gt;&#xA;&lt;th style=&#34;text-align:left&#34;&gt;文件名&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/thead&gt;&#xA;&lt;tbody&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;-rw-r–r–&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;root&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;root&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;42304&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;Sep 4 18:26&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;install.log&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Linux-SELinux-httpd无法访问</title>
      <link>https://svtter.github.io/2014/11/10/linux-selinux-httpd%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/</link>
      <pubDate>Mon, 10 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/10/linux-selinux-httpd%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/</guid>
      <description>目录的问题 由于SELinux造成的httpd中的目录无法访问，可以使用&#xA;chcon -R -t httpd_user_content_t &amp;lt;path to web files&amp;gt; chcon -R -t httpd_sys_content_t &amp;lt;path to web files&amp;gt; mark一个网站()[http://www.jb51.net/os/RedHat/1303.html]&#xA;文件夹访问权限 以上方法解决了SELinux的问题，但是我的目录依然没有访问权限。&#xA;然后看了一下文件的基本属性: -rw-r--r--. 1 root root 21 11月 11 12:27 index.html&#xA;应该也是没有问题的。&#xA;再查SElinux 随后使用cat /var/log/messages探索一番，依然没有找到问题所在——SELinux没有报错。&#xA;防火墙的问题？不是阿。因为我本身是在内网访问，防火墙应该不会出问题。&#xA;那应该是什么问题呢？&#xA;配置文件 终于在配置文件中找到了问题。&#xA;apache在进入2.4.*以后，不再使用Allow from all这种形式了，取而代之，使用Require from granted这种格式。晕，就是在此处，&amp;lt;Directory&amp;gt;没有设置好，坑了好久阿。。&#xA;相对的我这几天一直都在deepin下开发——因为apt-get得到的apache之前比较习惯，此外deepin没有se也是省了很多功夫。不过通过这一次，总算是把问题解决了！&#xA;鼓励！</description>
    </item>
    <item>
      <title>Linux – CentOS-安装更新并重启</title>
      <link>https://svtter.github.io/2014/11/09/linux-centos-%E5%AE%89%E8%A3%85%E6%9B%B4%E6%96%B0%E5%B9%B6%E9%87%8D%E5%90%AF/</link>
      <pubDate>Sun, 09 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/09/linux-centos-%E5%AE%89%E8%A3%85%E6%9B%B4%E6%96%B0%E5%B9%B6%E9%87%8D%E5%90%AF/</guid>
      <description>有时候我们用yum update更新了系统，但是选项中【一般gnome-session】的’安装更&#xA;依然固执的在那里我们应该怎么办？&#xA;打开’软件更新’即可。</description>
    </item>
    <item>
      <title>Linux – 基础学习笔记(1)</title>
      <link>https://svtter.github.io/2014/11/09/linux-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%281%29/</link>
      <pubDate>Sun, 09 Nov 2014 01:00:00 +0800</pubDate>
      <guid>https://svtter.github.io/2014/11/09/linux-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%281%29/</guid>
      <description>&lt;h1 id=&#34;linux基础学习笔记&#34;&gt;Linux基础学习笔记&lt;/h1&gt;&#xA;&lt;p&gt;以鸟哥的私房菜为基础进行学习。&lt;/p&gt;&#xA;&lt;p&gt;用Linux有接近两年的时间了，还是很水，于是决定从头开始，认真学习基础。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
