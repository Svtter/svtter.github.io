<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>前端 on Svtter's Blog</title><link>https://svtter.cn/categories/%E5%89%8D%E7%AB%AF/</link><description>Recent content in 前端 on Svtter's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 28 Dec 2018 01:00:00 +0800</lastBuildDate><atom:link href="https://svtter.cn/categories/%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>手把手教你搭建 vue-cli﻿</title><link>https://svtter.cn/p/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%90%AD%E5%BB%BA-vue-cli/</link><pubDate>Fri, 28 Dec 2018 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E6%90%AD%E5%BB%BA-vue-cli/</guid><description>&lt;p&gt;&lt;code&gt;vuejs&lt;/code&gt; 这东西，实不相瞒，学习了很长时间，从看文档到使用，大概有一年的时间。当然，其实上手没有那么难，&lt;code&gt;&amp;lt;script src=&amp;quot;vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;这样就搞定了。只是想要用的比较优雅，存在一定的难度。&lt;/p&gt;
&lt;p&gt;但是硬核玩家肯定不能止步于此。于是就开始了&lt;code&gt;vue-cli&lt;/code&gt;的探究。没想到这个探究如此之长，以至于我在很长一段时间内，都没有正儿八经的写过前端。&lt;/p&gt;
&lt;h2 id="安装-nodejs"&gt;安装 nodejs
&lt;/h2&gt;&lt;p&gt;首先第一步，在&lt;code&gt;ubuntu&lt;/code&gt;下安装nodejs。Ubuntu自带的vuejs版本说不过去，版本有些老旧，而且安装相关的包很不方便，需要sudo什么的。因此，建议直接从官网下载。&lt;/p&gt;
&lt;p&gt;从官网下载，直接解压的到&lt;code&gt;~/Application/nodejs&lt;/code&gt;下面即可。（笔者习惯将已经安装好的软件放在&lt;code&gt;$HOME/Application&lt;/code&gt;这个文件夹下面。）然后，将&lt;code&gt;nodejs&lt;/code&gt;的执行路径加入到 shell 的运行路径中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export PATH=$HOME/Application/nodejs:$PATH&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如此一来，就把nodejs安装上了。&lt;/p&gt;
&lt;h2 id="安装-vue-cli"&gt;安装 vue-cli
&lt;/h2&gt;&lt;p&gt;国内的话最好是先走一下 taobao 的 npm 镜像（同理，其他的技术软件都可以走镜像，土豪公司vpn请无视）。&lt;/p&gt;
&lt;pre&gt;yarn global add vue-cli&lt;/pre&gt;
&lt;p&gt;安装好 vue-cli 以后，就可以开始你的编程之路了。&lt;/p&gt;
&lt;p&gt;首先，创建一个 vue 项目&lt;/p&gt;
&lt;p&gt;（挖坑待续）&lt;/p&gt;</description></item><item><title>关于hexo主题到leanote主题的移植</title><link>https://svtter.cn/p/%E5%85%B3%E4%BA%8Ehexo%E4%B8%BB%E9%A2%98%E5%88%B0leanote%E4%B8%BB%E9%A2%98%E7%9A%84%E7%A7%BB%E6%A4%8D/</link><pubDate>Wed, 24 Feb 2016 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E5%85%B3%E4%BA%8Ehexo%E4%B8%BB%E9%A2%98%E5%88%B0leanote%E4%B8%BB%E9%A2%98%E7%9A%84%E7%A7%BB%E6%A4%8D/</guid><description>&lt;p&gt;似乎是个辛苦的差事。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先，hexo使用的ejs模板引擎，也就是说，整个代码的构建是要利用ejs的。然而hexo使用的则是golang模板引擎，这两个引擎我都不了解，ejs我是略微有所接触，并不深入，因此整个任务可以说是困难重重。但是面对这个令人万分讨厌的默认主题以及字体，我必须要做点什么了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="思路"&gt;思路
&lt;/h2&gt;&lt;p&gt;clone了两个代码看了看，分析了几条思路。&lt;/p&gt;
&lt;h3 id="思路一直接在ejs的基础上修改"&gt;思路一：直接在ejs的基础上修改
&lt;/h3&gt;&lt;p&gt;既然ejs是一个模板引擎，那么从中寻找相同点，手写一个可以读取ejs的工具，重新构建成golang模板，即自动化生成工具。可以应对多种主题，一劳永逸，在自动生成的基础上对新生成的代码再加工。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现方法：了解ejs模板，golang模板，需要利用编译器知识，对原本的ejs文件进行重新编译，编译成golang的模板。（是否已经有类似的成品？）&lt;/li&gt;
&lt;li&gt;优点：一劳永逸&lt;/li&gt;
&lt;li&gt;缺点：实现难度较高，需要分析&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="思路二使用hexo生成html文件后手动修改"&gt;思路二：使用hexo生成html文件后，手动修改
&lt;/h3&gt;&lt;p&gt;这种方法相对第一种来讲，实现较为简单。即：利用hexo生成的静态文件，在&lt;code&gt;public&lt;/code&gt;生成的文件进行分析修改。利用此方法，如果生成的html文件不复杂且结构清晰可用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现方法：直接生成出接近成品的html文件，手动修改。&lt;/li&gt;
&lt;li&gt;优点：简单粗暴&lt;/li&gt;
&lt;li&gt;缺点：只能针对单一主题，且人工活动量较大。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="思路三登录leanote论坛多叫几声"&gt;思路三：登录leanote论坛多叫几声。
&lt;/h3&gt;&lt;h2 id="结语"&gt;结语
&lt;/h2&gt;&lt;p&gt;综上所述，个人决定首先手动修改一次，凑合着使用。然后再利用编译原理知识进行进一步修改，实现思路一。好的程序员是给自己出问题的= =。&lt;/p&gt;
&lt;p&gt;成品稍后奉上。&lt;/p&gt;
&lt;p&gt;半成品:&lt;/p&gt;</description></item><item><title>Webstorm安装Vim插件+Vim配置</title><link>https://svtter.cn/p/webstorm%E5%AE%89%E8%A3%85vim%E6%8F%92%E4%BB%B6-vim%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 07 Sep 2015 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/webstorm%E5%AE%89%E8%A3%85vim%E6%8F%92%E4%BB%B6-vim%E9%85%8D%E7%BD%AE/</guid><description>&lt;h2 id="webstorm"&gt;Webstorm
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;使用webstorm进行前端开发&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近使用webstorm进行了简单小游戏的开发，感觉十分强大。&lt;/p&gt;
&lt;h2 id="插件安装"&gt;插件安装
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ideavim&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用&lt;code&gt;Ctrl+Alt+s&lt;/code&gt;召唤Settings，输入Plugin，Browse，找到ideavim，安装。此时提示重启webstorm，先不必重启，打开&lt;code&gt;C:\User\&amp;quot;当前用户&amp;quot;&lt;/code&gt;，建立&lt;code&gt;_ideavim&lt;/code&gt;，加上&lt;code&gt;source _vimrc&lt;/code&gt;读入自己的vim配置文件即可。根本停不下来。&lt;/p&gt;
&lt;p&gt;早知道有如此工具在下也不至于在web上如此痛苦。个人认为，比起配置原生态Vim，这样开发更加好用，节省博主本来就不多的脑细胞。&lt;/p&gt;</description></item><item><title>前端效果mark</title><link>https://svtter.cn/p/%E5%89%8D%E7%AB%AF%E6%95%88%E6%9E%9Cmark/</link><pubDate>Thu, 28 May 2015 01:00:00 +0800</pubDate><guid>https://svtter.cn/p/%E5%89%8D%E7%AB%AF%E6%95%88%E6%9E%9Cmark/</guid><description>&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="http://www.baidufe.com/item/df906a985d9d9d6acd60.html" target="_blank" rel="noopener"
&gt;alien&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="http://www.iteye.com/news/28656" target="_blank" rel="noopener"
&gt;http://www.iteye.com/news/28656&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="http://www.csdn.net/article/2013-02-25/2814245-20-best-front-end-framework" target="_blank" rel="noopener"
&gt;http://www.csdn.net/article/2013-02-25/2814245-20-best-front-end-framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="http://www.open-lib.com/Type/166-1.jsp" target="_blank" rel="noopener"
&gt;http://www.open-lib.com/Type/166-1.jsp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="http://maroslaw.github.io/rainyday.js/" target="_blank" rel="noopener"
&gt;http://maroslaw.github.io/rainyday.js/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="link" href="https://github.com/maroslaw/rainyday.js" target="_blank" rel="noopener"
&gt;https://github.com/maroslaw/rainyday.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>