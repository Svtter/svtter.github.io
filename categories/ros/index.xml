<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ROS on Svtter&#39;s Blog</title>
    <link>http://192.168.2.39:1313/categories/ros/</link>
    <description>Recent content in ROS on Svtter&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 28 Jan 2018 01:00:00 +0800</lastBuildDate>
    <atom:link href="http://192.168.2.39:1313/categories/ros/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ROS 开发tips</title>
      <link>http://192.168.2.39:1313/2018/01/28/ros%E5%BC%80%E5%8F%91tips/</link>
      <pubDate>Sun, 28 Jan 2018 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/2018/01/28/ros%E5%BC%80%E5%8F%91tips/</guid>
      <description>这是我进行ros开发的几个比较有用但是ros-wiki中没有明确点出的。&#xA;使用catkin的清除命令 如果使用rosbuild进行此操作，可以使用：&#xA;如果使用catkin&#xA;执行以上命令后，可以像往常一下构建数据包&#xA;重新构建单独的catkin包 编译单独的包&#xA;ROS image转换为cv::Mat格式，提供opencv使用 http://wiki.ros.org/cv_bridge/Tutorials/ConvertingBetweenROSImagesAndOpenCVImagesPython&#xA;参考 ros入门实践 </description>
    </item>
    <item>
      <title>ROS消息开发</title>
      <link>http://192.168.2.39:1313/2018/01/28/ros%E6%B6%88%E6%81%AF%E5%BC%80%E5%8F%91/</link>
      <pubDate>Sun, 28 Jan 2018 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/2018/01/28/ros%E6%B6%88%E6%81%AF%E5%BC%80%E5%8F%91/</guid>
      <description>ROS常用的消息：http://wiki.ros.org/common_msgs ROS消息wiki：http://wiki.ros.org/msg ROS消息开发参照： csdn http://wiki.ros.org/cn/ROS/Tutorials 定制自己的消息类型：[csdn ]2&#xA;开发自己的消息类型的时候要依据原本的消息类型来定义，定义消息的作用是，定义过的消息可以被python，以及cpp引入。进行开发的时候，可以参考给出的例子进行msg的开发。</description>
    </item>
    <item>
      <title>Tensorflow与Ros进行集成</title>
      <link>http://192.168.2.39:1313/2018/01/28/tensorflow%E4%B8%8Eros%E8%BF%9B%E8%A1%8C%E9%9B%86%E6%88%90/</link>
      <pubDate>Sun, 28 Jan 2018 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/2018/01/28/tensorflow%E4%B8%8Eros%E8%BF%9B%E8%A1%8C%E9%9B%86%E6%88%90/</guid>
      <description>这是一个可以参考的例子。&#xA;还有一个例子是根据他人开发进行修改的，参见这里&#xA;通过这个例子，可以调用Tensorflow – object – detection – API。&#xA;【挖坑】</description>
    </item>
    <item>
      <title>Ubuntu 16.04 install iai-kinect2</title>
      <link>http://192.168.2.39:1313/2017/12/30/ubuntu16-04installiai-kinect2/</link>
      <pubDate>Sat, 30 Dec 2017 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/2017/12/30/ubuntu16-04installiai-kinect2/</guid>
      <description>install libfreenect2, choose the (other) and don’t forget to test bin/Pronect after install.&#xA;ATTENTION: I don’t have NVIDIA or AMD graph card. It might be different if you use them.&#xA;PROBLEM when you face this problem&#xA;run&#xA;roscd kinect2_registrations&#xA;edit CMakeLists.txt, add&#xA;it will work.</description>
    </item>
    <item>
      <title>Ros Kinect Configure Note</title>
      <link>http://192.168.2.39:1313/2017/12/18/roskinectconfigurenote/</link>
      <pubDate>Mon, 18 Dec 2017 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/2017/12/18/roskinectconfigurenote/</guid>
      <description>This blog for my kinect-v2 ros configure.&#xA;Environment Thinkpad P70 Ubuntu 14.04 indigo Reference to https://github.com/code-iai/iai_kinect2&#xA;Install Before start, make sure the cuda, cudnn has been configured correctly.&#xA;First, you need to install libfreenect2.&#xA;I recommend to use export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64 in your .zshrc or .bashrc (more professional, in bash_profile or .zshenv). You will avoid some problems about library error.&#xA;When installing libfreenect2, Use cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/freenect2 -DENABLE_CXX11=ON to generate Makeifle at build/</description>
    </item>
    <item>
      <title>ROS 笔记</title>
      <link>http://192.168.2.39:1313/2017/12/11/ros%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 11 Dec 2017 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/2017/12/11/ros%E7%AC%94%E8%AE%B0/</guid>
      <description>记录一些Ros开发以及学习中的问题&#xA;如何学习机器人 知乎答案 斯坦福大学机器人公开课 以上内容仅供参考；&#xA;Tips Ros中Cpp有而Python没有的 Ros 开发相关 ROS可视化 ROS-MoveIT </description>
    </item>
    <item>
      <title>ROS相关开发</title>
      <link>http://192.168.2.39:1313/?p=230/</link>
      <pubDate>Sun, 03 Dec 2017 01:00:00 +0800</pubDate>
      <guid>http://192.168.2.39:1313/?p=230/</guid>
      <description>ROS is an operating system run on Ubuntu.&#xA;ROS全称为 robot operating system. 是一个机器人操作系统。&#xA;ROS structure rossrv, rosmsg.&#xA;ros-core is roscore.&#xA;Tutorial Content http://wiki.ros.org/cn tools include 3D recognize Professor in ROS ROS Docker http://wiki.ros.org/docker/Tutorials/Docker#Installing_Docker ROS 参考资料 http://rosclub.cn/ http://www.guyuehome.com/blog/ros exbot ROS-Kinect图像处理教程 </description>
    </item>
  </channel>
</rss>
